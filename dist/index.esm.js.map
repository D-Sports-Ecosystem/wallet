{"version":3,"file":"index.esm.js","sources":["../src/utils/event-emitter.ts","../src/core/wallet.ts","../src/providers/custom-social-login.ts","../src/providers/dsports-oauth-service.ts","../src/connectors/rainbow-kit.ts","../src/connectors/wagmi.ts","../src/utils/platform-adapters.ts","../src/index.ts","../node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/fetch-blob/streams.cjs","../node_modules/fetch-blob/index.js","../node_modules/fetch-blob/file.js","../node_modules/formdata-polyfill/esm.min.js","../node_modules/node-fetch/src/errors/base.js","../node_modules/node-fetch/src/errors/fetch-error.js","../node_modules/node-fetch/src/utils/is.js","../node_modules/node-fetch/src/body.js","../node_modules/node-fetch/src/headers.js","../node_modules/node-fetch/src/utils/is-redirect.js","../node_modules/node-fetch/src/response.js","../node_modules/node-fetch/src/utils/referrer.js","../node_modules/node-fetch/src/request.js","../node_modules/node-fetch/src/utils/get-search.js","../node_modules/node-fetch/src/errors/abort-error.js","../node_modules/node-domexception/index.js","../node_modules/fetch-blob/from.js","../node_modules/node-fetch/src/index.js","../node_modules/data-uri-to-buffer/dist/index.js","../node_modules/node-fetch/src/utils/multipart-parser.js"],"sourcesContent":[null,null,null,null,null,null,null,null,"/**\n * @license\n * web-streams-polyfill v3.3.3\n * Copyright 2024 Mattias Buelens, Diwank Singh Tomer and other contributors.\n * This code is released under the MIT license.\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n})(this, (function (exports) { 'use strict';\n\n    function noop() {\n        return undefined;\n    }\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n    function setFunctionName(fn, name) {\n        try {\n            Object.defineProperty(fn, 'name', {\n                value: name,\n                configurable: true\n            });\n        }\n        catch (_a) {\n            // This property is non-configurable in older browsers, so ignore if this throws.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n        }\n    }\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    // https://webidl.spec.whatwg.org/#a-new-promise\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-resolved-with\n    function promiseResolvedWith(value) {\n        return newPromise(resolve => resolve(value));\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-rejected-with\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    // Bluebird logs a warning when a promise is created within a fulfillment handler, but then isn't returned\n    // from that handler. To prevent this, return null instead of void from all handlers.\n    // http://bluebirdjs.com/docs/warning-explanations.html#warning-a-promise-was-created-in-a-handler-but-was-not-returned-from-it\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    let _queueMicrotask = callback => {\n        if (typeof queueMicrotask === 'function') {\n            _queueMicrotask = queueMicrotask;\n        }\n        else {\n            const resolvedPromise = promiseResolvedWith(undefined);\n            _queueMicrotask = cb => PerformPromiseThen(resolvedPromise, cb);\n        }\n        return _queueMicrotask(callback);\n    };\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    const AbortSteps = Symbol('[[AbortSteps]]');\n    const ErrorSteps = Symbol('[[ErrorSteps]]');\n    const CancelSteps = Symbol('[[CancelSteps]]');\n    const PullSteps = Symbol('[[PullSteps]]');\n    const ReleaseSteps = Symbol('[[ReleaseSteps]]');\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        const stream = reader._ownerReadableStream;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        stream._readableStreamController[ReleaseSteps]();\n        stream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamDefaultReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamDefaultReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamDefaultReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    function ReadableStreamDefaultReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n    }\n    function ReadableStreamDefaultReaderErrorReadRequests(reader, e) {\n        const readRequests = reader._readRequests;\n        reader._readRequests = new SimpleQueue();\n        readRequests.forEach(readRequest => {\n            readRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    _queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    var _a, _b, _c;\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    let TransferArrayBuffer = (O) => {\n        if (typeof O.transfer === 'function') {\n            TransferArrayBuffer = buffer => buffer.transfer();\n        }\n        else if (typeof structuredClone === 'function') {\n            TransferArrayBuffer = buffer => structuredClone(buffer, { transfer: [buffer] });\n        }\n        else {\n            // Not implemented correctly\n            TransferArrayBuffer = buffer => buffer;\n        }\n        return TransferArrayBuffer(O);\n    };\n    let IsDetachedBuffer = (O) => {\n        if (typeof O.detached === 'boolean') {\n            IsDetachedBuffer = buffer => buffer.detached;\n        }\n        else {\n            // Not implemented correctly\n            IsDetachedBuffer = buffer => buffer.byteLength === 0;\n        }\n        return IsDetachedBuffer(O);\n    };\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n    function GetMethod(receiver, prop) {\n        const func = receiver[prop];\n        if (func === undefined || func === null) {\n            return undefined;\n        }\n        if (typeof func !== 'function') {\n            throw new TypeError(`${String(prop)} is not a function`);\n        }\n        return func;\n    }\n    function CreateAsyncFromSyncIterator(syncIteratorRecord) {\n        // Instead of re-implementing CreateAsyncFromSyncIterator and %AsyncFromSyncIteratorPrototype%,\n        // we use yield* inside an async generator function to achieve the same result.\n        // Wrap the sync iterator inside a sync iterable, so we can use it with yield*.\n        const syncIterable = {\n            [Symbol.iterator]: () => syncIteratorRecord.iterator\n        };\n        // Create an async generator function and immediately invoke it.\n        const asyncIterator = (async function* () {\n            return yield* syncIterable;\n        }());\n        // Return as an async iterator record.\n        const nextMethod = asyncIterator.next;\n        return { iterator: asyncIterator, nextMethod, done: false };\n    }\n    // Aligns with core-js/modules/es.symbol.async-iterator.js\n    const SymbolAsyncIterator = (_c = (_a = Symbol.asyncIterator) !== null && _a !== void 0 ? _a : (_b = Symbol.for) === null || _b === void 0 ? void 0 : _b.call(Symbol, 'Symbol.asyncIterator')) !== null && _c !== void 0 ? _c : '@@asyncIterator';\n    function GetIterator(obj, hint = 'sync', method) {\n        if (method === undefined) {\n            if (hint === 'async') {\n                method = GetMethod(obj, SymbolAsyncIterator);\n                if (method === undefined) {\n                    const syncMethod = GetMethod(obj, Symbol.iterator);\n                    const syncIteratorRecord = GetIterator(obj, 'sync', syncMethod);\n                    return CreateAsyncFromSyncIterator(syncIteratorRecord);\n                }\n            }\n            else {\n                method = GetMethod(obj, Symbol.iterator);\n            }\n        }\n        if (method === undefined) {\n            throw new TypeError('The object is not iterable');\n        }\n        const iterator = reflectCall(method, obj, []);\n        if (!typeIsObject(iterator)) {\n            throw new TypeError('The iterator method must return an object');\n        }\n        const nextMethod = iterator.next;\n        return { iterator, nextMethod, done: false };\n    }\n    function IteratorNext(iteratorRecord) {\n        const result = reflectCall(iteratorRecord.nextMethod, iteratorRecord.iterator, []);\n        if (!typeIsObject(result)) {\n            throw new TypeError('The iterator.next() method must return an object');\n        }\n        return result;\n    }\n    function IteratorComplete(iterResult) {\n        return Boolean(iterResult.done);\n    }\n    function IteratorValue(iterResult) {\n        return iterResult.value;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    function isDataViewConstructor(ctor) {\n        return ctor === DataView;\n    }\n    function isDataView(view) {\n        return isDataViewConstructor(view.constructor);\n    }\n    function arrayBufferViewElementSize(ctor) {\n        if (isDataViewConstructor(ctor)) {\n            return 1;\n        }\n        return ctor.BYTES_PER_ELEMENT;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) {\n                throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n            }\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n            }\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respond, 'respond');\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respondWithNewView, 'respondWithNewView');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                ReadableByteStreamControllerFillReadRequestFromQueue(this, readRequest);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    minimumFill: 1,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            if (this._pendingPullIntos.length > 0) {\n                const firstPullInto = this._pendingPullIntos.peek();\n                firstPullInto.readerType = 'none';\n                this._pendingPullIntos = new SimpleQueue();\n                this._pendingPullIntos.push(firstPullInto);\n            }\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableByteStreamController.prototype.close, 'close');\n    setFunctionName(ReadableByteStreamController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableByteStreamController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        let clonedChunk;\n        try {\n            clonedChunk = ArrayBufferSlice(buffer, byteOffset, byteOffset + byteLength);\n        }\n        catch (cloneE) {\n            ReadableByteStreamControllerError(controller, cloneE);\n            throw cloneE;\n        }\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, clonedChunk, 0, byteLength);\n    }\n    function ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstDescriptor) {\n        if (firstDescriptor.bytesFilled > 0) {\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, firstDescriptor.buffer, firstDescriptor.byteOffset, firstDescriptor.bytesFilled);\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        const remainderBytes = maxBytesFilled % pullIntoDescriptor.elementSize;\n        const maxAlignedBytes = maxBytesFilled - remainderBytes;\n        // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n        // of the queue, so the underlying source can keep filling it.\n        if (maxAlignedBytes >= pullIntoDescriptor.minimumFill) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller) {\n        const reader = controller._controlledReadableByteStream._reader;\n        while (reader._readRequests.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const readRequest = reader._readRequests.shift();\n            ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest);\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, min, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        const ctor = view.constructor;\n        const elementSize = arrayBufferViewElementSize(ctor);\n        const { byteOffset, byteLength } = view;\n        const minimumFill = min * elementSize;\n        let buffer;\n        try {\n            buffer = TransferArrayBuffer(view.buffer);\n        }\n        catch (e) {\n            readIntoRequest._errorSteps(e);\n            return;\n        }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset,\n            byteLength,\n            bytesFilled: 0,\n            minimumFill,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        if (firstDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n        }\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, pullIntoDescriptor);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n            return;\n        }\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill) {\n            // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n            // of the queue, so the underlying source can keep filling it.\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, pullIntoDescriptor.buffer, end - remainderSize, remainderSize);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const { buffer, byteOffset, byteLength } = chunk;\n        if (IsDetachedBuffer(buffer)) {\n            throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n        }\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n                throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk');\n            }\n            ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n            if (firstPendingPullInto.readerType === 'none') {\n                ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstPendingPullInto);\n            }\n        }\n        if (ReadableStreamHasDefaultReader(stream)) {\n            ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest) {\n        const entry = controller._queue.shift();\n        controller._queueTotalSize -= entry.byteLength;\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n        readRequest._chunkSteps(view);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n    function convertByobReadOptions(options, context) {\n        var _a;\n        assertDictionary(options, context);\n        const min = (_a = options === null || options === void 0 ? void 0 : options.min) !== null && _a !== void 0 ? _a : 1;\n        return {\n            min: convertUnsignedLongLongWithEnforceRange(min, `${context} has member 'min' that`)\n        };\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        read(view, rawOptions = {}) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n            }\n            let options;\n            try {\n                options = convertByobReadOptions(rawOptions, 'options');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const min = options.min;\n            if (min === 0) {\n                return promiseRejectedWith(new TypeError('options.min must be greater than 0'));\n            }\n            if (!isDataView(view)) {\n                if (min > view.length) {\n                    return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s length'));\n                }\n            }\n            else if (min > view.byteLength) {\n                return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s byteLength'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, min, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamBYOBReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamBYOBReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamBYOBReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, min, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, min, readIntoRequest);\n        }\n    }\n    function ReadableStreamBYOBReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n    }\n    function ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e) {\n        const readIntoRequests = reader._readIntoRequests;\n        reader._readIntoRequests = new SimpleQueue();\n        readIntoRequests.forEach(readIntoRequest => {\n            readIntoRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(WritableStream.prototype.abort, 'abort');\n    setFunctionName(WritableStream.prototype.close, 'close');\n    setFunctionName(WritableStream.prototype.getWriter, 'getWriter');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort(reason);\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    setFunctionName(WritableStreamDefaultWriter.prototype.abort, 'abort');\n    setFunctionName(WritableStreamDefaultWriter.prototype.close, 'close');\n    setFunctionName(WritableStreamDefaultWriter.prototype.releaseLock, 'releaseLock');\n    setFunctionName(WritableStreamDefaultWriter.prototype.write, 'write');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n            return null;\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let writeAlgorithm;\n        let closeAlgorithm;\n        let abortAlgorithm;\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        else {\n            writeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        else {\n            closeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        else {\n            abortAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n            return null;\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    function getGlobals() {\n        if (typeof globalThis !== 'undefined') {\n            return globalThis;\n        }\n        else if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        if (ctor.name !== 'DOMException') {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    /**\n     * Support:\n     * - Web browsers\n     * - Node 18 and higher (https://github.com/nodejs/node/commit/e4b1fb5e6422c1ff151234bb9de792d45dd88d87)\n     */\n    function getFromGlobal() {\n        const ctor = globals === null || globals === void 0 ? void 0 : globals.DOMException;\n        return isDOMExceptionConstructor(ctor) ? ctor : undefined;\n    }\n    /**\n     * Support:\n     * - All platforms\n     */\n    function createPolyfill() {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        setFunctionName(ctor, 'DOMException');\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-redeclare\n    const DOMException = getFromGlobal() || createPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = signal.reason !== undefined ? signal.reason : new DOMException('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n                return null;\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                    return null;\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n                return null;\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            // Do nothing.\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultController.prototype.close, 'close');\n    setFunctionName(ReadableStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableStreamDefaultController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n            return null;\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return null;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n                return null;\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, 1, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function isReadableStreamLike(stream) {\n        return typeIsObject(stream) && typeof stream.getReader !== 'undefined';\n    }\n\n    function ReadableStreamFrom(source) {\n        if (isReadableStreamLike(source)) {\n            return ReadableStreamFromDefaultReader(source.getReader());\n        }\n        return ReadableStreamFromIterable(source);\n    }\n    function ReadableStreamFromIterable(asyncIterable) {\n        let stream;\n        const iteratorRecord = GetIterator(asyncIterable, 'async');\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let nextResult;\n            try {\n                nextResult = IteratorNext(iteratorRecord);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const nextPromise = promiseResolvedWith(nextResult);\n            return transformPromiseWith(nextPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.next() method must fulfill with an object');\n                }\n                const done = IteratorComplete(iterResult);\n                if (done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = IteratorValue(iterResult);\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            const iterator = iteratorRecord.iterator;\n            let returnMethod;\n            try {\n                returnMethod = GetMethod(iterator, 'return');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (returnMethod === undefined) {\n                return promiseResolvedWith(undefined);\n            }\n            let returnResult;\n            try {\n                returnResult = reflectCall(returnMethod, iterator, [reason]);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const returnPromise = promiseResolvedWith(returnResult);\n            return transformPromiseWith(returnPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.return() method must fulfill with an object');\n                }\n                return undefined;\n            });\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n    function ReadableStreamFromDefaultReader(reader) {\n        let stream;\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let readPromise;\n            try {\n                readPromise = reader.read();\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            return transformPromiseWith(readPromise, readResult => {\n                if (!typeIsObject(readResult)) {\n                    throw new TypeError('The promise returned by the reader.read() method must fulfill with an object');\n                }\n                if (readResult.done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = readResult.value;\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            try {\n                return promiseResolvedWith(reader.cancel(reason));\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n        [SymbolAsyncIterator](options) {\n            // Stub implementation, overridden below\n            return this.values(options);\n        }\n        /**\n         * Creates a new ReadableStream wrapping the provided iterable or async iterable.\n         *\n         * This can be used to adapt various kinds of objects into a readable stream,\n         * such as an array, an async generator, or a Node.js readable stream.\n         */\n        static from(asyncIterable) {\n            return ReadableStreamFrom(asyncIterable);\n        }\n    }\n    Object.defineProperties(ReadableStream, {\n        from: { enumerable: true }\n    });\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(ReadableStream.from, 'from');\n    setFunctionName(ReadableStream.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStream.prototype.getReader, 'getReader');\n    setFunctionName(ReadableStream.prototype.pipeThrough, 'pipeThrough');\n    setFunctionName(ReadableStream.prototype.pipeTo, 'pipeTo');\n    setFunctionName(ReadableStream.prototype.tee, 'tee');\n    setFunctionName(ReadableStream.prototype.values, 'values');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    Object.defineProperty(ReadableStream.prototype, SymbolAsyncIterator, {\n        value: ReadableStream.prototype.values,\n        writable: true,\n        configurable: true\n    });\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            const readIntoRequests = reader._readIntoRequests;\n            reader._readIntoRequests = new SimpleQueue();\n            readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            const readRequests = reader._readRequests;\n            reader._readRequests = new SimpleQueue();\n            readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n        }\n        else {\n            ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    setFunctionName(byteLengthSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    setFunctionName(countSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            cancel: cancel === undefined ?\n                undefined :\n                convertTransformerCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n    function convertTransformerCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            return TransformStreamDefaultSourceCancelAlgorithm(stream, reason);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        TransformStreamUnblockWrite(stream);\n    }\n    function TransformStreamUnblockWrite(stream) {\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(TransformStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(TransformStreamDefaultController.prototype.error, 'error');\n    setFunctionName(TransformStreamDefaultController.prototype.terminate, 'terminate');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._finishPromise = undefined;\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm;\n        let flushAlgorithm;\n        let cancelAlgorithm;\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        else {\n            transformAlgorithm = chunk => {\n                try {\n                    TransformStreamDefaultControllerEnqueue(controller, chunk);\n                    return promiseResolvedWith(undefined);\n                }\n                catch (transformResultE) {\n                    return promiseRejectedWith(transformResultE);\n                }\n            };\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        else {\n            flushAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (transformer.cancel !== undefined) {\n            cancelAlgorithm = reason => transformer.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _cancelAlgorithm calls readable.cancel() internally,\n        // we don't run the _cancelAlgorithm again.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerError(readable._readableStreamController, reason);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls readable.cancel() internally,\n        // we don't also run the _cancelAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(flushPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerClose(readable._readableStreamController);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    function TransformStreamDefaultSourceCancelAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._writable cannot change after construction, so caching it across a call to user code is safe.\n        const writable = stream._writable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls writable.abort() or\n        // writable.cancel() internally, we don't run the _cancelAlgorithm again, or also run the\n        // _flushAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (writable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, writable._storedError);\n            }\n            else {\n                WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, reason);\n                TransformStreamUnblockWrite(stream);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, r);\n            TransformStreamUnblockWrite(stream);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    function defaultControllerFinishPromiseResolve(controller) {\n        if (controller._finishPromise_resolve === undefined) {\n            return;\n        }\n        controller._finishPromise_resolve();\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function defaultControllerFinishPromiseReject(controller, reason) {\n        if (controller._finishPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(controller._finishPromise);\n        controller._finishPromise_reject(reason);\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n}));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n"],"names":["EventEmitter","constructor","this","events","Map","on","event","listener","has","set","Set","get","add","off","listeners","delete","size","emit","data","forEach","error","console","removeAllListeners","clear","DSportsWallet","config","adapter","super","connectors","state","isConnecting","isReconnecting","isDisconnected","initialize","lastConnector","storage","getItem","reconnect","warn","addConnector","connector","id","handleConnect","handleDisconnect","handleChange","handleError","removeConnector","getConnectors","Array","from","values","getConnector","connect","connectorId","Error","pendingConnector","currentConnector","setItem","createAccount","undefined","disconnect","removeItem","switchChain","chainId","getState","getAccount","account","isConnected","isAuthorized","getChainId","address","chain","walletError","name","message","code","details","CustomSocialLoginProvider","login","provider","authResult","platform","loginReactNative","loginWeb","walletData","generateWalletFromSocial","result","user","token","expiresAt","walletAddress","privateKey","storeLoginResult","authUrl","buildAuthUrl","Promise","resolve","reject","popup","window","open","messageHandler","origin","location","type","removeEventListener","close","payload","addEventListener","checkClosed","setInterval","closed","clearInterval","providers","redirectUri","params","URLSearchParams","client_id","clientId","redirect_uri","response_type","scope","google","facebook","twitter","discord","github","apple","email","sms","generateState","toString","Math","random","substring","socialData","appSecret","TextEncoder","encode","hashBuffer","crypto","sha256","Uint8Array","map","b","padStart","join","ethers","Wallet","logout","clearStoredData","getStoredUser","userStr","JSON","parse","getWalletFromSocial","socialResult","stringify","handleOAuthCallback","url","urlParams","split","parent","postMessage","avatar","Date","now","DSportsOAuthService","getManagedCredentials","clientIds","MANAGED_CREDENTIALS","customDomain","REDIRECT_URIS","environment","isManagedCredentials","Object","includes","getQuickStartConfig","managed","validateProductionConfig","warnings","errors","push","entries","providerConfig","isValid","length","createQuickStartSocialLogin","log","validateSocialLoginConfig","validation","warning","development","staging","production","DSportsRainbowKitConnector","ready","icon","eventEmitter","customSocialLoginProvider","socialLogin","connectWithSocialLogin","storedAccount","localStorage","storedChainId","parseInt","connectorData","generateMockAddress","chains","getProvider","request","async","args","method","repeat","handler","removeListener","getSigner","getAddress","signMessage","signTransaction","transaction","find","c","promptSocialProvider","generateAddressFromSocialLogin","hash","i","charCodeAt","abs","randomBytes","getRandomValues","createDSportsRainbowKitConnector","iconUrl","iconBackground","createConnector","mobile","getUri","DSportsWagmiConnector","getNetwork","sendTransaction","wait","blockHash","blockNumber","transactionHash","status","createDSportsWagmiConnector","dsportsWagmiConnector","connectConfig","accounts","getAccounts","network","nativeCurrency","symbol","decimals","rpcUrls","default","http","public","onAccountsChanged","onChainChanged","onConnect","onDisconnect","webPlatformAdapter","key","value","generateRandomBytes","array","subtle","digest","fetch","options","nextjsPlatformAdapter","floor","require","createHash","update","then","index","reactNativePlatformAdapter","AsyncStorage","bytes","getDefaultPlatformAdapter","next","process","navigator","product","createDSportsWallet","platformAdapter","appName","metadata","appUrl","appIcon","icons","appDescription","description","projectId","theme","wallet","validatedConfig","socialProvider","rainbowKitConnector","wagmiConnector","createDSportsWalletQuickStart","createDSportsRainbowKitConnectorUniversal","createDSportsWagmiConnectorUniversal","dsportsWagmiConnectorUniversal","mainnet","blockExplorers","goerli","testnet","polygon","version","exports","noop","typeIsObject","x","rethrowAssertionErrorRejection","setFunctionName","fn","defineProperty","configurable","_a","originalPromise","originalPromiseThen","prototype","originalPromiseReject","bind","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","_queueMicrotask","callback","queueMicrotask","resolvedPromise","cb","reflectCall","F","V","TypeError","Function","apply","promiseCall","QUEUE_MAX_ARRAY_SIZE","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","element","oldBack","newBack","shift","oldFront","newFront","oldCursor","newCursor","elements","node","peek","front","cursor","AbortSteps","Symbol","ErrorSteps","CancelSteps","PullSteps","ReleaseSteps","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","_readableStreamController","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","defaultReaderClosedPromiseResolve","NumberIsFinite","Number","isFinite","MathTrunc","trunc","v","ceil","isDictionary","assertDictionary","obj","context","assertFunction","isObject","assertObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","integerPart","convertUnsignedLongLongWithEnforceRange","lowerBound","upperBound","MAX_SAFE_INTEGER","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","_errorSteps","e","ReadableStreamDefaultReaderRead","releaseLock","ReadableStreamDefaultReaderRelease","hasOwnProperty","_disturbed","ReadableStreamDefaultReaderErrorReadRequests","readRequests","defineProperties","enumerable","toStringTag","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","return","AcquireReadableStreamAsyncIterator","impl","iterator","create","setPrototypeOf","NumberIsNaN","isNaN","_b","_c","CreateArrayFromList","slice","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","TransferArrayBuffer","O","transfer","buffer","structuredClone","IsDetachedBuffer","detached","byteLength","ArrayBufferSlice","begin","end","ArrayBuffer","GetMethod","receiver","prop","func","String","CreateAsyncFromSyncIterator","syncIteratorRecord","syncIterable","asyncIterator","nextMethod","SymbolAsyncIterator","for","GetIterator","hint","IteratorNext","iteratorRecord","IteratorComplete","iterResult","Boolean","IteratorValue","IsNonNegativeNumber","CloneAsUint8Array","byteOffset","DequeueValue","container","pair","_queue","_queueTotalSize","EnqueueValueWithSize","Infinity","RangeError","PeekQueueValue","ResetQueue","isDataViewConstructor","ctor","DataView","isDataView","view","arrayBufferViewElementSize","BYTES_PER_ELEMENT","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","ReadableByteStreamControllerFillReadRequestFromQueue","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","minimumFill","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","firstPullInto","controller","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerEnqueueClonedChunkToQueue","clonedChunk","cloneE","ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue","firstDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","maxBytesToCopy","min","maxBytesFilled","totalBytesToCopyRemaining","maxAlignedBytes","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerProcessReadRequestsUsingQueue","ReadableByteStreamControllerPullInto","readIntoRequest","ReadableStreamAddReadIntoRequest","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerRespondInReadableState","remainderSize","ReadableByteStreamControllerRespondInternal","_started","firstPendingPullInto","transferredBuffer","ReadableStreamError","entry","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","SetUpReadableByteStreamControllerFromUnderlyingSource","underlyingByteSource","start","pull","convertReaderOptions","mode","convertReadableStreamReaderMode","convertByobReadOptions","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","_readIntoRequests","IsReadableStreamBYOBReader","byobReaderBrandCheckException","rawOptions","ReadableStreamBYOBReaderRead","ReadableStreamBYOBReaderRelease","ReadableStreamBYOBReaderErrorReadIntoRequests","readIntoRequests","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSink","original","abort","write","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","isAbortSignal","aborted","supportsAbortController","AbortController","createAbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","InitializeWritableStream","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","CreateWritableStream","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","WritableStreamDefaultController","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerClose","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","closeSentinel","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","_controlledWritableStream","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","_strategySizeAlgorithm","_writeAlgorithm","_closeAlgorithm","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerAdvanceQueueIfNeeded","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","_readyPromise_resolve","_readyPromise_reject","getGlobals","globalThis","self","global","globals","isDOMExceptionConstructor","getFromGlobal","DOMException","createPolyfill","captureStackTrace","writable","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","all","action","pipeLoop","resolveLoop","rejectLoop","pipeStep","resolveRead","rejectRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamDefaultControllerHasBackpressure","SetUpReadableStreamDefaultController","SetUpReadableStreamDefaultControllerFromUnderlyingSource","underlyingSource","ReadableStreamTee","cloneForBranch2","ReadableByteStreamTee","ReadableStreamDefaultTee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgain","canceled1","canceled2","cancelPromise","chunk1","chunk2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","CreateReadableStream","readAgainForBranch1","readAgainForBranch2","forwardReaderError","thisReader","pullWithDefaultReader","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","otherCanceled","CreateReadableByteStream","isReadableStreamLike","getReader","ReadableStreamFrom","ReadableStreamFromDefaultReader","ReadableStreamFromIterable","asyncIterable","nextResult","returnMethod","returnResult","readPromise","readResult","convertUnderlyingDefaultOrByteSource","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertIteratorOptions","convertPipeOptions","assertAbortSignal","convertReadableWritablePair","readable","ReadableStream","rawUnderlyingSource","InitializeReadableStream","streamBrandCheckException$1","pipeThrough","rawTransform","transform","pipeTo","destination","tee","convertQueuingStrategyInit","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformer","flush","readableType","writableType","convertTransformerCancelCallback","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","_transformStreamController","IsTransformStream","streamBrandCheckException","_readable","_writable","startPromise","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamDefaultSourceCancelAlgorithm","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorWritableAndUnblockWrite","TransformStreamDefaultControllerClearAlgorithms","TransformStreamUnblockWrite","TransformStreamDefaultController","IsTransformStreamDefaultController","defaultControllerBrandCheckException","_controlledTransformStream","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","terminate","TransformStreamDefaultControllerTerminate","SetUpTransformStreamDefaultController","transformAlgorithm","flushAlgorithm","_transformAlgorithm","_flushAlgorithm","_finishPromise","_finishPromise_resolve","_finishPromise_reject","transformResultE","readableController","TransformStreamDefaultControllerPerformTransform","defaultControllerFinishPromiseReject","defaultControllerFinishPromiseResolve","flushPromise","factory","ieee754","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","pow","rt","LN2","base64","base64Js","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","indexOf","tripletToBase64","num","output","require$$0","require$$1","customInspectSymbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","fromString","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","isArray","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","base64clean","dst","alphabet","table","i16","emitWarning","assign","require$$2","Blob","require$$3","blob","ctrl","arrayBuffer","toIterator","clone","part","_Blob","endings","blobParts","encoder","test","text","decoder","TextDecoder","decode","it","relativeStart","relativeEnd","span","added","hasInstance","object","File","lastModified","fileBits","fileName","t","h","f","FormData","o","some","append","filter","l","getAll","keys","FetchBaseError","FetchError","systemError","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","Stream","INTERNALS","Body","body","boundary","types","isAnyArrayBuffer","B","C","p","formDataToBlob","Readable","disturbed","error_","bodyUsed","consumeBody","formData","ct","headers","startsWith","parameters","toFormData","multipartParser","json","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","validateHeaderValue","Headers","raw","isBoxedPrimitive","Proxy","Reflect","thisArg","reduce","property","redirectStatus","isRedirect","Response","contentType","statusText","counter","ok","redirected","redirect","URL","response","stripURLForUseAsAReferrer","originOnly","protocol","username","password","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","endsWith","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","input","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","follow","compress","agent","insecureHTTPParser","referrerPolicy","formatUrl","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","determineRequestsReferrer","lastOffset","href","getSearch","path","AbortError","MessageChannel","port","port1","ab","err","nodeDomexception","stat","fs","supportedSchemas","options_","uri","firstComma","meta","charset","typeFull","unescape","dataUriToBuffer","send","https","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","prependListener","fixResponseChunkedTransferBadEnding","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","orig","hostname","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","parseReferrerPolicyFromHeader","once","pump","responseOptions","statusMessage","codings","zlibOptions","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","writeToStream","catch","S","START_BOUNDARY","HEADER_FIELD_START","HEADER_FIELD","HEADER_VALUE_START","HEADER_VALUE","HEADER_VALUE_ALMOST_DONE","HEADERS_ALMOST_DONE","PART_DATA_START","PART_DATA","END","lower","MultipartParser","flags","onHeaderEnd","onHeaderField","onHeadersEnd","onHeaderValue","onPartBegin","onPartData","onPartEnd","boundaryChars","ui8a","lookbehind","length_","previousIndex","boundaryLength","boundaryEnd","bufferLength","cl","mark","callbackSymbol","dataCallback","markSymbol","_lookbehind","match","parser","headerField","headerValue","entryValue","entryName","filename","entryChunks","appendToFile","appendFileToFormData","file","appendEntryToFormData","_fileName"],"mappings":"yYAAaA,EAAb,WAAAC,GACUC,KAAAC,OAAsC,IAAIC,IAElD,EAAAC,CAAsBC,EAAUC,GACzBL,KAAKC,OAAOK,IAAIF,IACnBJ,KAAKC,OAAOM,IAAIH,EAAO,IAAII,KAE7BR,KAAKC,OAAOQ,IAAIL,GAAQM,IAAIL,GAG9B,GAAAM,CAAuBP,EAAUC,GAC/B,MAAMO,EAAYZ,KAAKC,OAAOQ,IAAIL,GAC9BQ,IACFA,EAAUC,OAAOR,GACM,IAAnBO,EAAUE,MACZd,KAAKC,OAAOY,OAAOT,IAKzB,IAAAW,CAAwBX,EAAUY,GAChC,MAAMJ,EAAYZ,KAAKC,OAAOQ,IAAIL,GAC9BQ,GACFA,EAAUK,QAAQZ,IAChB,IACEA,EAASW,GACT,MAAOE,GACPC,QAAQD,MAAM,2BAA4BA,MAMlD,kBAAAE,CAAsChB,GAChCA,EACFJ,KAAKC,OAAOY,OAAOT,GAEnBJ,KAAKC,OAAOoB,SC1BZ,MAAOC,UAAsBxB,EAOjC,WAAAC,CAAYwB,EAAsBC,GAChCC,QALMzB,KAAA0B,WAA2C,IAAIxB,IAMrDF,KAAKuB,OAASA,EACdvB,KAAKwB,QAAUA,EACfxB,KAAK2B,MAAQ,CACXC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,GAGlB9B,KAAK+B,aAGC,gBAAMA,GAEZ,MAAMC,QAAsBhC,KAAKwB,QAAQS,QAAQC,QAAQ,4BACzD,GAAIF,EAAe,CACjBhC,KAAK2B,MAAME,gBAAiB,EAC5B,UACQ7B,KAAKmC,UAAUH,GACrB,MAAOd,GACPC,QAAQiB,KAAK,0CAA2ClB,GAE1DlB,KAAK2B,MAAME,gBAAiB,GAIzB,YAAAQ,CAAaC,GAClBtC,KAAK0B,WAAWnB,IAAI+B,EAAUC,GAAID,GAGlCA,EAAUnC,GAAG,UAAYa,IACvBhB,KAAKwC,cAAcF,EAAWtB,KAGhCsB,EAAUnC,GAAG,aAAc,KACzBH,KAAKyC,qBAGPH,EAAUnC,GAAG,SAAWa,IACtBhB,KAAK0C,aAAa1B,KAGpBsB,EAAUnC,GAAG,QAAUe,IACrBlB,KAAK2C,YAAYzB,KAId,eAAA0B,CAAgBL,GACrBvC,KAAK0B,WAAWb,OAAO0B,GAGlB,aAAAM,GACL,OAAOC,MAAMC,KAAK/C,KAAK0B,WAAWsB,UAG7B,YAAAC,CAAaV,GAClB,OAAOvC,KAAK0B,WAAWjB,IAAI8B,GAGtB,aAAMW,CAAQC,EAAqB5B,GACxC,MAAMe,EAAYtC,KAAK0B,WAAWjB,IAAI0C,GACtC,IAAKb,EACH,MAAM,IAAIc,MAAM,aAAaD,eAG/BnD,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,iBAAmBF,EAE9B,IACE,MAAMnC,QAAasB,EAAUY,QAAQ3B,GAMrC,OALAvB,KAAKsD,iBAAmBhB,QAGlBtC,KAAKwB,QAAQS,QAAQsB,QAAQ,2BAA4BJ,GAExDnD,KAAKwD,cAAcxC,GAC1B,MAAOE,GAGP,MAFAlB,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,sBAAmBI,EACxBvC,GAIH,gBAAMwC,GACP1D,KAAKsD,yBACDtD,KAAKsD,iBAAiBI,aAC5B1D,KAAKsD,sBAAmBG,SAGpBzD,KAAKwB,QAAQS,QAAQ0B,WAAW,4BACtC3D,KAAKyC,mBAGA,iBAAMmB,CAAYC,GACvB,IAAK7D,KAAKsD,iBACR,MAAM,IAAIF,MAAM,gCAGZpD,KAAKsD,iBAAiBM,YAAYC,GAGnC,QAAAC,GACL,MAAO,IAAK9D,KAAK2B,OAGZ,UAAAoC,GACL,OAAO/D,KAAK2B,MAAMqC,QAGb,WAAAC,GACL,QAASjE,KAAK2B,MAAMqC,SAASC,YAGvB,eAAM9B,CAAUgB,GACtB,MAAMb,EAAYtC,KAAK0B,WAAWjB,IAAI0C,GACtC,GAAKb,EAIL,IAEE,SAD2BA,EAAU4B,eACnB,CAChB,MAAMF,QAAgB1B,EAAUyB,aAC1BF,QAAgBvB,EAAU6B,aAEhCnE,KAAKsD,iBAAmBhB,EACxBtC,KAAK2B,MAAMqC,QAAU,CACnBI,QAASJ,EACTH,UACAI,aAAa,EACb3B,UAAWa,GAEbnD,KAAK2B,MAAMG,gBAAiB,EAE5B9B,KAAKe,KAAK,UAAWf,KAAK2B,MAAMqC,UAElC,MAAO9C,KAKH,aAAAsB,CAAcF,EAA4BtB,GAChDhB,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,sBAAmBI,EAC9BzD,KAAK2B,MAAMG,gBAAiB,EAE5B9B,KAAK2B,MAAMqC,QAAUhE,KAAKwD,cAAcxC,GACxChB,KAAKe,KAAK,UAAWf,KAAK2B,MAAMqC,SAG1B,gBAAAvB,GACNzC,KAAK2B,MAAMqC,aAAUP,EACrBzD,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAME,gBAAiB,EAC5B7B,KAAK2B,MAAMG,gBAAiB,EAC5B9B,KAAK2B,MAAM0B,sBAAmBI,EAC9BzD,KAAK2B,MAAMT,WAAQuC,EAEnBzD,KAAKe,KAAK,cAGJ,YAAA2B,CAAa1B,GACfA,EAAKgD,SAAWhE,KAAK2B,MAAMqC,UAC7BhE,KAAK2B,MAAMqC,QAAQI,QAAUpD,EAAKgD,QAClChE,KAAKe,KAAK,kBAAmB,CAACC,EAAKgD,WAGjChD,EAAKqD,OAASrE,KAAK2B,MAAMqC,UAC3BhE,KAAK2B,MAAMqC,QAAQH,QAAU7C,EAAKqD,MAAM9B,GACxCvC,KAAKe,KAAK,eAAgBC,EAAKqD,MAAM9B,KAIjC,WAAAI,CAAYzB,GAClB,MAAMoD,EAA2B,CAC/BC,KAAMrD,EAAMqD,KACZC,QAAStD,EAAMsD,QACfC,KAAM,eACNC,QAASxD,GAGXlB,KAAK2B,MAAMT,MAAQoD,EACnBtE,KAAKe,KAAK,QAASuD,GAGb,aAAAd,CAAcxC,GACpB,MAAO,CACLoD,QAASpD,EAAKgD,SAAW,GACzBH,QAAS7C,EAAKqD,OAAO9B,IAAM,EAC3B0B,aAAa,EACb3B,UAAWtC,KAAKsD,kBAAkBf,KCjMlC,MAAOoC,UAAkC7E,EAK7C,WAAAC,CAAYwB,EAAiCC,GAC3CC,QACAzB,KAAKuB,OAASA,EACdvB,KAAKwB,QAAUA,EAGV,WAAMoD,CAAMC,GACjB7E,KAAKe,KAAK,aAAc,CAAE8D,aAE1B,IACE,IAAIC,EAGFA,EAD4B,iBAA1B9E,KAAKwB,QAAQuD,eACI/E,KAAKgF,iBAAiBH,SAEtB7E,KAAKiF,SAASJ,GAInC,MAAMK,QAAmBlF,KAAKmF,yBAAyBL,GAEjDM,EAA4B,CAChCP,WACAQ,KAAMP,EAAWO,KACjBC,MAAOR,EAAWQ,MAClBC,UAAWT,EAAWS,UACtBC,cAAeN,EAAWd,QAC1BqB,WAAYP,EAAWO,YAOzB,aAHMzF,KAAK0F,iBAAiBN,GAC5BpF,KAAKe,KAAK,eAAgBqE,GAEnBA,EACP,MAAOlE,GAEP,MADAlB,KAAKe,KAAK,aAAcG,GAClBA,GAIF,cAAM+D,CAASJ,GACrB,MAAMc,EAAU3F,KAAK4F,aAAaf,GAElC,OAAO,IAAIgB,QAAQ,CAACC,EAASC,KAQ3B,GANA/F,KAAKgG,MAAQC,OAAOC,KAClBP,EACA,gBACA,2DACGlC,GAEAzD,KAAKgG,MAER,YADAD,EAAO,IAAI3C,MAAM,+BAKnB,MAAM+C,EAAkB/F,IAClBA,EAAMgG,SAAWH,OAAOI,SAASD,SAEb,kBAApBhG,EAAMY,KAAKsF,MACbL,OAAOM,oBAAoB,UAAWJ,GACtCnG,KAAKgG,OAAOQ,QACZV,EAAQ1F,EAAMY,KAAKyF,UACU,gBAApBrG,EAAMY,KAAKsF,OACpBL,OAAOM,oBAAoB,UAAWJ,GACtCnG,KAAKgG,OAAOQ,QACZT,EAAO,IAAI3C,MAAMhD,EAAMY,KAAKE,WAIhC+E,OAAOS,iBAAiB,UAAWP,GAGnC,MAAMQ,EAAcC,YAAY,KAC1B5G,KAAKgG,OAAOa,SACdC,cAAcH,GACdV,OAAOM,oBAAoB,UAAWJ,GACtCJ,EAAO,IAAI3C,MAAM,6BAElB,OAIC,sBAAM4B,CAAiBH,GACb7E,KAAK4F,aAAaf,GAUlC,IAEE,GAAsB,oBAAXoB,QAAiD,mBAAhBA,OAAOC,KACjD,aAAalG,KAAKiF,SAASJ,GAI7B,MAAM,IAAIzB,MAAM,2FAChB,MAAOlC,GACP,MAAM,IAAIkC,MAAM,8BAA+BlC,EAAgBsD,YAI3D,YAAAoB,CAAaf,GACnB,MAAMtD,EAASvB,KAAKuB,OAAOwF,UAAUlC,GACrC,IAAKtD,EACH,MAAM,IAAI6B,MAAM,YAAYyB,oBAG9B,MAsBMmC,EAAchH,KAAKuB,OAAOyF,aAAe,GAAGf,OAAOI,SAASD,uBAE5Da,EAAS,IAAIC,gBAAgB,CACjCC,UAAW5F,EAAO6F,SAClBC,aAAcL,EACdM,cAAe,OACfC,MAjBa,CACbC,OAAQ,uBACRC,SAAU,uBACVC,QAAS,wBACTC,QAAS,iBACTC,OAAQ,aACRC,MAAO,aACPC,MAAO,GACPC,IAAK,IASSlD,GACdlD,MAAO3B,KAAKgI,kBAGd,MAAO,GAhCU,CACfR,OAAQ,4CACRC,SAAU,8CACVC,QAAS,yCACTC,QAAS,2CACTC,OAAQ,2CACRC,MAAO,2CACPC,MAAO,GACPC,IAAK,IAwBYlD,MAAaoC,EAAOgB,aAGjC,aAAAD,GACN,OAAOE,KAAKC,SAASF,SAAS,IAAIG,UAAU,EAAG,IACxCF,KAAKC,SAASF,SAAS,IAAIG,UAAU,EAAG,IAGzC,8BAAMjD,CAAyBL,GAErC,MAAMuD,EAAa,GAAGvD,EAAWO,KAAK9C,MAAMuC,EAAWO,KAAKyC,SAAS9H,KAAKuB,OAAO+G,WAAa,2BAIxFtH,GADU,IAAIuH,aACCC,OAAOH,GAGtBI,QAAmBzI,KAAKwB,QAAQkH,OAAOC,OAAO3H,GAC9CyE,EAAa,KAAO3C,MAAMC,KAAK,IAAI6F,WAAWH,IACjDI,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,IAKR,MAAO,CACL5E,QAHa,IAAI6E,EAAOC,OAAOzD,GAGfrB,QAChBqB,WAAYA,GAIT,YAAM0D,GACX,UACQnJ,KAAKoJ,kBACXpJ,KAAKe,KAAK,UACV,MAAOG,GAEP,MADAC,QAAQD,MAAM,iBAAkBA,GAC1BA,GAIH,mBAAMmI,GACX,MAAM/D,QAActF,KAAKwB,QAAQS,QAAQC,QAAQ,wBAC3CoH,QAAgBtJ,KAAKwB,QAAQS,QAAQC,QAAQ,uBAEnD,IAAKoD,IAAUgE,EACb,OAAO,KAGT,IACE,MAAMjE,EAAOkE,KAAKC,MAAMF,GACxB,MAAO,CACLzE,SAAUQ,EAAKR,SACfQ,KAAMA,EAAKA,KACXC,QACAC,UAAWF,EAAKE,UAChBC,cAAeH,EAAKG,cACpBC,WAAYJ,EAAKI,YAEnB,MACA,OAAO,MAIJ,yBAAMgE,CAAoBC,GAC/B,GAAIA,EAAajE,WACf,OAAO,IAAIwD,EAAOC,OAAOQ,EAAajE,YAIxC,MAAMP,QAAmBlF,KAAKmF,yBAAyBuE,GACvD,OAAO,IAAIT,EAAOC,OAAOhE,EAAWO,YAG9B,sBAAMC,CAAiBN,SACvBpF,KAAKwB,QAAQS,QAAQsB,QAAQ,uBAAwB6B,EAAOE,aAC5DtF,KAAKwB,QAAQS,QAAQsB,QAAQ,sBAAuBgG,KAAKI,UAAU,CACvE9E,SAAUO,EAAOP,SACjBQ,KAAMD,EAAOC,KACbE,UAAWH,EAAOG,UAClBC,cAAeJ,EAAOI,cACtBC,WAAYL,EAAOK,cAIf,qBAAM2D,SACNpJ,KAAKwB,QAAQS,QAAQ0B,WAAW,8BAChC3D,KAAKwB,QAAQS,QAAQ0B,WAAW,uBAIjC,0BAAOiG,CAAoBC,GAChC,MAAMC,EAAY,IAAI5C,gBAAgB2C,EAAIE,MAAM,KAAK,IAC/CtF,EAAOqF,EAAUrJ,IAAI,QACrBS,EAAQ4I,EAAUrJ,IAAI,SACtBkB,EAAQmI,EAAUrJ,IAAI,SAExBS,EACF+E,OAAO+D,OAAOC,YAAY,CACxB3D,KAAM,cACNpF,MAAOA,GACN+E,OAAOI,SAASD,QAIjB3B,GAGFwB,OAAO+D,OAAOC,YAAY,CACxB3D,KAAM,gBACNG,QAAS,CACPhC,OACA9C,QACA0D,KAAM,CACJ9C,GAAI,eACJuF,MAAO,mBACPvD,KAAM,YACN2F,OAAQ,kCAEV5E,MAAO,oBACPC,UAAW4E,KAAKC,MAAQ,OAEzBnE,OAAOI,SAASD,eChRZiE,EAqBJ,4BAAOC,CAAsB/I,GAIlC,MAAO,CACLgJ,UAAWvK,KAAKwK,oBAChBxD,YAAazF,EAAOkJ,aAChB,WAAWlJ,EAAOkJ,6BAClBzK,KAAK0K,cAAcnJ,EAAOoJ,cAO3B,2BAAOC,CAAqBxD,GACjC,OAAOyD,OAAO7H,OAAOhD,KAAKwK,qBAAqBM,SAAS1D,GAMnD,0BAAO2D,GACZ,MAAMC,EAAUhL,KAAKsK,sBAAsB,CAAEK,YAAa,gBAE1D,MAAO,CACLrC,UAAW,+CACXtB,YAAagE,EAAQhE,YACrBD,UAAW,CACTS,OAAQ,CAAEJ,SAAU4D,EAAQT,UAAU/C,QACtCC,SAAU,CAAEL,SAAU4D,EAAQT,UAAU9C,UACxCC,QAAS,CAAEN,SAAU4D,EAAQT,UAAU7C,SACvCC,QAAS,CAAEP,SAAU4D,EAAQT,UAAU5C,SACvCC,OAAQ,CAAER,SAAU4D,EAAQT,UAAU3C,UAQrC,+BAAOqD,CAAyB1J,GAKrC,MAAM2J,EAAqB,GACrBC,EAAmB,GAmBzB,MAhByB,iDAArB5J,EAAO+G,WACT6C,EAAOC,KAAK,uEAIdP,OAAOQ,QAAQ9J,EAAOwF,WAAa,CAAA,GAAI9F,QAAQ,EAAE4D,EAAUyG,MACrDtL,KAAK4K,qBAAqBU,EAAelE,WAC3C8D,EAASE,KAAK,0BAA0BvG,2EAKxCtD,EAAOyF,aAAezF,EAAOyF,YAAY8D,SAAS,iBACpDI,EAASE,KAAK,4FAGT,CACLG,QAA2B,IAAlBJ,EAAOK,OAChBN,WACAC,oBAMUM,IAId,OAHAtK,QAAQuK,IAAI,gEACZvK,QAAQuK,IAAI,wFAELrB,EAAoBU,qBAC7B,UAGgBY,EAA0BpK,EAAaoJ,EAA4C,eACjG,GAAoB,eAAhBA,EAA8B,CAChC,MAAMiB,EAAavB,EAAoBY,yBAAyB1J,GAEhE,IAAKqK,EAAWL,QAGd,MAFApK,QAAQD,MAAM,sCACd0K,EAAWT,OAAOlK,QAAQC,GAASC,QAAQD,MAAM,OAAOA,MAClD,IAAIkC,MAAM,oCAGdwI,EAAWV,SAASM,OAAS,IAC/BrK,QAAQiB,KAAK,0CACbwJ,EAAWV,SAASjK,QAAQ4K,GAAW1K,QAAQiB,KAAK,OAAOyJ,OAI/D,OAAOtK,CACT,CAxH0B8I,EAAAG,oBAA+C,CAErEhD,OAAQ,kEACRC,SAAU,mBACVC,QAAS,+BACTC,QAAS,+BACTC,OAAQ,+BAIcyC,EAAAK,cAAgB,CACtCoB,YAAa,yCACbC,QAAS,6CACTC,WAAY,4CChBHC,EAoBX,WAAAlM,CAAYwB,GAnBIvB,KAAAuC,GAAK,iBACLvC,KAAAuE,KAAO,kBACPvE,KAAAkM,OAAQ,EACRlM,KAAAmM,KAAO,yaAMfnM,KAAAiE,aAAc,EAEdjE,KAAAoM,aAAe,IAAItM,EASzBE,KAAKuB,OAASA,EACdvB,KAAKqM,0BAA4B9K,EAAO8K,0BAG1C,EAAAlM,CAAoCC,EAAUC,GAC5CL,KAAKoM,aAAajM,GAAGC,EAAOC,GAG9B,GAAAM,CAAqCP,EAAUC,GAC7CL,KAAKoM,aAAazL,IAAIP,EAAOC,GAG/B,aAAM6C,CAAQ3B,GACZ,IACE,GAAIA,GAAQ+K,aAAetM,KAAKqM,0BAC9B,aAAarM,KAAKuM,yBAIpB,MAAMC,EAAgBC,aAAavK,QAAQ,0BACrCwK,EAAgBD,aAAavK,QAAQ,0BAE3C,GAAIsK,GAAiBE,EAAe,CAClC1M,KAAKgE,QAAUwI,EACfxM,KAAK6D,QAAU8I,SAASD,GACxB1M,KAAKiE,aAAc,EAEnB,MAAM2I,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EAIT5M,KAAKgE,QAAUhE,KAAK6M,sBACpB7M,KAAK6D,QAAUtC,GAAQsC,SAAW7D,KAAKuB,OAAOuL,OAAO,IAAIvK,IAAM,EAC/DvC,KAAKiE,aAAc,EAGnBwI,aAAalJ,QAAQ,yBAA0BvD,KAAKgE,SACpDyI,aAAalJ,QAAQ,yBAA0BvD,KAAK6D,QAAQoE,YAE5D,MAAM2E,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EACP,MAAO1L,GAEP,MADAlB,KAAKoM,aAAarL,KAAK,QAASG,GAC1BA,GAIV,gBAAMwC,GACJ,IACE1D,KAAKgE,aAAUP,EACfzD,KAAK6D,aAAUJ,EACfzD,KAAKiE,aAAc,EACnBjE,KAAK6E,cAAWpB,EAGhBgJ,aAAa9I,WAAW,0BACxB8I,aAAa9I,WAAW,0BAExB3D,KAAKoM,aAAarL,KAAK,cACvB,MAAOG,GAEP,MADAlB,KAAKoM,aAAarL,KAAK,QAASG,GAC1BA,GAIV,gBAAM6C,GACJ,IAAK/D,KAAKgE,QACR,MAAM,IAAIZ,MAAM,wBAElB,OAAOpD,KAAKgE,QAGd,gBAAMG,GACJ,IAAKnE,KAAK6D,QACR,MAAM,IAAIT,MAAM,sBAElB,OAAOpD,KAAK6D,QAGd,iBAAMkJ,GA0BJ,OAzBK/M,KAAK6E,WAER7E,KAAK6E,SAAW,CACdmI,QAASC,MAAOC,IACd,OAAQA,EAAKC,QACX,IAAK,sBACH,MAAO,CAACnN,KAAKgE,SACf,IAAK,eACH,OAAOhE,KAAKgE,QAAU,CAAChE,KAAKgE,SAAW,GACzC,IAAK,cACH,MAAO,KAAKhE,KAAK6D,SAASoE,SAAS,MACrC,IAAK,gBACH,MAAO,KAAK,IAAImF,OAAO,OACzB,QACE,MAAM,IAAIhK,MAAM,UAAU8J,EAAKC,0BAGrChN,GAAI,CAACC,EAAeiN,KAClBrN,KAAKG,GAAGC,EAAciN,IAExBC,eAAgB,CAAClN,EAAeiN,KAC9BrN,KAAKW,IAAIP,EAAciN,MAItBrN,KAAK6E,SAGd,eAAM0I,GACJ,MAAM1I,QAAiB7E,KAAK+M,cAC5B,MAAO,CACLS,WAAY,IAAMxN,KAAK+D,aACvB0J,YAAcjJ,GAAoBK,EAASmI,QAAQ,CACjDG,OAAQ,gBACRlG,OAAQ,CAACzC,EAASxE,KAAKgE,WAEzB0J,gBAAkBC,GAET9H,QAAQC,QAAQ,KAAK,IAAIsH,OAAO,SAK7C,kBAAMlJ,GAEJ,QADsBuI,aAAavK,QAAQ,0BAI7C,iBAAM0B,CAAYC,GAEhB,IADc7D,KAAKuB,OAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,GAElD,MAAM,IAAIT,MAAM,SAASS,oBAG3B7D,KAAK6D,QAAUA,EACf4I,aAAalJ,QAAQ,yBAA0BM,EAAQoE,YAEvDjI,KAAKoM,aAAarL,KAAK,SAAU,CAC/BiD,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIsB,GACbgB,SAAU7E,KAAK6E,WAIX,4BAAM0H,GACZ,IAAKvM,KAAKqM,0BACR,MAAM,IAAIjJ,MAAM,+CAIlB,IAAIsG,QAAqB1J,KAAKqM,0BAA0BhD,gBAExD,IAAKK,GAAgBA,EAAanE,UAAY4E,KAAKC,MAAO,CAExD,MAAMvF,QAAiB7E,KAAK8N,uBAC5BpE,QAAqB1J,KAAKqM,0BAA0BzH,MAAMC,GAI5D7E,KAAKgE,QAAU0F,EAAalE,eAAiBxF,KAAK+N,+BAA+BrE,GACjF1J,KAAK6D,QAAU7D,KAAKuB,OAAOuL,OAAO,IAAIvK,IAAM,EAC5CvC,KAAKiE,aAAc,EAGnBwI,aAAalJ,QAAQ,yBAA0BvD,KAAKgE,SACpDyI,aAAalJ,QAAQ,yBAA0BvD,KAAK6D,QAAQoE,YAE5D,MAAM2E,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EAGD,0BAAMkB,GAGZ,MAAO,SAGD,8BAAAC,CAA+BrE,GAErC,MAAM1I,EAAO,GAAG0I,EAAa7E,YAAY6E,EAAarE,KAAK9C,KAC3D,IAAIyL,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIjN,EAAKwK,OAAQyC,IAAK,CAEpCD,GAASA,GAAQ,GAAKA,EADThN,EAAKkN,WAAWD,GAE7BD,GAAcA,EAKhB,MAAO,KADK9F,KAAKiG,IAAIH,GAAM/F,SAAS,IAAIc,SAAS,EAAG,OAClC,IAAIqE,OAAO,MAGvB,mBAAAP,GAEN,MAAMuB,EAAc,IAAIxF,WAAW,IAEnC,OADAF,OAAO2F,gBAAgBD,GAChB,KAAOtL,MAAMC,KAAKqL,GACtBvF,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,KAKN,SAAUsF,EAAiC/M,GAC/C,MAAO,KAAA,CACLgB,GAAI,iBACJgC,KAAM,kBACNgK,QAAS,yaACTC,eAAgB,UAChBC,gBAAiB,KAGR,CACLnM,UAHgB,IAAI2J,EAA2B1K,GAI/CmN,OAAQ,CACNC,OAAQ1B,SAEC,+BAMnB,OCvQa2B,EAoBX,WAAA7O,CAAYwB,GAnBIvB,KAAAuC,GAAK,iBACLvC,KAAAuE,KAAO,kBACPvE,KAAAkM,OAAQ,EACRlM,KAAAmM,KAAO,yaAMfnM,KAAAiE,aAAc,EAEdjE,KAAAoM,aAAe,IAAItM,EASzBE,KAAKuB,OAASA,EACdvB,KAAKqM,0BAA4B9K,EAAO8K,0BAG1C,EAAAlM,CAAoCC,EAAUC,GAC5CL,KAAKoM,aAAajM,GAAGC,EAAOC,GAG9B,GAAAM,CAAqCP,EAAUC,GAC7CL,KAAKoM,aAAazL,IAAIP,EAAOC,GAG/B,aAAM6C,CAAQ3B,GACZ,IACE,GAAIA,GAAQ+K,aAAetM,KAAKqM,0BAC9B,aAAarM,KAAKuM,yBAIpB,MAAMC,EAAgBC,aAAavK,QAAQ,yBACrCwK,EAAgBD,aAAavK,QAAQ,yBAE3C,GAAIsK,GAAiBE,EAAe,CAClC1M,KAAKgE,QAAUwI,EACfxM,KAAK6D,QAAU8I,SAASD,GACxB1M,KAAKiE,aAAc,EAEnB,MAAM2I,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EAIT5M,KAAKgE,QAAUhE,KAAK6M,sBACpB7M,KAAK6D,QAAUtC,GAAQsC,SAAW7D,KAAKuB,OAAOuL,OAAO,IAAIvK,IAAM,EAC/DvC,KAAKiE,aAAc,EAGnBwI,aAAalJ,QAAQ,wBAAyBvD,KAAKgE,SACnDyI,aAAalJ,QAAQ,wBAAyBvD,KAAK6D,QAAQoE,YAE3D,MAAM2E,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EACP,MAAO1L,GAEP,MADAlB,KAAKoM,aAAarL,KAAK,QAASG,GAC1BA,GAIV,gBAAMwC,GACJ,IACE1D,KAAKgE,aAAUP,EACfzD,KAAK6D,aAAUJ,EACfzD,KAAKiE,aAAc,EACnBjE,KAAK6E,cAAWpB,EAGhBgJ,aAAa9I,WAAW,yBACxB8I,aAAa9I,WAAW,yBAExB3D,KAAKoM,aAAarL,KAAK,cACvB,MAAOG,GAEP,MADAlB,KAAKoM,aAAarL,KAAK,QAASG,GAC1BA,GAIV,gBAAM6C,GACJ,IAAK/D,KAAKgE,QACR,MAAM,IAAIZ,MAAM,wBAElB,OAAOpD,KAAKgE,QAGd,gBAAMG,GACJ,IAAKnE,KAAK6D,QACR,MAAM,IAAIT,MAAM,sBAElB,OAAOpD,KAAK6D,QAGd,iBAAMkJ,GAoCJ,OAnCK/M,KAAK6E,WAER7E,KAAK6E,SAAW,CACdmI,QAASC,MAAOC,IACd,OAAQA,EAAKC,QACX,IAAK,sBACH,MAAO,CAACnN,KAAKgE,SACf,IAAK,eACH,OAAOhE,KAAKgE,QAAU,CAAChE,KAAKgE,SAAW,GACzC,IAAK,cACH,MAAO,KAAKhE,KAAK6D,SAASoE,SAAS,MACrC,IAAK,iBACH,MAAO,qBACT,IAAK,sBACH,MAAO,KAAK,IAAImF,OAAO,MACzB,IAAK,gBAEL,IAAK,uBACH,MAAO,KAAK,IAAIA,OAAO,OACzB,QACE,MAAM,IAAIhK,MAAM,UAAU8J,EAAKC,0BAGrChN,GAAI,CAACC,EAAeiN,KAClBrN,KAAKG,GAAGC,EAAciN,IAExBC,eAAgB,CAAClN,EAAeiN,KAC9BrN,KAAKW,IAAIP,EAAciN,IAGzBpJ,YAAa,IAAMjE,KAAKiE,YACxB4K,WAAY,KAAA,CAAShL,QAAS7D,KAAK6D,UACnC0J,UAAW,IAAMvN,KAAKuN,cAGnBvN,KAAK6E,SAGd,eAAM0I,GACJ,MAAM1I,QAAiB7E,KAAK+M,cAC5B,MAAO,CACLS,WAAY,IAAMxN,KAAK+D,aACvBI,WAAY,IAAMnE,KAAKmE,aACvBsJ,YAAcjJ,GAAoBK,EAASmI,QAAQ,CACjDG,OAAQ,gBACRlG,OAAQ,CAACzC,EAASxE,KAAKgE,WAEzB0J,gBAAkBC,GACT9H,QAAQC,QAAQ,KAAK,IAAIsH,OAAO,QAEzC0B,gBAAkBnB,GACT9H,QAAQC,QAAQ,CACrBkI,KAAM,KAAK,IAAIZ,OAAO,MACtB2B,KAAM,IAAMlJ,QAAQC,QAAQ,CAC1BkJ,UAAW,KAAK,IAAI5B,OAAO,MAC3B6B,YAAa,MACbC,gBAAiB,KAAK,IAAI9B,OAAO,MACjC+B,OAAQ,OAOlB,kBAAMjL,GAEJ,QADsBuI,aAAavK,QAAQ,yBAI7C,iBAAM0B,CAAYC,GAEhB,IADc7D,KAAKuB,OAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,GAElD,MAAM,IAAIT,MAAM,SAASS,oBAG3B7D,KAAK6D,QAAUA,EACf4I,aAAalJ,QAAQ,wBAAyBM,EAAQoE,YAEtDjI,KAAKoM,aAAarL,KAAK,SAAU,CAC/BiD,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIsB,GACbgB,SAAU7E,KAAK6E,WAIX,4BAAM0H,GACZ,IAAKvM,KAAKqM,0BACR,MAAM,IAAIjJ,MAAM,+CAIlB,IAAIsG,QAAqB1J,KAAKqM,0BAA0BhD,gBAExD,IAAKK,GAAgBA,EAAanE,UAAY4E,KAAKC,MAAO,CAExD,MAAMvF,QAAiB7E,KAAK8N,uBAC5BpE,QAAqB1J,KAAKqM,0BAA0BzH,MAAMC,GAI5D7E,KAAKgE,QAAU0F,EAAalE,eAAiBxF,KAAK+N,+BAA+BrE,GACjF1J,KAAK6D,QAAU7D,KAAKuB,OAAOuL,OAAO,IAAIvK,IAAM,EAC5CvC,KAAKiE,aAAc,EAGnBwI,aAAalJ,QAAQ,wBAAyBvD,KAAKgE,SACnDyI,aAAalJ,QAAQ,wBAAyBvD,KAAK6D,QAAQoE,YAE3D,MAAM2E,EAA+B,CACnC5I,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKoM,aAAarL,KAAK,UAAW6L,GAC3BA,EAGD,0BAAMkB,GAGZ,MAAO,SAGD,8BAAAC,CAA+BrE,GAErC,MAAM1I,EAAO,GAAG0I,EAAa7E,YAAY6E,EAAarE,KAAK9C,WAC3D,IAAIyL,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIjN,EAAKwK,OAAQyC,IAAK,CAEpCD,GAASA,GAAQ,GAAKA,EADThN,EAAKkN,WAAWD,GAE7BD,GAAcA,EAKhB,MAAO,KADK9F,KAAKiG,IAAIH,GAAM/F,SAAS,IAAIc,SAAS,EAAG,OAClC,IAAIqE,OAAO,MAGvB,mBAAAP,GAEN,MAAMuB,EAAc,IAAIxF,WAAW,IAEnC,OADAF,OAAO2F,gBAAgBD,GAChB,KAAOtL,MAAMC,KAAKqL,GACtBvF,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,KAKN,SAAUoG,EAA4B7N,GAC1C,OAAO,IAAIqN,EAAsBrN,EACnC,CAGM,SAAU8N,EAAsB9N,GACpC,MAAO,KAAA,CACLgB,GAAI,iBACJgC,KAAM,kBACN+B,KAAM,iBACN6F,KAAM,yaACDjJ,QAAS+J,MAAOqC,IAClB,MAAMhN,EAAY,IAAIsM,EAAsBrN,GACtCP,QAAasB,EAAUY,QAAQoM,GACrC,MAAO,CACLC,SAAU,CAACvO,EAAKgD,SAChBH,QAAS7C,EAAKqD,OAAO9B,IAAM,IAGhCmB,WAAYuJ,YAGZuC,YAAavC,UACX,MAAM3K,EAAY,IAAIsM,EAAsBrN,GAE5C,MAAO,OADee,EAAUyB,eAGlCI,WAAY8I,UACV,MAAM3K,EAAY,IAAIsM,EAAsBrN,GAC5C,aAAae,EAAU6B,cAEzB4I,YAAaE,UACX,MAAM3K,EAAY,IAAIsM,EAAsBrN,GAC5C,aAAae,EAAUyK,eAEzB7I,aAAc+I,UACZ,MAAM3K,EAAY,IAAIsM,EAAsBrN,GAC5C,aAAae,EAAU4B,gBAEzBN,YAAaqJ,MAAOpJ,IAClB,MAAMvB,EAAY,IAAIsM,EAAsBrN,GAE5C,aADMe,EAAUsB,YAAYC,GACrB,CACLtB,GAAIsB,EACJU,KAAMhD,EAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,IAAUU,MAAQ,UACzDkL,QAASlO,EAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,IAAU4L,SAAW,UAC/DC,eAAgBnO,EAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,IAAU6L,gBAAkB,CAC3EnL,KAAM,QACNoL,OAAQ,MACRC,SAAU,IAEZC,QAAStO,EAAOuL,OAAOc,KAAKC,GAAKA,EAAEtL,KAAOsB,IAAUgM,SAAW,CAC7DC,QAAS,CAAEC,KAAM,CAAC,4BAClBC,OAAQ,CAAED,KAAM,CAAC,+BAIvBE,kBAAoBV,MAGpBW,eAAiBrM,MAGjBsM,UAAYnP,MAGZoP,aAAc,QAIlB,CC3VO,MAAMC,EAAsC,CACjDtL,SAAU,MACV9C,QAAS,CACPC,QAAS+K,MAAOqD,IACd,IACE,OAAO7D,aAAavK,QAAQoO,GAC5B,MACA,OAAO,OAGX/M,QAAS0J,MAAOqD,EAAaC,KAC3B,IACE9D,aAAalJ,QAAQ+M,EAAKC,GAC1B,SAIJ5M,WAAYsJ,MAAOqD,IACjB,IACE7D,aAAa9I,WAAW2M,GACxB,UAKN5H,OAAQ,CACN8H,oBAAsB1P,IACpB,MAAM2P,EAAQ,IAAI7H,WAAW9H,GAE7B,OADA4H,OAAO2F,gBAAgBoC,GAChBA,GAET9H,OAAQsE,MAAOjM,IACb,MAAMyH,QAAmBC,OAAOgI,OAAOC,OAAO,UAAW3P,GACzD,OAAO,IAAI4H,WAAWH,KAG1BgH,QAAS,CACPmB,MAAO3D,MAAOpD,EAAagH,IAClBD,MAAM/G,EAAKgH,KAMXC,EAAyC,CACpD/L,SAAU,SACV9C,QAAS,CACPC,QAAS+K,MAAOqD,IACd,IACE,MAAsB,oBAAXrK,OACFwG,aAAavK,QAAQoO,GAEvB,KACP,MACA,OAAO,OAGX/M,QAAS0J,MAAOqD,EAAaC,KAC3B,IACwB,oBAAXtK,QACTwG,aAAalJ,QAAQ+M,EAAKC,GAE5B,SAIJ5M,WAAYsJ,MAAOqD,IACjB,IACwB,oBAAXrK,QACTwG,aAAa9I,WAAW2M,GAE1B,UAKN5H,OAAQ,CACN8H,oBAAsB1P,IACpB,MAAM2P,EAAQ,IAAI7H,WAAW9H,GAC7B,GAAsB,oBAAXmF,QAA0BA,OAAOyC,OAC1CA,OAAO2F,gBAAgBoC,QAGvB,IAAK,IAAIxC,EAAI,EAAGA,EAAInN,EAAMmN,IACxBwC,EAAMxC,GAAK/F,KAAK6I,MAAsB,IAAhB7I,KAAKC,UAG/B,OAAOsI,GAET9H,OAAQsE,MAAOjM,IACb,GAAsB,oBAAXiF,QAA0BA,OAAOyC,QAAUzC,OAAOyC,OAAOgI,OAAQ,CAC1E,MAAMjI,QAAmBC,OAAOgI,OAAOC,OAAO,UAAW3P,GACzD,OAAO,IAAI4H,WAAWH,GACjB,CAEL,MACMuF,EADSgD,QAAQ,UACHC,WAAW,UAE/B,OADAjD,EAAKkD,OAAOlQ,GACL,IAAI4H,WAAWoF,EAAK2C,aAIjClB,QAAS,CACPmB,MAAO3D,MAAOpD,EAAagH,KACzB,GAAsB,oBAAX5K,OACT,OAAO2K,MAAM/G,EAAKgH,GACb,CAEL,MAAQf,QAASc,SAAgB/K,QAAAC,UAAAqL,KAAA,WAAA,OAAAC,EAAA,GACjC,OAAOR,EAAM/G,EAAKgH,OAObQ,EAA8C,CACzDtM,SAAU,eACV9C,QAAS,CACPC,QAAS+K,MAAOqD,IACd,IACE,MAAMgB,EAAeN,QAAQ,6CAA6ClB,QAC1E,aAAawB,EAAapP,QAAQoO,GAClC,MACA,OAAO,OAGX/M,QAAS0J,MAAOqD,EAAaC,KAC3B,IACE,MAAMe,EAAeN,QAAQ,6CAA6ClB,cACpEwB,EAAa/N,QAAQ+M,EAAKC,GAChC,SAIJ5M,WAAYsJ,MAAOqD,IACjB,IACE,MAAMgB,EAAeN,QAAQ,6CAA6ClB,cACpEwB,EAAa3N,WAAW2M,GAC9B,UAKN5H,OAAQ,CACN8H,oBAAsB1P,IACpB,MAAM2P,EAAQ,IAAI7H,WAAW9H,GAC7B,IAEE,MACMyQ,EADSP,QAAQ,UACF5C,YAAYtN,GACjC,IAAK,IAAImN,EAAI,EAAGA,EAAInN,EAAMmN,IACxBwC,EAAMxC,GAAKsD,EAAMtD,GAEnB,MAEA,IAAK,IAAIA,EAAI,EAAGA,EAAInN,EAAMmN,IACxBwC,EAAMxC,GAAK/F,KAAK6I,MAAsB,IAAhB7I,KAAKC,UAG/B,OAAOsI,GAET9H,OAAQsE,MAAOjM,IACb,IACE,MACMgN,EADSgD,QAAQ,UACHC,WAAW,UAE/B,OADAjD,EAAKkD,OAAOlQ,GACL,IAAI4H,WAAWoF,EAAK2C,UAC3B,MAEA,MAAM,IAAIvN,MAAM,gDAItBqM,QAAS,CACPmB,MAAO3D,MAAOpD,EAAagH,IAClBD,MAAM/G,EAAKgH,cAMRW,IACd,MAAsB,oBAAXvL,YAEkB,IAAhBA,OAAOwL,MAA2C,oBAAZC,QACxCZ,EAEFT,EAGkB,oBAAdsB,WAAmD,gBAAtBA,UAAUC,QACzCP,EAEFP,CAEX,CCtJM,SAAUe,EAAoBhB,GAClC,MAAMiB,EAAkBN,IAElBjQ,EAAuB,CAC3BwQ,QAASlB,EAAQmB,UAAUzN,MAAQ,eACnC0N,OAAQpB,EAAQmB,UAAUnI,IAC1BqI,QAASrB,EAAQmB,UAAUG,QAAQ,GACnCC,eAAgBvB,EAAQmB,UAAUK,YAClCC,UAAWzB,EAAQyB,UACnBxF,OAAQ+D,EAAQ/D,OAChBR,YAAauE,EAAQvE,YACrBiG,MAAO1B,EAAQ0B,OAGXC,EAAS,IAAIlR,EAAcC,EAAQuQ,GAGzC,GAAIjB,EAAQvE,YAAa,CAEvB,MAAMmG,EAAkB5B,EAAQlG,YAC5BgB,EAA0BkF,EAAQvE,YAAauE,EAAQlG,aACvDkG,EAAQvE,YAENoG,EAAiB,IAAI/N,EAA0B8N,EAAiBX,GAGhEa,EAAsB,IAAI1G,EAA2B,CACzDa,OAAQ+D,EAAQ/D,OAChBwF,UAAWzB,EAAQyB,UACnBP,QAASxQ,EAAOwQ,QAChBG,QAAS3Q,EAAO2Q,QAChBE,eAAgB7Q,EAAO6Q,eACvBH,OAAQ1Q,EAAO0Q,OACf3F,YAAamG,EACbpG,0BAA2BqG,IAGvBE,EAAiB,IAAIhE,EAAsB,CAC/C9B,OAAQ+D,EAAQ/D,OAChBwF,UAAWzB,EAAQyB,UACnBN,SAAUnB,EAAQmB,SAClB1F,YAAamG,EACbpG,0BAA2BqG,IAG7BF,EAAOnQ,aAAasQ,GACpBH,EAAOnQ,aAAauQ,OACf,CAEL,MAAMD,EAAsB,IAAI1G,EAA2B,CACzDa,OAAQ+D,EAAQ/D,OAChBwF,UAAWzB,EAAQyB,UACnBP,QAASxQ,EAAOwQ,QAChBG,QAAS3Q,EAAO2Q,QAChBE,eAAgB7Q,EAAO6Q,eACvBH,OAAQ1Q,EAAO0Q,SAGXW,EAAiB,IAAIhE,EAAsB,CAC/C9B,OAAQ+D,EAAQ/D,OAChBwF,UAAWzB,EAAQyB,UACnBN,SAAUnB,EAAQmB,WAGpBQ,EAAOnQ,aAAasQ,GACpBH,EAAOnQ,aAAauQ,GAGtB,OAAOJ,CACT,CAGM,SAAUK,EAA8BhC,GAK5C,OAJA1P,QAAQuK,IAAI,uDACZvK,QAAQuK,IAAI,wEACZvK,QAAQuK,IAAI,0EAELmG,EAAoB,IACtBhB,EACHvE,YAAab,IACbd,YAAa,eAEjB,CAGM,SAAUmI,EAA0CjC,GACxD,MAAMiB,EAAkBN,IAClBkB,EAAiB7B,EAAQvE,YAC7B,IAAI3H,EAA0BkM,EAAQvE,YAAawF,QACnDrO,EAEF,OAAO6K,EAAiC,IACnCuC,EACHxE,0BAA2BqG,GAE/B,CAGM,SAAUK,EAAqClC,GACnD,MAAMiB,EAAkBN,IAClBkB,EAAiB7B,EAAQvE,YAC7B,IAAI3H,EAA0BkM,EAAQvE,YAAawF,QACnDrO,EAEF,OAAO2L,EAA4B,IAC9ByB,EACHxE,0BAA2BqG,GAE/B,CAGM,SAAUM,EAA+BnC,GAC7C,MAAMiB,EAAkBN,IAClBkB,EAAiB7B,EAAQvE,YAC7B,IAAI3H,EAA0BkM,EAAQvE,YAAawF,QACnDrO,EAEF,OAAO4L,EAAsB,IACxBwB,EACHxE,0BAA2BqG,GAE/B,CAGO,MAAMO,EAAU,CACrB1Q,GAAI,EACJgC,KAAM,WACNkL,QAAS,YACTC,eAAgB,CAAEnL,KAAM,QAASoL,OAAQ,MAAOC,SAAU,IAC1DC,QAAS,CACPC,QAAS,CAAEC,KAAM,CAAC,8CAClBC,OAAQ,CAAED,KAAM,CAAC,+CAEnBmD,eAAgB,CACdpD,QAAS,CAAEvL,KAAM,YAAasF,IAAK,0BAI1BsJ,EAAS,CACpB5Q,GAAI,EACJgC,KAAM,SACNkL,QAAS,SACTC,eAAgB,CAAEnL,KAAM,eAAgBoL,OAAQ,MAAOC,SAAU,IACjEC,QAAS,CACPC,QAAS,CAAEC,KAAM,CAAC,6CAClBC,OAAQ,CAAED,KAAM,CAAC,8CAEnBmD,eAAgB,CACdpD,QAAS,CAAEvL,KAAM,YAAasF,IAAK,gCAErCuJ,SAAS,GAGEC,EAAU,CACrB9Q,GAAI,IACJgC,KAAM,UACNkL,QAAS,QACTC,eAAgB,CAAEnL,KAAM,QAASoL,OAAQ,QAASC,SAAU,IAC5DC,QAAS,CACPC,QAAS,CAAEC,KAAM,CAAC,4BAClBC,OAAQ,CAAED,KAAM,CAAC,6BAEnBmD,eAAgB,CACdpD,QAAS,CAAEvL,KAAM,cAAesF,IAAK,6BAK5ByJ,EAAU,+MC9MhB,SAAaC,GAEhB,SAASC,IAEb,CAEI,SAASC,EAAaC,GAClB,MAAqB,iBAANA,GAAwB,OAANA,GAA4B,mBAANA,CAC/D,CACI,MAAMC,EAAiCH,EACvC,SAASI,EAAgBC,EAAItP,GACzB,IACIsG,OAAOiJ,eAAeD,EAAI,OAAQ,CAC9BtD,MAAOhM,EACPwP,cAAc,GAE9B,CACQ,MAAOC,GAGf,CACA,CAEI,MAAMC,EAAkBpO,QAClBqO,EAAsBrO,QAAQsO,UAAUhD,KACxCiD,EAAwBvO,QAAQE,OAAOsO,KAAKJ,GAElD,SAASK,EAAWC,GAChB,OAAO,IAAIN,EAAgBM,EACnC,CAEI,SAASC,EAAoBjE,GACzB,OAAO+D,EAAWxO,GAAWA,EAAQyK,GAC7C,CAEI,SAASkE,EAAoBC,GACzB,OAAON,EAAsBM,EACrC,CACI,SAASC,EAAmBC,EAASC,EAAaC,GAG9C,OAAOZ,EAAoBa,KAAKH,EAASC,EAAaC,EAC9D,CAII,SAASE,EAAYJ,EAASC,EAAaC,GACvCH,EAAmBA,EAAmBC,EAASC,EAAaC,QAAarR,EAAWkQ,EAC5F,CACI,SAASsB,EAAgBL,EAASC,GAC9BG,EAAYJ,EAASC,EAC7B,CACI,SAASK,EAAcN,EAASE,GAC5BE,EAAYJ,OAASnR,EAAWqR,EACxC,CACI,SAASK,EAAqBP,EAASQ,EAAoBC,GACvD,OAAOV,EAAmBC,EAASQ,EAAoBC,EAC/D,CACI,SAASC,EAA0BV,GAC/BD,EAAmBC,OAASnR,EAAWkQ,EAC/C,CACI,IAAI4B,EAAkBC,IAClB,GAA8B,mBAAnBC,eACPF,EAAkBE,mBAEjB,CACD,MAAMC,EAAkBlB,OAAoB/Q,GAC5C8R,EAAkBI,GAAMhB,EAAmBe,EAAiBC,EACxE,CACQ,OAAOJ,EAAgBC,IAE3B,SAASI,EAAYC,EAAGC,EAAG5I,GACvB,GAAiB,mBAAN2I,EACP,MAAM,IAAIE,UAAU,8BAExB,OAAOC,SAAS7B,UAAU8B,MAAMlB,KAAKc,EAAGC,EAAG5I,EACnD,CACI,SAASgJ,EAAYL,EAAGC,EAAG5I,GACvB,IACI,OAAOsH,EAAoBoB,EAAYC,EAAGC,EAAG5I,GACzD,CACQ,MAAOqD,GACH,OAAOkE,EAAoBlE,EACvC,CACA,CAII,MAAM4F,EAAuB,MAO7B,MAAMC,EACF,WAAArW,GACIC,KAAKqW,QAAU,EACfrW,KAAKsW,MAAQ,EAEbtW,KAAKuW,OAAS,CACVC,UAAW,GACXC,WAAOhT,GAEXzD,KAAK0W,MAAQ1W,KAAKuW,OAIlBvW,KAAKqW,QAAU,EAEfrW,KAAKsW,MAAQ,CACzB,CACQ,UAAI9K,GACA,OAAOxL,KAAKsW,KACxB,CAKQ,IAAAlL,CAAKuL,GACD,MAAMC,EAAU5W,KAAK0W,MACrB,IAAIG,EAAUD,EACVA,EAAQJ,UAAUhL,SAAW2K,EAAuB,IACpDU,EAAU,CACNL,UAAW,GACXC,WAAOhT,IAKfmT,EAAQJ,UAAUpL,KAAKuL,GACnBE,IAAYD,IACZ5W,KAAK0W,MAAQG,EACbD,EAAQH,MAAQI,KAElB7W,KAAKsW,KACnB,CAGQ,KAAAQ,GACI,MAAMC,EAAW/W,KAAKuW,OACtB,IAAIS,EAAWD,EACf,MAAME,EAAYjX,KAAKqW,QACvB,IAAIa,EAAYD,EAAY,EAC5B,MAAME,EAAWJ,EAASP,UACpBG,EAAUQ,EAASF,GAazB,OAZIC,IAAcf,IACda,EAAWD,EAASN,MACpBS,EAAY,KAGdlX,KAAKsW,MACPtW,KAAKqW,QAAUa,EACXH,IAAaC,IACbhX,KAAKuW,OAASS,GAGlBG,EAASF,QAAaxT,EACfkT,CACnB,CASQ,OAAA1V,CAAQuU,GACJ,IAAIvH,EAAIjO,KAAKqW,QACTe,EAAOpX,KAAKuW,OACZY,EAAWC,EAAKZ,UACpB,OAAOvI,IAAMkJ,EAAS3L,aAAyB/H,IAAf2T,EAAKX,OAC7BxI,IAAMkJ,EAAS3L,SACf4L,EAAOA,EAAKX,MACZU,EAAWC,EAAKZ,UAChBvI,EAAI,EACoB,IAApBkJ,EAAS3L,UAIjBgK,EAAS2B,EAASlJ,MAChBA,CAElB,CAGQ,IAAAoJ,GACI,MAAMC,EAAQtX,KAAKuW,OACbgB,EAASvX,KAAKqW,QACpB,OAAOiB,EAAMd,UAAUe,EACnC,EAGI,MAAMC,EAAaC,OAAO,kBACpBC,EAAaD,OAAO,kBACpBE,EAAcF,OAAO,mBACrBG,EAAYH,OAAO,iBACnBI,EAAeJ,OAAO,oBAE5B,SAASK,EAAsCC,EAAQC,GACnDD,EAAOE,qBAAuBD,EAC9BA,EAAOE,QAAUH,EACK,aAAlBC,EAAOG,OACPC,EAAqCL,GAEd,WAAlBC,EAAOG,OACZE,EAA+CN,GAG/CO,EAA+CP,EAAQC,EAAOO,aAE1E,CAGI,SAASC,EAAkCT,EAAQrD,GAE/C,OAAO+D,GADQV,EAAOE,qBACcvD,EAC5C,CACI,SAASgE,EAAmCX,GACxC,MAAMC,EAASD,EAAOE,qBACA,aAAlBD,EAAOG,OACPQ,EAAiCZ,EAAQ,IAAIhC,UAAU,qFAGvD6C,EAA0Cb,EAAQ,IAAIhC,UAAU,qFAEpEiC,EAAOa,0BAA0BhB,KACjCG,EAAOE,aAAUzU,EACjBsU,EAAOE,0BAAuBxU,CACtC,CAEI,SAASqV,EAAoBvU,GACzB,OAAO,IAAIwR,UAAU,UAAYxR,EAAO,oCAChD,CAEI,SAAS6T,EAAqCL,GAC1CA,EAAOgB,eAAiBzE,EAAW,CAACxO,EAASC,KACzCgS,EAAOiB,uBAAyBlT,EAChCiS,EAAOkB,sBAAwBlT,GAE3C,CACI,SAASuS,EAA+CP,EAAQrD,GAC5D0D,EAAqCL,GACrCY,EAAiCZ,EAAQrD,EACjD,CACI,SAAS2D,EAA+CN,GACpDK,EAAqCL,GACrCmB,EAAkCnB,EAC1C,CACI,SAASY,EAAiCZ,EAAQrD,QACTjR,IAAjCsU,EAAOkB,wBAGX3D,EAA0ByC,EAAOgB,gBACjChB,EAAOkB,sBAAsBvE,GAC7BqD,EAAOiB,4BAAyBvV,EAChCsU,EAAOkB,2BAAwBxV,EACvC,CACI,SAASmV,EAA0Cb,EAAQrD,GACvD4D,EAA+CP,EAAQrD,EAC/D,CACI,SAASwE,EAAkCnB,QACDtU,IAAlCsU,EAAOiB,yBAGXjB,EAAOiB,4BAAuBvV,GAC9BsU,EAAOiB,4BAAyBvV,EAChCsU,EAAOkB,2BAAwBxV,EACvC,CAII,MAAM0V,EAAiBC,OAAOC,UAAY,SAAU3F,GAChD,MAAoB,iBAANA,GAAkB2F,SAAS3F,IAKvC4F,EAAYpR,KAAKqR,OAAS,SAAUC,GACtC,OAAOA,EAAI,EAAItR,KAAKuR,KAAKD,GAAKtR,KAAK6I,MAAMyI,IAI7C,SAASE,EAAahG,GAClB,MAAoB,iBAANA,GAA+B,mBAANA,CAC/C,CACI,SAASiG,EAAiBC,EAAKC,GAC3B,QAAYpW,IAARmW,IAAsBF,EAAaE,GACnC,MAAM,IAAI7D,UAAU,GAAG8D,sBAEnC,CAEI,SAASC,EAAepG,EAAGmG,GACvB,GAAiB,mBAANnG,EACP,MAAM,IAAIqC,UAAU,GAAG8D,uBAEnC,CAEI,SAASE,EAASrG,GACd,MAAqB,iBAANA,GAAwB,OAANA,GAA4B,mBAANA,CAC/D,CACI,SAASsG,EAAatG,EAAGmG,GACrB,IAAKE,EAASrG,GACV,MAAM,IAAIqC,UAAU,GAAG8D,sBAEnC,CACI,SAASI,EAAuBvG,EAAGwG,EAAUL,GACzC,QAAUpW,IAANiQ,EACA,MAAM,IAAIqC,UAAU,aAAamE,qBAA4BL,MAEzE,CACI,SAASM,EAAoBzG,EAAG0G,EAAOP,GACnC,QAAUpW,IAANiQ,EACA,MAAM,IAAIqC,UAAU,GAAGqE,qBAAyBP,MAE5D,CAEI,SAASQ,EAA0B9J,GAC/B,OAAO6I,OAAO7I,EACtB,CACI,SAAS+J,EAAmB5G,GACxB,OAAa,IAANA,EAAU,EAAIA,CAC7B,CACI,SAAS6G,EAAY7G,GACjB,OAAO4G,EAAmBhB,EAAU5F,GAC5C,CAEI,SAAS8G,EAAwCjK,EAAOsJ,GACpD,MAAMY,EAAa,EACbC,EAAatB,OAAOuB,iBAC1B,IAAIjH,EAAI0F,OAAO7I,GAEf,GADAmD,EAAI4G,EAAmB5G,IAClByF,EAAezF,GAChB,MAAM,IAAIqC,UAAU,GAAG8D,4BAG3B,GADAnG,EAAI6G,EAAY7G,GACZA,EAAI+G,GAAc/G,EAAIgH,EACtB,MAAM,IAAI3E,UAAU,GAAG8D,sCAA4CY,QAAiBC,gBAExF,OAAKvB,EAAezF,IAAY,IAANA,EAOnBA,EANI,CAOnB,CAEI,SAASkH,EAAqBlH,EAAGmG,GAC7B,IAAKgB,GAAiBnH,GAClB,MAAM,IAAIqC,UAAU,GAAG8D,6BAEnC,CAGI,SAASiB,EAAmC9C,GACxC,OAAO,IAAI+C,GAA4B/C,EAC/C,CAEI,SAASgD,EAA6BhD,EAAQiD,GAC1CjD,EAAOE,QAAQgD,cAAc9P,KAAK6P,EAC1C,CACI,SAASE,GAAiCnD,EAAQoD,EAAOC,GACrD,MACMJ,EADSjD,EAAOE,QACKgD,cAAcpE,QACrCuE,EACAJ,EAAYK,cAGZL,EAAYM,YAAYH,EAEpC,CACI,SAASI,GAAiCxD,GACtC,OAAOA,EAAOE,QAAQgD,cAAc1P,MAC5C,CACI,SAASiQ,GAA+BzD,GACpC,MAAMD,EAASC,EAAOE,QACtB,YAAezU,IAAXsU,KAGC2D,GAA8B3D,EAI3C,CAMI,MAAMgD,GACF,WAAAhb,CAAYiY,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,+BAClC4C,EAAqB5C,EAAQ,mBACzB2D,GAAuB3D,GACvB,MAAM,IAAIjC,UAAU,+EAExB+B,EAAsC9X,KAAMgY,GAC5ChY,KAAKkb,cAAgB,IAAI9E,CACrC,CAKQ,UAAIvP,GACA,OAAK6U,GAA8B1b,MAG5BA,KAAK+Y,eAFDtE,EAAoBmH,GAAiC,UAG5E,CAIQ,MAAAC,CAAOnH,OAASjR,GACZ,OAAKiY,GAA8B1b,WAGDyD,IAA9BzD,KAAKiY,qBACExD,EAAoBqE,EAAoB,WAE5CN,EAAkCxY,KAAM0U,GALpCD,EAAoBmH,GAAiC,UAM5E,CAMQ,IAAAE,GACI,IAAKJ,GAA8B1b,MAC/B,OAAOyU,EAAoBmH,GAAiC,SAEhE,QAAkCnY,IAA9BzD,KAAKiY,qBACL,OAAOxD,EAAoBqE,EAAoB,cAEnD,IAAIiD,EACAC,EACJ,MAAMpH,EAAUN,EAAW,CAACxO,EAASC,KACjCgW,EAAiBjW,EACjBkW,EAAgBjW,IAEdkV,EAAc,CAChBM,YAAaH,GAASW,EAAe,CAAExL,MAAO6K,EAAOC,MAAM,IAC3DC,YAAa,IAAMS,EAAe,CAAExL,WAAO9M,EAAW4X,MAAM,IAC5DY,YAAaC,GAAKF,EAAcE,IAGpC,OADAC,GAAgCnc,KAAMib,GAC/BrG,CACnB,CAUQ,WAAAwH,GACI,IAAKV,GAA8B1b,MAC/B,MAAM4b,GAAiC,oBAETnY,IAA9BzD,KAAKiY,sBAGToE,GAAmCrc,KAC/C,EAkBI,SAAS0b,GAA8BhI,GACnC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,kBAGtCA,aAAaqH,EAC5B,CACI,SAASoB,GAAgCpE,EAAQkD,GAC7C,MAAMjD,EAASD,EAAOE,qBACtBD,EAAOuE,YAAa,EACE,WAAlBvE,EAAOG,OACP8C,EAAYK,cAEW,YAAlBtD,EAAOG,OACZ8C,EAAYgB,YAAYjE,EAAOO,cAG/BP,EAAOa,0BAA0BjB,GAAWqD,EAExD,CACI,SAASoB,GAAmCtE,GACxCW,EAAmCX,GAEnCyE,GAA6CzE,EADnC,IAAIhC,UAAU,uBAEhC,CACI,SAASyG,GAA6CzE,EAAQmE,GAC1D,MAAMO,EAAe1E,EAAOmD,cAC5BnD,EAAOmD,cAAgB,IAAI9E,EAC3BqG,EAAaxb,QAAQga,IACjBA,EAAYgB,YAAYC,IAEpC,CAEI,SAASN,GAAiCrX,GACtC,OAAO,IAAIwR,UAAU,yCAAyCxR,sDACtE,CArDIsG,OAAO6R,iBAAiB3B,GAA4B5G,UAAW,CAC3D0H,OAAQ,CAAEc,YAAY,GACtBb,KAAM,CAAEa,YAAY,GACpBP,YAAa,CAAEO,YAAY,GAC3B9V,OAAQ,CAAE8V,YAAY,KAE1B/I,EAAgBmH,GAA4B5G,UAAU0H,OAAQ,UAC9DjI,EAAgBmH,GAA4B5G,UAAU2H,KAAM,QAC5DlI,EAAgBmH,GAA4B5G,UAAUiI,YAAa,eACjC,iBAAvB3E,OAAOmF,aACd/R,OAAOiJ,eAAeiH,GAA4B5G,UAAWsD,OAAOmF,YAAa,CAC7ErM,MAAO,8BACPwD,cAAc,IA6CtB,MAAM8I,GAAyBhS,OAAOiS,eAAejS,OAAOiS,eAAe7P,kBAAmB,GAAKkH,WAGnG,MAAM4I,GACF,WAAAhd,CAAYgY,EAAQiF,GAChBhd,KAAKid,qBAAkBxZ,EACvBzD,KAAKkd,aAAc,EACnBld,KAAKkY,QAAUH,EACf/X,KAAKmd,eAAiBH,CAClC,CACQ,IAAAvL,GACI,MAAM2L,EAAY,IAAMpd,KAAKqd,aAI7B,OAHArd,KAAKid,gBAAkBjd,KAAKid,gBACxB9H,EAAqBnV,KAAKid,gBAAiBG,EAAWA,GACtDA,IACGpd,KAAKid,eACxB,CACQ,OAAO1M,GACH,MAAM+M,EAAc,IAAMtd,KAAKud,aAAahN,GAC5C,OAAOvQ,KAAKid,gBACR9H,EAAqBnV,KAAKid,gBAAiBK,EAAaA,GACxDA,GAChB,CACQ,UAAAD,GACI,GAAIrd,KAAKkd,YACL,OAAOrX,QAAQC,QAAQ,CAAEyK,WAAO9M,EAAW4X,MAAM,IAErD,MAAMtD,EAAS/X,KAAKkY,QACpB,IAAI6D,EACAC,EACJ,MAAMpH,EAAUN,EAAW,CAACxO,EAASC,KACjCgW,EAAiBjW,EACjBkW,EAAgBjW,IAuBpB,OADAoW,GAAgCpE,EApBZ,CAChBwD,YAAaH,IACTpb,KAAKid,qBAAkBxZ,EAGvB8R,EAAgB,IAAMwG,EAAe,CAAExL,MAAO6K,EAAOC,MAAM,MAE/DC,YAAa,KACTtb,KAAKid,qBAAkBxZ,EACvBzD,KAAKkd,aAAc,EACnBxE,EAAmCX,GACnCgE,EAAe,CAAExL,WAAO9M,EAAW4X,MAAM,KAE7CY,YAAavH,IACT1U,KAAKid,qBAAkBxZ,EACvBzD,KAAKkd,aAAc,EACnBxE,EAAmCX,GACnCiE,EAActH,MAIfE,CACnB,CACQ,YAAA2I,CAAahN,GACT,GAAIvQ,KAAKkd,YACL,OAAOrX,QAAQC,QAAQ,CAAEyK,QAAO8K,MAAM,IAE1Crb,KAAKkd,aAAc,EACnB,MAAMnF,EAAS/X,KAAKkY,QACpB,IAAKlY,KAAKmd,eAAgB,CACtB,MAAM/X,EAASoT,EAAkCT,EAAQxH,GAEzD,OADAmI,EAAmCX,GAC5B5C,EAAqB/P,EAAQ,KAAA,CAASmL,QAAO8K,MAAM,IAC1E,CAEY,OADA3C,EAAmCX,GAC5BvD,EAAoB,CAAEjE,QAAO8K,MAAM,GACtD,EAEI,MAAMmC,GAAuC,CACzC,IAAA/L,GACI,OAAKgM,GAA8Bzd,MAG5BA,KAAK0d,mBAAmBjM,OAFpBgD,EAAoBkJ,GAAuC,UAI1E,OAAOpN,GACH,OAAKkN,GAA8Bzd,MAG5BA,KAAK0d,mBAAmBE,OAAOrN,GAF3BkE,EAAoBkJ,GAAuC,UAGlF,GAII,SAASE,GAAmC7F,EAAQgF,GAChD,MAAMjF,EAAS+C,EAAmC9C,GAC5C8F,EAAO,IAAIf,GAAgChF,EAAQiF,GACnDe,EAAWlT,OAAOmT,OAAOR,IAE/B,OADAO,EAASL,mBAAqBI,EACvBC,CACf,CACI,SAASN,GAA8B/J,GACnC,IAAKD,EAAaC,GACd,OAAO,EAEX,IAAK7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,sBACzC,OAAO,EAEX,IAEI,OAAOA,EAAEgK,8BACLX,EAChB,CACQ,MAAO/I,GACH,OAAO,CACnB,CACA,CAEI,SAAS2J,GAAuCpZ,GAC5C,OAAO,IAAIwR,UAAU,+BAA+BxR,qDAC5D,CA5BIsG,OAAOoT,eAAeT,GAAsCX,IAgC5D,MAAMqB,GAAc9E,OAAO+E,OAAS,SAAUzK,GAE1C,OAAOA,GAAMA,GAGjB,IAAIM,GAAIoK,GAAIC,GACZ,SAASC,GAAoBnH,GAGzB,OAAOA,EAASoH,OACxB,CACI,SAASC,GAAmBC,EAAMC,EAAYC,EAAKC,EAAWC,GAC1D,IAAIjW,WAAW6V,GAAMle,IAAI,IAAIqI,WAAW+V,EAAKC,EAAWC,GAAIH,EACpE,CACI,IAAII,GAAuBC,IAEnBD,GADsB,mBAAfC,EAAEC,SACaC,GAAUA,EAAOD,WAEP,mBAApBE,gBACUD,GAAUC,gBAAgBD,EAAQ,CAAED,SAAU,CAACC,KAI/CA,GAAUA,EAE7BH,GAAoBC,IAE3BI,GAAoBJ,IAEhBI,GADsB,kBAAfJ,EAAEK,SACUH,GAAUA,EAAOG,SAIjBH,GAAgC,IAAtBA,EAAOI,WAEjCF,GAAiBJ,IAE5B,SAASO,GAAiBL,EAAQM,EAAOC,GAGrC,GAAIP,EAAOV,MACP,OAAOU,EAAOV,MAAMgB,EAAOC,GAE/B,MAAMhU,EAASgU,EAAMD,EACfhB,EAAQ,IAAIkB,YAAYjU,GAE9B,OADAgT,GAAmBD,EAAO,EAAGU,EAAQM,EAAO/T,GACrC+S,CACf,CACI,SAASmB,GAAUC,EAAUC,GACzB,MAAMC,EAAOF,EAASC,GACtB,GAAIC,QAAJ,CAGA,GAAoB,mBAATA,EACP,MAAM,IAAI9J,UAAU,GAAG+J,OAAOF,wBAElC,OAAOC,CAJf,CAKA,CACI,SAASE,GAA4BC,GAIjC,MAAMC,EAAe,CACjB,CAACxI,OAAOsG,UAAW,IAAMiC,EAAmBjC,UAG1CmC,EAAiBjT,kBACnB,aAAcgT,CAC1B,CAF2B,GAKnB,MAAO,CAAElC,SAAUmC,EAAeC,WADfD,EAAczO,KACa4J,MAAM,EAC5D,CAEI,MAAM+E,GAA6L,QAAtK/B,GAAqC,QAA/BrK,GAAKyD,OAAOyI,qBAAkC,IAAPlM,GAAgBA,GAA2B,QAArBoK,GAAK3G,OAAO4I,WAAwB,IAAPjC,QAAgB,EAASA,GAAGrJ,KAAK0C,OAAQ,+BAA4C,IAAP4G,GAAgBA,GAAK,kBAChO,SAASiC,GAAY1G,EAAK2G,EAAO,OAAQpT,GACrC,QAAe1J,IAAX0J,EACA,GAAa,UAAToT,GAEA,QAAe9c,KADf0J,EAASuS,GAAU9F,EAAKwG,KAIpB,OAAOL,GADoBO,GAAY1G,EAAK,OADzB8F,GAAU9F,EAAKnC,OAAOsG,iBAM7C5Q,EAASuS,GAAU9F,EAAKnC,OAAOsG,UAGvC,QAAeta,IAAX0J,EACA,MAAM,IAAI4I,UAAU,8BAExB,MAAMgI,EAAWnI,EAAYzI,EAAQyM,EAAK,IAC1C,IAAKnG,EAAasK,GACd,MAAM,IAAIhI,UAAU,6CAGxB,MAAO,CAAEgI,WAAUoC,WADApC,EAAStM,KACG4J,MAAM,EAC7C,CACI,SAASmF,GAAaC,GAClB,MAAMrb,EAASwQ,EAAY6K,EAAeN,WAAYM,EAAe1C,SAAU,IAC/E,IAAKtK,EAAarO,GACd,MAAM,IAAI2Q,UAAU,oDAExB,OAAO3Q,CACf,CACI,SAASsb,GAAiBC,GACtB,OAAOC,QAAQD,EAAWtF,KAClC,CACI,SAASwF,GAAcF,GACnB,OAAOA,EAAWpQ,KAC1B,CAEI,SAASuQ,GAAoBtH,GACzB,QAAiB,iBAANA,GAGP0E,GAAY1E,IAGZA,EAAI,EAIhB,CACI,SAASuH,GAAkBhC,GACvB,MAAME,EAASK,GAAiBP,EAAEE,OAAQF,EAAEiC,WAAYjC,EAAEiC,WAAajC,EAAEM,YACzE,OAAO,IAAIzW,WAAWqW,EAC9B,CAEI,SAASgC,GAAaC,GAClB,MAAMC,EAAOD,EAAUE,OAAOtK,QAK9B,OAJAoK,EAAUG,iBAAmBF,EAAKrgB,KAC9BogB,EAAUG,gBAAkB,IAC5BH,EAAUG,gBAAkB,GAEzBF,EAAK5Q,KACpB,CACI,SAAS+Q,GAAqBJ,EAAW3Q,EAAOzP,GAC5C,IAAKggB,GAAoBhgB,IAASA,IAASygB,IACvC,MAAM,IAAIC,WAAW,wDAEzBN,EAAUE,OAAOhW,KAAK,CAAEmF,QAAOzP,SAC/BogB,EAAUG,iBAAmBvgB,CACrC,CACI,SAAS2gB,GAAeP,GAEpB,OADaA,EAAUE,OAAO/J,OAClB9G,KACpB,CACI,SAASmR,GAAWR,GAChBA,EAAUE,OAAS,IAAIhL,EACvB8K,EAAUG,gBAAkB,CACpC,CAEI,SAASM,GAAsBC,GAC3B,OAAOA,IAASC,QACxB,CACI,SAASC,GAAWC,GAChB,OAAOJ,GAAsBI,EAAKhiB,YAC1C,CACI,SAASiiB,GAA2BJ,GAChC,OAAID,GAAsBC,GACf,EAEJA,EAAKK,iBACpB,CAOI,MAAMC,GACF,WAAAniB,GACI,MAAM,IAAIgW,UAAU,sBAChC,CAIQ,QAAIgM,GACA,IAAKI,GAA4BniB,MAC7B,MAAMoiB,GAA+B,QAEzC,OAAOpiB,KAAKqiB,KACxB,CACQ,OAAAC,CAAQC,GACJ,IAAKJ,GAA4BniB,MAC7B,MAAMoiB,GAA+B,WAIzC,GAFAnI,EAAuBsI,EAAc,EAAG,WACxCA,EAAe/H,EAAwC+H,EAAc,wBAChB9e,IAAjDzD,KAAKwiB,wCACL,MAAM,IAAIzM,UAAU,0CAExB,GAAIoJ,GAAiBnf,KAAKqiB,MAAMpD,QAC5B,MAAM,IAAIlJ,UAAU,mFAExB0M,GAAoCziB,KAAKwiB,wCAAyCD,EAC9F,CACQ,kBAAAG,CAAmBX,GACf,IAAKI,GAA4BniB,MAC7B,MAAMoiB,GAA+B,sBAGzC,GADAnI,EAAuB8H,EAAM,EAAG,uBAC3BtC,YAAYkD,OAAOZ,GACpB,MAAM,IAAIhM,UAAU,gDAExB,QAAqDtS,IAAjDzD,KAAKwiB,wCACL,MAAM,IAAIzM,UAAU,0CAExB,GAAIoJ,GAAiB4C,EAAK9C,QACtB,MAAM,IAAIlJ,UAAU,iFAExB6M,GAA+C5iB,KAAKwiB,wCAAyCT,EACzG,EAEIlX,OAAO6R,iBAAiBwF,GAA0B/N,UAAW,CACzDmO,QAAS,CAAE3F,YAAY,GACvB+F,mBAAoB,CAAE/F,YAAY,GAClCoF,KAAM,CAAEpF,YAAY,KAExB/I,EAAgBsO,GAA0B/N,UAAUmO,QAAS,WAC7D1O,EAAgBsO,GAA0B/N,UAAUuO,mBAAoB,sBACtC,iBAAvBjL,OAAOmF,aACd/R,OAAOiJ,eAAeoO,GAA0B/N,UAAWsD,OAAOmF,YAAa,CAC3ErM,MAAO,4BACPwD,cAAc,IAQtB,MAAM8O,GACF,WAAA9iB,GACI,MAAM,IAAIgW,UAAU,sBAChC,CAIQ,eAAI+M,GACA,IAAKC,GAA+B/iB,MAChC,MAAMgjB,GAAwC,eAElD,OAAOC,GAA2CjjB,KAC9D,CAKQ,eAAIkjB,GACA,IAAKH,GAA+B/iB,MAChC,MAAMgjB,GAAwC,eAElD,OAAOG,GAA2CnjB,KAC9D,CAKQ,KAAAwG,GACI,IAAKuc,GAA+B/iB,MAChC,MAAMgjB,GAAwC,SAElD,GAAIhjB,KAAKojB,gBACL,MAAM,IAAIrN,UAAU,8DAExB,MAAMpU,EAAQ3B,KAAKqjB,8BAA8BlL,OACjD,GAAc,aAAVxW,EACA,MAAM,IAAIoU,UAAU,kBAAkBpU,8DAE1C2hB,GAAkCtjB,KAC9C,CACQ,OAAAujB,CAAQnI,GACJ,IAAK2H,GAA+B/iB,MAChC,MAAMgjB,GAAwC,WAGlD,GADA/I,EAAuBmB,EAAO,EAAG,YAC5BqE,YAAYkD,OAAOvH,GACpB,MAAM,IAAIrF,UAAU,sCAExB,GAAyB,IAArBqF,EAAMiE,WACN,MAAM,IAAItJ,UAAU,uCAExB,GAAgC,IAA5BqF,EAAM6D,OAAOI,WACb,MAAM,IAAItJ,UAAU,gDAExB,GAAI/V,KAAKojB,gBACL,MAAM,IAAIrN,UAAU,gCAExB,MAAMpU,EAAQ3B,KAAKqjB,8BAA8BlL,OACjD,GAAc,aAAVxW,EACA,MAAM,IAAIoU,UAAU,kBAAkBpU,mEAE1C6hB,GAAoCxjB,KAAMob,EACtD,CAIQ,KAAAla,CAAMgb,OAAIzY,GACN,IAAKsf,GAA+B/iB,MAChC,MAAMgjB,GAAwC,SAElDS,GAAkCzjB,KAAMkc,EACpD,CAEQ,CAACvE,GAAajD,GACVgP,GAAkD1jB,MAClD0hB,GAAW1hB,MACX,MAAMoF,EAASpF,KAAK2jB,iBAAiBjP,GAErC,OADAkP,GAA4C5jB,MACrCoF,CACnB,CAEQ,CAACwS,GAAWqD,GACR,MAAMjD,EAAShY,KAAKqjB,8BACpB,GAAIrjB,KAAKqhB,gBAAkB,EAEvB,YADAwC,GAAqD7jB,KAAMib,GAG/D,MAAM6I,EAAwB9jB,KAAK+jB,uBACnC,QAA8BtgB,IAA1BqgB,EAAqC,CACrC,IAAI7E,EACJ,IACIA,EAAS,IAAIQ,YAAYqE,EAC7C,CACgB,MAAOE,GAEH,YADA/I,EAAYgB,YAAY+H,EAE5C,CACgB,MAAMC,EAAqB,CACvBhF,SACAiF,iBAAkBJ,EAClB9C,WAAY,EACZ3B,WAAYyE,EACZK,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,gBAAiB1b,WACjB2b,WAAY,WAEhBvkB,KAAKwkB,kBAAkBpZ,KAAK6Y,EAC5C,CACYjJ,EAA6BhD,EAAQiD,GACrCwJ,GAA6CzkB,KACzD,CAEQ,CAAC6X,KACG,GAAI7X,KAAKwkB,kBAAkBhZ,OAAS,EAAG,CACnC,MAAMkZ,EAAgB1kB,KAAKwkB,kBAAkBnN,OAC7CqN,EAAcH,WAAa,OAC3BvkB,KAAKwkB,kBAAoB,IAAIpO,EAC7BpW,KAAKwkB,kBAAkBpZ,KAAKsZ,EAC5C,CACA,EAmBI,SAAS3B,GAA+BrP,GACpC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,kCAGtCA,aAAamP,EAC5B,CACI,SAASV,GAA4BzO,GACjC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,4CAGtCA,aAAawO,EAC5B,CACI,SAASuC,GAA6CE,GAC/BC,GAA2CD,KAI1DA,EAAWE,SACXF,EAAWG,YAAa,GAG5BH,EAAWE,UAAW,EAGtB7P,EADoB2P,EAAWI,iBACN,KACrBJ,EAAWE,UAAW,EAClBF,EAAWG,aACXH,EAAWG,YAAa,EACxBL,GAA6CE,IAE1C,MACRzI,IACCuH,GAAkCkB,EAAYzI,GACvC,QAEnB,CACI,SAASwH,GAAkDiB,GACvDK,GAAkDL,GAClDA,EAAWH,kBAAoB,IAAIpO,CAC3C,CACI,SAAS6O,GAAqDjN,EAAQiM,GAClE,IAAI5I,GAAO,EACW,WAAlBrD,EAAOG,SACPkD,GAAO,GAEX,MAAM6J,EAAaC,GAAsDlB,GACnC,YAAlCA,EAAmBM,WACnBpJ,GAAiCnD,EAAQkN,EAAY7J,GAGrD+J,GAAqCpN,EAAQkN,EAAY7J,EAErE,CACI,SAAS8J,GAAsDlB,GAC3D,MAAME,EAAcF,EAAmBE,YACjCE,EAAcJ,EAAmBI,YACvC,OAAO,IAAIJ,EAAmBK,gBAAgBL,EAAmBhF,OAAQgF,EAAmBjD,WAAYmD,EAAcE,EAC9H,CACI,SAASgB,GAAgDV,EAAY1F,EAAQ+B,EAAY3B,GACrFsF,EAAWvD,OAAOhW,KAAK,CAAE6T,SAAQ+B,aAAY3B,eAC7CsF,EAAWtD,iBAAmBhC,CACtC,CACI,SAASiG,GAAsDX,EAAY1F,EAAQ+B,EAAY3B,GAC3F,IAAIkG,EACJ,IACIA,EAAcjG,GAAiBL,EAAQ+B,EAAYA,EAAa3B,EAC5E,CACQ,MAAOmG,GAEH,MADA/B,GAAkCkB,EAAYa,GACxCA,CAClB,CACQH,GAAgDV,EAAYY,EAAa,EAAGlG,EACpF,CACI,SAASoG,GAA2Dd,EAAYe,GACxEA,EAAgBvB,YAAc,GAC9BmB,GAAsDX,EAAYe,EAAgBzG,OAAQyG,EAAgB1E,WAAY0E,EAAgBvB,aAE1IwB,GAAiDhB,EACzD,CACI,SAASiB,GAA4DjB,EAAYV,GAC7E,MAAM4B,EAAiB3d,KAAK4d,IAAInB,EAAWtD,gBAAiB4C,EAAmB5E,WAAa4E,EAAmBE,aACzG4B,EAAiB9B,EAAmBE,YAAc0B,EACxD,IAAIG,EAA4BH,EAC5B3Z,GAAQ,EACZ,MACM+Z,EAAkBF,EADDA,EAAiB9B,EAAmBI,YAIvD4B,GAAmBhC,EAAmBG,cACtC4B,EAA4BC,EAAkBhC,EAAmBE,YACjEjY,GAAQ,GAEZ,MAAMga,EAAQvB,EAAWvD,OACzB,KAAO4E,EAA4B,GAAG,CAClC,MAAMG,EAAcD,EAAM7O,OACpB+O,EAAcle,KAAK4d,IAAIE,EAA2BG,EAAY9G,YAC9DgH,EAAYpC,EAAmBjD,WAAaiD,EAAmBE,YACrE3F,GAAmByF,EAAmBhF,OAAQoH,EAAWF,EAAYlH,OAAQkH,EAAYnF,WAAYoF,GACjGD,EAAY9G,aAAe+G,EAC3BF,EAAMpP,SAGNqP,EAAYnF,YAAcoF,EAC1BD,EAAY9G,YAAc+G,GAE9BzB,EAAWtD,iBAAmB+E,EAC9BE,GAAuD3B,EAAYyB,EAAanC,GAChF+B,GAA6BI,CACzC,CACQ,OAAOla,CACf,CACI,SAASoa,GAAuD3B,EAAY7jB,EAAMmjB,GAC9EA,EAAmBE,aAAerjB,CAC1C,CACI,SAASylB,GAA6C5B,GACf,IAA/BA,EAAWtD,iBAAyBsD,EAAWvB,iBAC/CQ,GAA4Ce,GAC5C6B,GAAoB7B,EAAWtB,gCAG/BoB,GAA6CE,EAEzD,CACI,SAASK,GAAkDL,GACvB,OAA5BA,EAAW8B,eAGf9B,EAAW8B,aAAajE,6CAA0C/e,EAClEkhB,EAAW8B,aAAapE,MAAQ,KAChCsC,EAAW8B,aAAe,KAClC,CACI,SAASC,GAAiE/B,GACtE,KAAOA,EAAWH,kBAAkBhZ,OAAS,GAAG,CAC5C,GAAmC,IAA/BmZ,EAAWtD,gBACX,OAEJ,MAAM4C,EAAqBU,EAAWH,kBAAkBnN,OACpDuO,GAA4DjB,EAAYV,KACxE0B,GAAiDhB,GACjDM,GAAqDN,EAAWtB,8BAA+BY,GAE/G,CACA,CACI,SAAS0C,GAA0DhC,GAC/D,MAAM5M,EAAS4M,EAAWtB,8BAA8BnL,QACxD,KAAOH,EAAOmD,cAAc1P,OAAS,GAAG,CACpC,GAAmC,IAA/BmZ,EAAWtD,gBACX,OAGJwC,GAAqDc,EADjC5M,EAAOmD,cAAcpE,QAErD,CACA,CACI,SAAS8P,GAAqCjC,EAAY5C,EAAM+D,EAAKe,GACjE,MAAM7O,EAAS2M,EAAWtB,8BACpBzB,EAAOG,EAAKhiB,YACZskB,EAAcrC,GAA2BJ,IACzCZ,WAAEA,EAAU3B,WAAEA,GAAe0C,EAC7BqC,EAAc0B,EAAMzB,EAC1B,IAAIpF,EACJ,IACIA,EAASH,GAAoBiD,EAAK9C,OAC9C,CACQ,MAAO/C,GAEH,YADA2K,EAAgB5K,YAAYC,EAExC,CACQ,MAAM+H,EAAqB,CACvBhF,SACAiF,iBAAkBjF,EAAOI,WACzB2B,aACA3B,aACA8E,YAAa,EACbC,cACAC,cACAC,gBAAiB1C,EACjB2C,WAAY,QAEhB,GAAII,EAAWH,kBAAkBhZ,OAAS,EAMtC,OALAmZ,EAAWH,kBAAkBpZ,KAAK6Y,QAIlC6C,GAAiC9O,EAAQ6O,GAG7C,GAAsB,WAAlB7O,EAAOG,OAAqB,CAC5B,MAAM4O,EAAY,IAAInF,EAAKqC,EAAmBhF,OAAQgF,EAAmBjD,WAAY,GAErF,YADA6F,EAAgBvL,YAAYyL,EAExC,CACQ,GAAIpC,EAAWtD,gBAAkB,EAAG,CAChC,GAAIuE,GAA4DjB,EAAYV,GAAqB,CAC7F,MAAMiB,EAAaC,GAAsDlB,GAGzE,OAFAsC,GAA6C5B,QAC7CkC,EAAgBtL,YAAY2J,EAE5C,CACY,GAAIP,EAAWvB,gBAAiB,CAC5B,MAAMlH,EAAI,IAAInG,UAAU,2DAGxB,OAFA0N,GAAkCkB,EAAYzI,QAC9C2K,EAAgB5K,YAAYC,EAE5C,CACA,CACQyI,EAAWH,kBAAkBpZ,KAAK6Y,GAClC6C,GAAiC9O,EAAQ6O,GACzCpC,GAA6CE,EACrD,CACI,SAASqC,GAAiDrC,EAAYe,GAC/B,SAA/BA,EAAgBnB,YAChBoB,GAAiDhB,GAErD,MAAM3M,EAAS2M,EAAWtB,8BAC1B,GAAI4D,GAA4BjP,GAC5B,KAAOkP,GAAqClP,GAAU,GAElDiN,GAAqDjN,EAD1B2N,GAAiDhB,GAI5F,CACI,SAASwC,GAAmDxC,EAAYpC,EAAc0B,GAElF,GADAqC,GAAuD3B,EAAYpC,EAAc0B,GAC3C,SAAlCA,EAAmBM,WAGnB,OAFAkB,GAA2Dd,EAAYV,QACvEyC,GAAiE/B,GAGrE,GAAIV,EAAmBE,YAAcF,EAAmBG,YAGpD,OAEJuB,GAAiDhB,GACjD,MAAMyC,EAAgBnD,EAAmBE,YAAcF,EAAmBI,YAC1E,GAAI+C,EAAgB,EAAG,CACnB,MAAM5H,EAAMyE,EAAmBjD,WAAaiD,EAAmBE,YAC/DmB,GAAsDX,EAAYV,EAAmBhF,OAAQO,EAAM4H,EAAeA,EAC9H,CACQnD,EAAmBE,aAAeiD,EAClCnC,GAAqDN,EAAWtB,8BAA+BY,GAC/FyC,GAAiE/B,EACzE,CACI,SAAS0C,GAA4C1C,EAAYpC,GAC7D,MAAMmD,EAAkBf,EAAWH,kBAAkBnN,OACrD2N,GAAkDL,GAEpC,WADAA,EAAWtB,8BAA8BlL,OAEnD6O,GAAiDrC,EAAYe,GAG7DyB,GAAmDxC,EAAYpC,EAAcmD,GAEjFjB,GAA6CE,EACrD,CACI,SAASgB,GAAiDhB,GAEtD,OADmBA,EAAWH,kBAAkB1N,OAExD,CACI,SAAS8N,GAA2CD,GAChD,MAAM3M,EAAS2M,EAAWtB,8BAC1B,MAAsB,aAAlBrL,EAAOG,SAGPwM,EAAWvB,mBAGVuB,EAAW2C,cAGZ7L,GAA+BzD,IAAWwD,GAAiCxD,GAAU,OAGrFiP,GAA4BjP,IAAWkP,GAAqClP,GAAU,IAGtEmL,GAA2CwB,GAC7C,EAI1B,CACI,SAASf,GAA4Ce,GACjDA,EAAWI,oBAAiBthB,EAC5BkhB,EAAWhB,sBAAmBlgB,CACtC,CAEI,SAAS6f,GAAkCqB,GACvC,MAAM3M,EAAS2M,EAAWtB,8BAC1B,IAAIsB,EAAWvB,iBAAqC,aAAlBpL,EAAOG,OAGzC,GAAIwM,EAAWtD,gBAAkB,EAC7BsD,EAAWvB,iBAAkB,MADjC,CAIA,GAAIuB,EAAWH,kBAAkBhZ,OAAS,EAAG,CACzC,MAAM+b,EAAuB5C,EAAWH,kBAAkBnN,OAC1D,GAAIkQ,EAAqBpD,YAAcoD,EAAqBlD,cAAgB,EAAG,CAC3E,MAAMnI,EAAI,IAAInG,UAAU,2DAExB,MADA0N,GAAkCkB,EAAYzI,GACxCA,CACtB,CACA,CACQ0H,GAA4Ce,GAC5C6B,GAAoBxO,EAV5B,CAWA,CACI,SAASwL,GAAoCmB,EAAYvJ,GACrD,MAAMpD,EAAS2M,EAAWtB,8BAC1B,GAAIsB,EAAWvB,iBAAqC,aAAlBpL,EAAOG,OACrC,OAEJ,MAAM8G,OAAEA,EAAM+B,WAAEA,EAAU3B,WAAEA,GAAejE,EAC3C,GAAI+D,GAAiBF,GACjB,MAAM,IAAIlJ,UAAU,wDAExB,MAAMyR,EAAoB1I,GAAoBG,GAC9C,GAAI0F,EAAWH,kBAAkBhZ,OAAS,EAAG,CACzC,MAAM+b,EAAuB5C,EAAWH,kBAAkBnN,OAC1D,GAAI8H,GAAiBoI,EAAqBtI,QACtC,MAAM,IAAIlJ,UAAU,8FAExBiP,GAAkDL,GAClD4C,EAAqBtI,OAASH,GAAoByI,EAAqBtI,QAC/B,SAApCsI,EAAqBhD,YACrBkB,GAA2Dd,EAAY4C,EAEvF,CACY9L,GAA+BzD,IAC/B2O,GAA0DhC,GACT,IAA7CnJ,GAAiCxD,GACjCqN,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,IAGvFsF,EAAWH,kBAAkBhZ,OAAS,GACtCma,GAAiDhB,GAGrDxJ,GAAiCnD,EADT,IAAIpP,WAAW4e,EAAmBxG,EAAY3B,IACZ,KAGzD4H,GAA4BjP,IAEjCqN,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,GAC3FqH,GAAiE/B,IAGjEU,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,GAE/FoF,GAA6CE,EACrD,CACI,SAASlB,GAAkCkB,EAAYzI,GACnD,MAAMlE,EAAS2M,EAAWtB,8BACJ,aAAlBrL,EAAOG,SAGXuL,GAAkDiB,GAClDjD,GAAWiD,GACXf,GAA4Ce,GAC5C8C,GAAoBzP,EAAQkE,GACpC,CACI,SAAS2H,GAAqDc,EAAY1J,GACtE,MAAMyM,EAAQ/C,EAAWvD,OAAOtK,QAChC6N,EAAWtD,iBAAmBqG,EAAMrI,WACpCkH,GAA6C5B,GAC7C,MAAM5C,EAAO,IAAInZ,WAAW8e,EAAMzI,OAAQyI,EAAM1G,WAAY0G,EAAMrI,YAClEpE,EAAYM,YAAYwG,EAChC,CACI,SAASkB,GAA2C0B,GAChD,GAAgC,OAA5BA,EAAW8B,cAAyB9B,EAAWH,kBAAkBhZ,OAAS,EAAG,CAC7E,MAAMka,EAAkBf,EAAWH,kBAAkBnN,OAC/C0K,EAAO,IAAInZ,WAAW8c,EAAgBzG,OAAQyG,EAAgB1E,WAAa0E,EAAgBvB,YAAauB,EAAgBrG,WAAaqG,EAAgBvB,aACrJrB,EAAcjY,OAAOmT,OAAOkE,GAA0B/N,WAC5DwT,GAA+B7E,EAAa6B,EAAY5C,GACxD4C,EAAW8B,aAAe3D,CACtC,CACQ,OAAO6B,EAAW8B,YAC1B,CACI,SAAStD,GAA2CwB,GAChD,MAAMhjB,EAAQgjB,EAAWtB,8BAA8BlL,OACvD,MAAc,YAAVxW,EACO,KAEG,WAAVA,EACO,EAEJgjB,EAAWiD,aAAejD,EAAWtD,eACpD,CACI,SAASoB,GAAoCkC,EAAYpC,GACrD,MAAMmD,EAAkBf,EAAWH,kBAAkBnN,OAErD,GAAc,WADAsN,EAAWtB,8BAA8BlL,QAEnD,GAAqB,IAAjBoK,EACA,MAAM,IAAIxM,UAAU,wEAGvB,CACD,GAAqB,IAAjBwM,EACA,MAAM,IAAIxM,UAAU,mFAExB,GAAI2P,EAAgBvB,YAAc5B,EAAemD,EAAgBrG,WAC7D,MAAM,IAAImC,WAAW,4BAErC,CACQkE,EAAgBzG,OAASH,GAAoB4G,EAAgBzG,QAC7DoI,GAA4C1C,EAAYpC,EAChE,CACI,SAASK,GAA+C+B,EAAY5C,GAChE,MAAM2D,EAAkBf,EAAWH,kBAAkBnN,OAErD,GAAc,WADAsN,EAAWtB,8BAA8BlL,QAEnD,GAAwB,IAApB4J,EAAK1C,WACL,MAAM,IAAItJ,UAAU,yFAIxB,GAAwB,IAApBgM,EAAK1C,WACL,MAAM,IAAItJ,UAAU,mGAG5B,GAAI2P,EAAgB1E,WAAa0E,EAAgBvB,cAAgBpC,EAAKf,WAClE,MAAM,IAAIQ,WAAW,2DAEzB,GAAIkE,EAAgBxB,mBAAqBnC,EAAK9C,OAAOI,WACjD,MAAM,IAAImC,WAAW,8DAEzB,GAAIkE,EAAgBvB,YAAcpC,EAAK1C,WAAaqG,EAAgBrG,WAChE,MAAM,IAAImC,WAAW,2DAEzB,MAAMqG,EAAiB9F,EAAK1C,WAC5BqG,EAAgBzG,OAASH,GAAoBiD,EAAK9C,QAClDoI,GAA4C1C,EAAYkD,EAChE,CACI,SAASC,GAAkC9P,EAAQ2M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAepE,GAC1Ha,EAAWtB,8BAAgCrL,EAC3C2M,EAAWG,YAAa,EACxBH,EAAWE,UAAW,EACtBF,EAAW8B,aAAe,KAE1B9B,EAAWvD,OAASuD,EAAWtD,qBAAkB5d,EACjDie,GAAWiD,GACXA,EAAWvB,iBAAkB,EAC7BuB,EAAW2C,UAAW,EACtB3C,EAAWiD,aAAeM,EAC1BvD,EAAWI,eAAiBiD,EAC5BrD,EAAWhB,iBAAmBsE,EAC9BtD,EAAWZ,uBAAyBD,EACpCa,EAAWH,kBAAoB,IAAIpO,EACnC4B,EAAOa,0BAA4B8L,EAEnC3P,EAAYR,EADQuT,KAC0B,KAC1CpD,EAAW2C,UAAW,EACtB7C,GAA6CE,GACtC,MACRwD,IACC1E,GAAkCkB,EAAYwD,GACvC,MAEnB,CACI,SAASC,GAAsDpQ,EAAQqQ,EAAsBH,GACzF,MAAMvD,EAAa9Z,OAAOmT,OAAO6E,GAA6B1O,WAC9D,IAAI4T,EACAC,EACAC,EAEAF,OAD+BtkB,IAA/B4kB,EAAqBC,MACJ,IAAMD,EAAqBC,MAAM3D,GAGjC,OAGjBqD,OAD8BvkB,IAA9B4kB,EAAqBE,KACL,IAAMF,EAAqBE,KAAK5D,GAGhC,IAAMnQ,OAAoB/Q,GAG1CwkB,OADgCxkB,IAAhC4kB,EAAqBxM,OACHnH,GAAU2T,EAAqBxM,OAAOnH,GAGtC,IAAMF,OAAoB/Q,GAEhD,MAAMqgB,EAAwBuE,EAAqBvE,sBACnD,GAA8B,IAA1BA,EACA,MAAM,IAAI/N,UAAU,gDAExB+R,GAAkC9P,EAAQ2M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAepE,EAC7H,CACI,SAAS6D,GAA+B3a,EAAS2X,EAAY5C,GACzD/U,EAAQwV,wCAA0CmC,EAClD3X,EAAQqV,MAAQN,CACxB,CAEI,SAASK,GAA+B7d,GACpC,OAAO,IAAIwR,UAAU,uCAAuCxR,oDACpE,CAEI,SAASye,GAAwCze,GAC7C,OAAO,IAAIwR,UAAU,0CAA0CxR,uDACvE,CAEI,SAASikB,GAAqB3X,EAASgJ,GACnCF,EAAiB9I,EAASgJ,GAC1B,MAAM4O,EAAO5X,aAAyC,EAASA,EAAQ4X,KACvE,MAAO,CACHA,UAAehlB,IAATglB,OAAqBhlB,EAAYilB,GAAgCD,EAAM,GAAG5O,4BAE5F,CACI,SAAS6O,GAAgCD,EAAM5O,GAE3C,GAAa,SADb4O,EAAO,GAAGA,KAEN,MAAM,IAAI1S,UAAU,GAAG8D,MAAY4O,oEAEvC,OAAOA,CACf,CACI,SAASE,GAAuB9X,EAASgJ,GACrC,IAAI7F,EAGJ,OAFA2F,EAAiB9I,EAASgJ,GAEnB,CACHiM,IAAKtL,EAF4E,QAAxExG,EAAKnD,aAAyC,EAASA,EAAQiV,WAAwB,IAAP9R,EAAgBA,EAAK,EAE5D,GAAG6F,2BAEjE,CAGI,SAAS+O,GAAgC5Q,GACrC,OAAO,IAAI6Q,GAAyB7Q,EAC5C,CAEI,SAAS8O,GAAiC9O,EAAQ6O,GAC9C7O,EAAOE,QAAQ4Q,kBAAkB1d,KAAKyb,EAC9C,CACI,SAASzB,GAAqCpN,EAAQoD,EAAOC,GACzD,MACMwL,EADS7O,EAAOE,QACS4Q,kBAAkBhS,QAC7CuE,EACAwL,EAAgBvL,YAAYF,GAG5ByL,EAAgBtL,YAAYH,EAExC,CACI,SAAS8L,GAAqClP,GAC1C,OAAOA,EAAOE,QAAQ4Q,kBAAkBtd,MAChD,CACI,SAASyb,GAA4BjP,GACjC,MAAMD,EAASC,EAAOE,QACtB,YAAezU,IAAXsU,KAGCgR,GAA2BhR,EAIxC,CAjkBIlN,OAAO6R,iBAAiBmG,GAA6B1O,UAAW,CAC5D3N,MAAO,CAAEmW,YAAY,GACrB4G,QAAS,CAAE5G,YAAY,GACvBzb,MAAO,CAAEyb,YAAY,GACrBmG,YAAa,CAAEnG,YAAY,GAC3BuG,YAAa,CAAEvG,YAAY,KAE/B/I,EAAgBiP,GAA6B1O,UAAU3N,MAAO,SAC9DoN,EAAgBiP,GAA6B1O,UAAUoP,QAAS,WAChE3P,EAAgBiP,GAA6B1O,UAAUjT,MAAO,SAC5B,iBAAvBuW,OAAOmF,aACd/R,OAAOiJ,eAAe+O,GAA6B1O,UAAWsD,OAAOmF,YAAa,CAC9ErM,MAAO,+BACPwD,cAAc,IA0jBtB,MAAM8U,GACF,WAAA9oB,CAAYiY,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,4BAClC4C,EAAqB5C,EAAQ,mBACzB2D,GAAuB3D,GACvB,MAAM,IAAIjC,UAAU,+EAExB,IAAKgN,GAA+B/K,EAAOa,2BACvC,MAAM,IAAI9C,UAAU,+FAGxB+B,EAAsC9X,KAAMgY,GAC5ChY,KAAK8oB,kBAAoB,IAAI1S,CACzC,CAKQ,UAAIvP,GACA,OAAKkiB,GAA2B/oB,MAGzBA,KAAK+Y,eAFDtE,EAAoBuU,GAA8B,UAGzE,CAIQ,MAAAnN,CAAOnH,OAASjR,GACZ,OAAKslB,GAA2B/oB,WAGEyD,IAA9BzD,KAAKiY,qBACExD,EAAoBqE,EAAoB,WAE5CN,EAAkCxY,KAAM0U,GALpCD,EAAoBuU,GAA8B,UAMzE,CACQ,IAAAlN,CAAKiG,EAAMkH,EAAa,IACpB,IAAKF,GAA2B/oB,MAC5B,OAAOyU,EAAoBuU,GAA8B,SAE7D,IAAKvJ,YAAYkD,OAAOZ,GACpB,OAAOtN,EAAoB,IAAIsB,UAAU,sCAE7C,GAAwB,IAApBgM,EAAK1C,WACL,OAAO5K,EAAoB,IAAIsB,UAAU,uCAE7C,GAA+B,IAA3BgM,EAAK9C,OAAOI,WACZ,OAAO5K,EAAoB,IAAIsB,UAAU,gDAE7C,GAAIoJ,GAAiB4C,EAAK9C,QACtB,OAAOxK,EAAoB,IAAIsB,UAAU,oCAE7C,IAAIlF,EACJ,IACIA,EAAU8X,GAAuBM,EAAY,UAC7D,CACY,MAAO/M,GACH,OAAOzH,EAAoByH,EAC3C,CACY,MAAM4J,EAAMjV,EAAQiV,IACpB,GAAY,IAARA,EACA,OAAOrR,EAAoB,IAAIsB,UAAU,uCAE7C,GAAK+L,GAAWC,IAKX,GAAI+D,EAAM/D,EAAK1C,WAChB,OAAO5K,EAAoB,IAAI+M,WAAW,qEAL1C,GAAIsE,EAAM/D,EAAKvW,OACX,OAAOiJ,EAAoB,IAAI+M,WAAW,4DAMlD,QAAkC/d,IAA9BzD,KAAKiY,qBACL,OAAOxD,EAAoBqE,EAAoB,cAEnD,IAAIiD,EACAC,EACJ,MAAMpH,EAAUN,EAAW,CAACxO,EAASC,KACjCgW,EAAiBjW,EACjBkW,EAAgBjW,IAEd8gB,EAAkB,CACpBtL,YAAaH,GAASW,EAAe,CAAExL,MAAO6K,EAAOC,MAAM,IAC3DC,YAAaF,GAASW,EAAe,CAAExL,MAAO6K,EAAOC,MAAM,IAC3DY,YAAaC,GAAKF,EAAcE,IAGpC,OADAgN,GAA6BlpB,KAAM+hB,EAAM+D,EAAKe,GACvCjS,CACnB,CAUQ,WAAAwH,GACI,IAAK2M,GAA2B/oB,MAC5B,MAAMgpB,GAA8B,oBAENvlB,IAA9BzD,KAAKiY,sBAGTkR,GAAgCnpB,KAC5C,EAkBI,SAAS+oB,GAA2BrV,GAChC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,sBAGtCA,aAAamV,EAC5B,CACI,SAASK,GAA6BnR,EAAQgK,EAAM+D,EAAKe,GACrD,MAAM7O,EAASD,EAAOE,qBACtBD,EAAOuE,YAAa,EACE,YAAlBvE,EAAOG,OACP0O,EAAgB5K,YAAYjE,EAAOO,cAGnCqO,GAAqC5O,EAAOa,0BAA2BkJ,EAAM+D,EAAKe,EAE9F,CACI,SAASsC,GAAgCpR,GACrCW,EAAmCX,GAEnCqR,GAA8CrR,EADpC,IAAIhC,UAAU,uBAEhC,CACI,SAASqT,GAA8CrR,EAAQmE,GAC3D,MAAMmN,EAAmBtR,EAAO+Q,kBAChC/Q,EAAO+Q,kBAAoB,IAAI1S,EAC/BiT,EAAiBpoB,QAAQ4lB,IACrBA,EAAgB5K,YAAYC,IAExC,CAEI,SAAS8M,GAA8BzkB,GACnC,OAAO,IAAIwR,UAAU,sCAAsCxR,mDACnE,CAEI,SAAS+kB,GAAqBC,EAAUC,GACpC,MAAMtB,cAAEA,GAAkBqB,EAC1B,QAAsB9lB,IAAlBykB,EACA,OAAOsB,EAEX,GAAItL,GAAYgK,IAAkBA,EAAgB,EAC9C,MAAM,IAAI1G,WAAW,yBAEzB,OAAO0G,CACf,CACI,SAASuB,GAAqBF,GAC1B,MAAMzoB,KAAEA,GAASyoB,EACjB,OAAKzoB,GACM,KAAM,EAGzB,CAEI,SAAS4oB,GAAuBC,EAAM9P,GAClCF,EAAiBgQ,EAAM9P,GACvB,MAAMqO,EAAgByB,aAAmC,EAASA,EAAKzB,cACjEpnB,EAAO6oB,aAAmC,EAASA,EAAK7oB,KAC9D,MAAO,CACHonB,mBAAiCzkB,IAAlBykB,OAA8BzkB,EAAY4W,EAA0B6N,GACnFpnB,UAAe2C,IAAT3C,OAAqB2C,EAAYmmB,GAA2B9oB,EAAM,GAAG+Y,4BAEvF,CACI,SAAS+P,GAA2B/V,EAAIgG,GAEpC,OADAC,EAAejG,EAAIgG,GACZuB,GAASf,EAA0BxG,EAAGuH,GACrD,CAEI,SAASyO,GAAsBC,EAAUjQ,GACrCF,EAAiBmQ,EAAUjQ,GAC3B,MAAMkQ,EAAQD,aAA2C,EAASA,EAASC,MACrEvjB,EAAQsjB,aAA2C,EAASA,EAAStjB,MACrE8hB,EAAQwB,aAA2C,EAASA,EAASxB,MACrEhiB,EAAOwjB,aAA2C,EAASA,EAASxjB,KACpE0jB,EAAQF,aAA2C,EAASA,EAASE,MAC3E,MAAO,CACHD,WAAiBtmB,IAAVsmB,OACHtmB,EACAwmB,GAAmCF,EAAOD,EAAU,GAAGjQ,6BAC3DrT,WAAiB/C,IAAV+C,OACH/C,EACAymB,GAAmC1jB,EAAOsjB,EAAU,GAAGjQ,6BAC3DyO,WAAiB7kB,IAAV6kB,OACH7kB,EACA0mB,GAAmC7B,EAAOwB,EAAU,GAAGjQ,6BAC3DmQ,WAAiBvmB,IAAVumB,OACHvmB,EACA2mB,GAAmCJ,EAAOF,EAAU,GAAGjQ,6BAC3DvT,OAEZ,CACI,SAAS2jB,GAAmCpW,EAAIiW,EAAUjQ,GAEtD,OADAC,EAAejG,EAAIgG,GACXnF,GAAWwB,EAAYrC,EAAIiW,EAAU,CAACpV,GACtD,CACI,SAASwV,GAAmCrW,EAAIiW,EAAUjQ,GAEtD,OADAC,EAAejG,EAAIgG,GACZ,IAAM3D,EAAYrC,EAAIiW,EAAU,GAC/C,CACI,SAASK,GAAmCtW,EAAIiW,EAAUjQ,GAEtD,OADAC,EAAejG,EAAIgG,GACX8K,GAAe/O,EAAY/B,EAAIiW,EAAU,CAACnF,GAC1D,CACI,SAASyF,GAAmCvW,EAAIiW,EAAUjQ,GAEtD,OADAC,EAAejG,EAAIgG,GACZ,CAACuB,EAAOuJ,IAAezO,EAAYrC,EAAIiW,EAAU,CAAC1O,EAAOuJ,GACxE,CAEI,SAAS0F,GAAqB3W,EAAGmG,GAC7B,IAAKyQ,GAAiB5W,GAClB,MAAM,IAAIqC,UAAU,GAAG8D,6BAEnC,CAEI,SAAS0Q,GAAcha,GACnB,GAAqB,iBAAVA,GAAgC,OAAVA,EAC7B,OAAO,EAEX,IACI,MAAgC,kBAAlBA,EAAMia,OAChC,CACQ,MAAOxW,GAEH,OAAO,CACnB,CACA,CA7IInJ,OAAO6R,iBAAiBmM,GAAyB1U,UAAW,CACxD0H,OAAQ,CAAEc,YAAY,GACtBb,KAAM,CAAEa,YAAY,GACpBP,YAAa,CAAEO,YAAY,GAC3B9V,OAAQ,CAAE8V,YAAY,KAE1B/I,EAAgBiV,GAAyB1U,UAAU0H,OAAQ,UAC3DjI,EAAgBiV,GAAyB1U,UAAU2H,KAAM,QACzDlI,EAAgBiV,GAAyB1U,UAAUiI,YAAa,eAC9B,iBAAvB3E,OAAOmF,aACd/R,OAAOiJ,eAAe+U,GAAyB1U,UAAWsD,OAAOmF,YAAa,CAC1ErM,MAAO,2BACPwD,cAAc,IAkItB,MAAM0W,GAAqD,mBAApBC,gBAMvC,SAASC,KACL,GAAIF,GACA,OAAO,IAAIC,eAGvB,CAOI,MAAME,GACF,WAAA7qB,CAAY8qB,EAAoB,GAAIC,EAAc,CAAA,QACpBrnB,IAAtBonB,EACAA,EAAoB,KAGpB7Q,EAAa6Q,EAAmB,mBAEpC,MAAMtB,EAAWG,GAAuBoB,EAAa,oBAC/CC,EAAiBlB,GAAsBgB,EAAmB,mBAGhE,GAFAG,GAAyBhrB,WAEZyD,IADAsnB,EAAezkB,KAExB,MAAM,IAAIkb,WAAW,6BAEzB,MAAMyJ,EAAgBxB,GAAqBF,GAE3C2B,GAAuDlrB,KAAM+qB,EADvCzB,GAAqBC,EAAU,GACuC0B,EACxG,CAIQ,UAAIE,GACA,IAAKb,GAAiBtqB,MAClB,MAAMorB,GAA4B,UAEtC,OAAOC,GAAuBrrB,KAC1C,CAUQ,KAAA+pB,CAAMrV,OAASjR,GACX,OAAK6mB,GAAiBtqB,MAGlBqrB,GAAuBrrB,MAChByU,EAAoB,IAAIsB,UAAU,oDAEtCuV,GAAoBtrB,KAAM0U,GALtBD,EAAoB2W,GAA4B,SAMvE,CASQ,KAAA5kB,GACI,OAAK8jB,GAAiBtqB,MAGlBqrB,GAAuBrrB,MAChByU,EAAoB,IAAIsB,UAAU,oDAEzCwV,GAAoCvrB,MAC7ByU,EAAoB,IAAIsB,UAAU,2CAEtCyV,GAAoBxrB,MARhByU,EAAoB2W,GAA4B,SASvE,CASQ,SAAAK,GACI,IAAKnB,GAAiBtqB,MAClB,MAAMorB,GAA4B,aAEtC,OAAOM,GAAmC1rB,KACtD,EAkBI,SAAS0rB,GAAmC1T,GACxC,OAAO,IAAI2T,GAA4B3T,EAC/C,CAEI,SAAS4T,GAAqB7D,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAgB,EAAG+C,EAAgB,IAAM,GACnI,MAAMjT,EAASnN,OAAOmT,OAAO4M,GAAezW,WAI5C,OAHA6W,GAAyBhT,GAEzBgU,GAAqChU,EADlBnN,OAAOmT,OAAOiO,GAAgC9X,WACR4T,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,GACjIjT,CACf,CACI,SAASgT,GAAyBhT,GAC9BA,EAAOG,OAAS,WAGhBH,EAAOO,kBAAe9U,EACtBuU,EAAOkU,aAAUzoB,EAGjBuU,EAAOmU,+BAA4B1oB,EAGnCuU,EAAOoU,eAAiB,IAAIhW,EAG5B4B,EAAOqU,2BAAwB5oB,EAG/BuU,EAAOsU,mBAAgB7oB,EAGvBuU,EAAOuU,2BAAwB9oB,EAE/BuU,EAAOwU,0BAAuB/oB,EAE9BuU,EAAOyU,eAAgB,CAC/B,CACI,SAASnC,GAAiB5W,GACtB,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,8BAGtCA,aAAakX,EAC5B,CACI,SAASS,GAAuBrT,GAC5B,YAAuBvU,IAAnBuU,EAAOkU,OAInB,CACI,SAASZ,GAAoBtT,EAAQtD,GACjC,IAAIV,EACJ,GAAsB,WAAlBgE,EAAOG,QAAyC,YAAlBH,EAAOG,OACrC,OAAO3D,OAAoB/Q,GAE/BuU,EAAOmU,0BAA0BO,aAAehY,EACa,QAA5DV,EAAKgE,EAAOmU,0BAA0BQ,wBAAqC,IAAP3Y,GAAyBA,EAAG+V,MAAMrV,GAIvG,MAAM/S,EAAQqW,EAAOG,OACrB,GAAc,WAAVxW,GAAgC,YAAVA,EACtB,OAAO6S,OAAoB/Q,GAE/B,QAAoCA,IAAhCuU,EAAOwU,qBACP,OAAOxU,EAAOwU,qBAAqBI,SAEvC,IAAIC,GAAqB,EACX,aAAVlrB,IACAkrB,GAAqB,EAErBnY,OAASjR,GAEb,MAAMmR,EAAUN,EAAW,CAACxO,EAASC,KACjCiS,EAAOwU,qBAAuB,CAC1BI,cAAUnpB,EACVqpB,SAAUhnB,EACVinB,QAAShnB,EACTinB,QAAStY,EACTuY,oBAAqBJ,KAO7B,OAJA7U,EAAOwU,qBAAqBI,SAAWhY,EAClCiY,GACDK,GAA4BlV,EAAQtD,GAEjCE,CACf,CACI,SAAS4W,GAAoBxT,GACzB,MAAMrW,EAAQqW,EAAOG,OACrB,GAAc,WAAVxW,GAAgC,YAAVA,EACtB,OAAO8S,EAAoB,IAAIsB,UAAU,kBAAkBpU,+DAE/D,MAAMiT,EAAUN,EAAW,CAACxO,EAASC,KACjC,MAAMonB,EAAe,CACjBL,SAAUhnB,EACVinB,QAAShnB,GAEbiS,EAAOsU,cAAgBa,IAErBC,EAASpV,EAAOkU,QAKtB,YAJezoB,IAAX2pB,GAAwBpV,EAAOyU,eAA2B,aAAV9qB,GAChD0rB,GAAiCD,GAErCE,GAAqCtV,EAAOmU,2BACrCvX,CACf,CAEI,SAAS2Y,GAA8BvV,GAQnC,OAPgB1D,EAAW,CAACxO,EAASC,KACjC,MAAMynB,EAAe,CACjBV,SAAUhnB,EACVinB,QAAShnB,GAEbiS,EAAOoU,eAAehhB,KAAKoiB,IAGvC,CACI,SAASC,GAAgCzV,EAAQ9W,GAE/B,aADA8W,EAAOG,OAKrBuV,GAA6B1V,GAHzBkV,GAA4BlV,EAAQ9W,EAIhD,CACI,SAASgsB,GAA4BlV,EAAQtD,GACzC,MAAMiQ,EAAa3M,EAAOmU,0BAC1BnU,EAAOG,OAAS,WAChBH,EAAOO,aAAe7D,EACtB,MAAM0Y,EAASpV,EAAOkU,aACPzoB,IAAX2pB,GACAO,GAAsDP,EAAQ1Y,IAE7DkZ,GAAyC5V,IAAW2M,EAAW2C,UAChEoG,GAA6B1V,EAEzC,CACI,SAAS0V,GAA6B1V,GAClCA,EAAOG,OAAS,UAChBH,EAAOmU,0BAA0BzU,KACjC,MAAMmW,EAAc7V,EAAOO,aAK3B,GAJAP,EAAOoU,eAAenrB,QAAQusB,IAC1BA,EAAaT,QAAQc,KAEzB7V,EAAOoU,eAAiB,IAAIhW,OACQ3S,IAAhCuU,EAAOwU,qBAEP,YADAsB,GAAkD9V,GAGtD,MAAM+V,EAAe/V,EAAOwU,qBAE5B,GADAxU,EAAOwU,0BAAuB/oB,EAC1BsqB,EAAad,oBAGb,OAFAc,EAAahB,QAAQc,QACrBC,GAAkD9V,GAItDhD,EADgBgD,EAAOmU,0BAA0B3U,GAAYuW,EAAaf,SACrD,KACjBe,EAAajB,WACbgB,GAAkD9V,GAC3C,MACPtD,IACAqZ,EAAahB,QAAQrY,GACrBoZ,GAAkD9V,GAC3C,MAEnB,CACI,SAASgW,GAAkChW,GACvCA,EAAOqU,sBAAsBS,cAASrpB,GACtCuU,EAAOqU,2BAAwB5oB,CACvC,CACI,SAASwqB,GAA2CjW,EAAQ9W,GACxD8W,EAAOqU,sBAAsBU,QAAQ7rB,GACrC8W,EAAOqU,2BAAwB5oB,EAC/BgqB,GAAgCzV,EAAQ9W,EAChD,CACI,SAASgtB,GAAkClW,GACvCA,EAAOuU,sBAAsBO,cAASrpB,GACtCuU,EAAOuU,2BAAwB9oB,EAEjB,aADAuU,EAAOG,SAGjBH,EAAOO,kBAAe9U,OACcA,IAAhCuU,EAAOwU,uBACPxU,EAAOwU,qBAAqBM,WAC5B9U,EAAOwU,0BAAuB/oB,IAGtCuU,EAAOG,OAAS,SAChB,MAAMiV,EAASpV,EAAOkU,aACPzoB,IAAX2pB,GACAe,GAAkCf,EAE9C,CACI,SAASgB,GAA2CpW,EAAQ9W,GACxD8W,EAAOuU,sBAAsBQ,QAAQ7rB,GACrC8W,EAAOuU,2BAAwB9oB,OAEKA,IAAhCuU,EAAOwU,uBACPxU,EAAOwU,qBAAqBO,QAAQ7rB,GACpC8W,EAAOwU,0BAAuB/oB,GAElCgqB,GAAgCzV,EAAQ9W,EAChD,CAEI,SAASqqB,GAAoCvT,GACzC,YAA6BvU,IAAzBuU,EAAOsU,oBAAgE7oB,IAAjCuU,EAAOuU,qBAIzD,CACI,SAASqB,GAAyC5V,GAC9C,YAAqCvU,IAAjCuU,EAAOqU,4BAAwE5oB,IAAjCuU,EAAOuU,qBAIjE,CACI,SAAS8B,GAAuCrW,GAC5CA,EAAOuU,sBAAwBvU,EAAOsU,cACtCtU,EAAOsU,mBAAgB7oB,CAC/B,CACI,SAAS6qB,GAA4CtW,GACjDA,EAAOqU,sBAAwBrU,EAAOoU,eAAetV,OAC7D,CACI,SAASgX,GAAkD9V,QAC1BvU,IAAzBuU,EAAOsU,gBACPtU,EAAOsU,cAAcS,QAAQ/U,EAAOO,cACpCP,EAAOsU,mBAAgB7oB,GAE3B,MAAM2pB,EAASpV,EAAOkU,aACPzoB,IAAX2pB,GACAmB,GAAiCnB,EAAQpV,EAAOO,aAE5D,CACI,SAASiW,GAAiCxW,EAAQyW,GAC9C,MAAMrB,EAASpV,EAAOkU,aACPzoB,IAAX2pB,GAAwBqB,IAAiBzW,EAAOyU,gBAC5CgC,EACAC,GAA+BtB,GAG/BC,GAAiCD,IAGzCpV,EAAOyU,cAAgBgC,CAC/B,CAxQI5jB,OAAO6R,iBAAiBkO,GAAezW,UAAW,CAC9C4V,MAAO,CAAEpN,YAAY,GACrBnW,MAAO,CAAEmW,YAAY,GACrB8O,UAAW,CAAE9O,YAAY,GACzBwO,OAAQ,CAAExO,YAAY,KAE1B/I,EAAgBgX,GAAezW,UAAU4V,MAAO,SAChDnW,EAAgBgX,GAAezW,UAAU3N,MAAO,SAChDoN,EAAgBgX,GAAezW,UAAUsX,UAAW,aAClB,iBAAvBhU,OAAOmF,aACd/R,OAAOiJ,eAAe8W,GAAezW,UAAWsD,OAAOmF,YAAa,CAChErM,MAAO,iBACPwD,cAAc,IAkQtB,MAAM4X,GACF,WAAA5rB,CAAYiY,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,+BAClCqS,GAAqBrS,EAAQ,mBACzBqT,GAAuBrT,GACvB,MAAM,IAAIjC,UAAU,+EAExB/V,KAAK2uB,qBAAuB3W,EAC5BA,EAAOkU,QAAUlsB,KACjB,MAAM2B,EAAQqW,EAAOG,OACrB,GAAc,aAAVxW,GACK4pB,GAAoCvT,IAAWA,EAAOyU,cACvDmC,GAAoC5uB,MAGpC6uB,GAA8C7uB,MAElD8uB,GAAqC9uB,WAEpC,GAAc,aAAV2B,EACLotB,GAA8C/uB,KAAMgY,EAAOO,cAC3DuW,GAAqC9uB,WAEpC,GAAc,WAAV2B,EACLktB,GAA8C7uB,MAC9CgvB,GAA+ChvB,UAE9C,CACD,MAAM6tB,EAAc7V,EAAOO,aAC3BwW,GAA8C/uB,KAAM6tB,GACpDoB,GAA+CjvB,KAAM6tB,EACrE,CACA,CAKQ,UAAIhnB,GACA,OAAKqoB,GAA8BlvB,MAG5BA,KAAK+Y,eAFDtE,EAAoB0a,GAAiC,UAG5E,CASQ,eAAIjM,GACA,IAAKgM,GAA8BlvB,MAC/B,MAAMmvB,GAAiC,eAE3C,QAAkC1rB,IAA9BzD,KAAK2uB,qBACL,MAAMS,GAA2B,eAErC,OAAOC,GAA0CrvB,KAC7D,CASQ,SAAIkM,GACA,OAAKgjB,GAA8BlvB,MAG5BA,KAAKsvB,cAFD7a,EAAoB0a,GAAiC,SAG5E,CAIQ,KAAApF,CAAMrV,OAASjR,GACX,OAAKyrB,GAA8BlvB,WAGDyD,IAA9BzD,KAAK2uB,qBACEla,EAAoB2a,GAA2B,UAEnDG,GAAiCvvB,KAAM0U,GALnCD,EAAoB0a,GAAiC,SAM5E,CAIQ,KAAA3oB,GACI,IAAK0oB,GAA8BlvB,MAC/B,OAAOyU,EAAoB0a,GAAiC,UAEhE,MAAMnX,EAAShY,KAAK2uB,qBACpB,YAAelrB,IAAXuU,EACOvD,EAAoB2a,GAA2B,UAEtD7D,GAAoCvT,GAC7BvD,EAAoB,IAAIsB,UAAU,2CAEtCyZ,GAAiCxvB,KACpD,CAWQ,WAAAoc,GACI,IAAK8S,GAA8BlvB,MAC/B,MAAMmvB,GAAiC,oBAG5B1rB,IADAzD,KAAK2uB,sBAIpBc,GAAmCzvB,KAC/C,CACQ,KAAAgqB,CAAM5O,OAAQ3X,GACV,OAAKyrB,GAA8BlvB,WAGDyD,IAA9BzD,KAAK2uB,qBACEla,EAAoB2a,GAA2B,aAEnDM,GAAiC1vB,KAAMob,GALnC3G,EAAoB0a,GAAiC,SAM5E,EAsBI,SAASD,GAA8Bxb,GACnC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,yBAGtCA,aAAaiY,EAC5B,CAEI,SAAS4D,GAAiCnC,EAAQ1Y,GAE9C,OAAO4W,GADQ8B,EAAOuB,qBACaja,EAC3C,CACI,SAAS8a,GAAiCpC,GAEtC,OAAO5B,GADQ4B,EAAOuB,qBAE9B,CACI,SAASgB,GAAqDvC,GAC1D,MAAMpV,EAASoV,EAAOuB,qBAChBhtB,EAAQqW,EAAOG,OACrB,OAAIoT,GAAoCvT,IAAqB,WAAVrW,EACxC6S,OAAoB/Q,GAEjB,YAAV9B,EACO8S,EAAoBuD,EAAOO,cAE/BiX,GAAiCpC,EAChD,CACI,SAASwC,GAAuDxC,EAAQlsB,GACjC,YAA/BksB,EAAOyC,oBACPtB,GAAiCnB,EAAQlsB,GAGzC4uB,GAA0C1C,EAAQlsB,EAE9D,CACI,SAASysB,GAAsDP,EAAQlsB,GACjC,YAA9BksB,EAAO2C,mBACPC,GAAgC5C,EAAQlsB,GAGxC+uB,GAAyC7C,EAAQlsB,EAE7D,CACI,SAASmuB,GAA0CjC,GAC/C,MAAMpV,EAASoV,EAAOuB,qBAChBhtB,EAAQqW,EAAOG,OACrB,MAAc,YAAVxW,GAAiC,aAAVA,EAChB,KAEG,WAAVA,EACO,EAEJuuB,GAA8ClY,EAAOmU,0BACpE,CACI,SAASsD,GAAmCrC,GACxC,MAAMpV,EAASoV,EAAOuB,qBAChBwB,EAAgB,IAAIpa,UAAU,oFACpC4X,GAAsDP,EAAQ+C,GAG9DP,GAAuDxC,EAAQ+C,GAC/DnY,EAAOkU,aAAUzoB,EACjB2pB,EAAOuB,0BAAuBlrB,CACtC,CACI,SAASisB,GAAiCtC,EAAQhS,GAC9C,MAAMpD,EAASoV,EAAOuB,qBAChBhK,EAAa3M,EAAOmU,0BACpBiE,EAAYC,GAA4C1L,EAAYvJ,GAC1E,GAAIpD,IAAWoV,EAAOuB,qBAClB,OAAOla,EAAoB2a,GAA2B,aAE1D,MAAMztB,EAAQqW,EAAOG,OACrB,GAAc,YAAVxW,EACA,OAAO8S,EAAoBuD,EAAOO,cAEtC,GAAIgT,GAAoCvT,IAAqB,WAAVrW,EAC/C,OAAO8S,EAAoB,IAAIsB,UAAU,6DAE7C,GAAc,aAAVpU,EACA,OAAO8S,EAAoBuD,EAAOO,cAEtC,MAAM3D,EAAU2Y,GAA8BvV,GAE9C,OADAsY,GAAqC3L,EAAYvJ,EAAOgV,GACjDxb,CACf,CA1GI/J,OAAO6R,iBAAiBiP,GAA4BxX,UAAW,CAC3D4V,MAAO,CAAEpN,YAAY,GACrBnW,MAAO,CAAEmW,YAAY,GACrBP,YAAa,CAAEO,YAAY,GAC3BqN,MAAO,CAAErN,YAAY,GACrB9V,OAAQ,CAAE8V,YAAY,GACtBuG,YAAa,CAAEvG,YAAY,GAC3BzQ,MAAO,CAAEyQ,YAAY,KAEzB/I,EAAgB+X,GAA4BxX,UAAU4V,MAAO,SAC7DnW,EAAgB+X,GAA4BxX,UAAU3N,MAAO,SAC7DoN,EAAgB+X,GAA4BxX,UAAUiI,YAAa,eACnExI,EAAgB+X,GAA4BxX,UAAU6V,MAAO,SAC3B,iBAAvBvS,OAAOmF,aACd/R,OAAOiJ,eAAe6X,GAA4BxX,UAAWsD,OAAOmF,YAAa,CAC7ErM,MAAO,8BACPwD,cAAc,IA2FtB,MAAMwc,GAAgB,CAAA,EAMtB,MAAMtE,GACF,WAAAlsB,GACI,MAAM,IAAIgW,UAAU,sBAChC,CAQQ,eAAIya,GACA,IAAKC,GAAkCzwB,MACnC,MAAM0wB,GAAuC,eAEjD,OAAO1wB,KAAK0sB,YACxB,CAIQ,UAAIiE,GACA,IAAKF,GAAkCzwB,MACnC,MAAM0wB,GAAuC,UAEjD,QAA8BjtB,IAA1BzD,KAAK2sB,iBAIL,MAAM,IAAI5W,UAAU,qEAExB,OAAO/V,KAAK2sB,iBAAiBgE,MACzC,CAQQ,KAAAzvB,CAAMgb,OAAIzY,GACN,IAAKgtB,GAAkCzwB,MACnC,MAAM0wB,GAAuC,SAGnC,aADA1wB,KAAK4wB,0BAA0BzY,QAM7C0Y,GAAqC7wB,KAAMkc,EACvD,CAEQ,CAAC1E,GAAY9C,GACT,MAAMtP,EAASpF,KAAK8wB,gBAAgBpc,GAEpC,OADAqc,GAA+C/wB,MACxCoF,CACnB,CAEQ,CAACsS,KACGgK,GAAW1hB,KACvB,EAcI,SAASywB,GAAkC/c,GACvC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,8BAGtCA,aAAauY,EAC5B,CACI,SAASD,GAAqChU,EAAQ2M,EAAYoD,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,GAC7ItG,EAAWiM,0BAA4B5Y,EACvCA,EAAOmU,0BAA4BxH,EAEnCA,EAAWvD,YAAS3d,EACpBkhB,EAAWtD,qBAAkB5d,EAC7Bie,GAAWiD,GACXA,EAAW+H,kBAAejpB,EAC1BkhB,EAAWgI,iBAAmBhC,KAC9BhG,EAAW2C,UAAW,EACtB3C,EAAWqM,uBAAyB/F,EACpCtG,EAAWiD,aAAeM,EAC1BvD,EAAWsM,gBAAkBpF,EAC7BlH,EAAWuM,gBAAkBpF,EAC7BnH,EAAWmM,gBAAkB/E,EAC7B,MAAM0C,EAAe0C,GAA+CxM,GACpE6J,GAAiCxW,EAAQyW,GAGzCzZ,EADqBR,EADDuT,KAEM,KACtBpD,EAAW2C,UAAW,EACtB8J,GAAoDzM,GAC7C,MACRwD,IACCxD,EAAW2C,UAAW,EACtBmG,GAAgCzV,EAAQmQ,GACjC,MAEnB,CACI,SAAS+C,GAAuDlT,EAAQ+S,EAAgB7C,EAAe+C,GACnG,MAAMtG,EAAa9Z,OAAOmT,OAAOiO,GAAgC9X,WACjE,IAAI4T,EACA8D,EACAC,EACAC,EAEAhE,OADyBtkB,IAAzBsnB,EAAezC,MACE,IAAMyC,EAAezC,MAAM3D,GAG3B,OAGjBkH,OADyBpoB,IAAzBsnB,EAAef,MACE5O,GAAS2P,EAAef,MAAM5O,EAAOuJ,GAGrC,IAAMnQ,OAAoB/Q,GAG3CqoB,OADyBroB,IAAzBsnB,EAAevkB,MACE,IAAMukB,EAAevkB,QAGrB,IAAMgO,OAAoB/Q,GAG3CsoB,OADyBtoB,IAAzBsnB,EAAehB,MACErV,GAAUqW,EAAehB,MAAMrV,GAG/B,IAAMF,OAAoB/Q,GAE/CuoB,GAAqChU,EAAQ2M,EAAYoD,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,EAChJ,CAEI,SAAS8F,GAA+CpM,GACpDA,EAAWsM,qBAAkBxtB,EAC7BkhB,EAAWuM,qBAAkBztB,EAC7BkhB,EAAWmM,qBAAkBrtB,EAC7BkhB,EAAWqM,4BAAyBvtB,CAC5C,CACI,SAAS6pB,GAAqC3I,GAC1CrD,GAAqBqD,EAAY4L,GAAe,GAChDa,GAAoDzM,EAC5D,CACI,SAAS0L,GAA4C1L,EAAYvJ,GAC7D,IACI,OAAOuJ,EAAWqM,uBAAuB5V,EACrD,CACQ,MAAOiW,GAEH,OADAC,GAA6C3M,EAAY0M,GAClD,CACnB,CACA,CACI,SAASnB,GAA8CvL,GACnD,OAAOA,EAAWiD,aAAejD,EAAWtD,eACpD,CACI,SAASiP,GAAqC3L,EAAYvJ,EAAOgV,GAC7D,IACI9O,GAAqBqD,EAAYvJ,EAAOgV,EACpD,CACQ,MAAOmB,GAEH,YADAD,GAA6C3M,EAAY4M,EAErE,CACQ,MAAMvZ,EAAS2M,EAAWiM,0BACrBrF,GAAoCvT,IAA6B,aAAlBA,EAAOG,QAEvDqW,GAAiCxW,EADZmZ,GAA+CxM,IAGxEyM,GAAoDzM,EAC5D,CAEI,SAASyM,GAAoDzM,GACzD,MAAM3M,EAAS2M,EAAWiM,0BAC1B,IAAKjM,EAAW2C,SACZ,OAEJ,QAAqC7jB,IAAjCuU,EAAOqU,sBACP,OAGJ,GAAc,aADArU,EAAOG,OAGjB,YADAuV,GAA6B1V,GAGjC,GAAiC,IAA7B2M,EAAWvD,OAAO5V,OAClB,OAEJ,MAAM+E,EAAQkR,GAAekD,GACzBpU,IAAUggB,GACViB,GAA4C7M,GAG5C8M,GAA4C9M,EAAYpU,EAEpE,CACI,SAAS+gB,GAA6C3M,EAAYzjB,GACV,aAAhDyjB,EAAWiM,0BAA0BzY,QACrC0Y,GAAqClM,EAAYzjB,EAE7D,CACI,SAASswB,GAA4C7M,GACjD,MAAM3M,EAAS2M,EAAWiM,0BAC1BvC,GAAuCrW,GACvCiJ,GAAa0D,GACb,MAAM+M,EAAmB/M,EAAWuM,kBACpCH,GAA+CpM,GAC/C3P,EAAY0c,EAAkB,KAC1BxD,GAAkClW,GAC3B,MACRtD,IACC0Z,GAA2CpW,EAAQtD,GAC5C,MAEnB,CACI,SAAS+c,GAA4C9M,EAAYvJ,GAC7D,MAAMpD,EAAS2M,EAAWiM,0BAC1BtC,GAA4CtW,GAE5ChD,EADyB2P,EAAWsM,gBAAgB7V,GACtB,KAC1B4S,GAAkChW,GAClC,MAAMrW,EAAQqW,EAAOG,OAErB,GADA8I,GAAa0D,IACR4G,GAAoCvT,IAAqB,aAAVrW,EAAsB,CACtE,MAAM8sB,EAAe0C,GAA+CxM,GACpE6J,GAAiCxW,EAAQyW,EACzD,CAEY,OADA2C,GAAoDzM,GAC7C,MACRjQ,IACuB,aAAlBsD,EAAOG,QACP4Y,GAA+CpM,GAEnDsJ,GAA2CjW,EAAQtD,GAC5C,MAEnB,CACI,SAASyc,GAA+CxM,GAEpD,OADoBuL,GAA8CvL,IAC5C,CAC9B,CAEI,SAASkM,GAAqClM,EAAYzjB,GACtD,MAAM8W,EAAS2M,EAAWiM,0BAC1BG,GAA+CpM,GAC/CuI,GAA4BlV,EAAQ9W,EAC5C,CAEI,SAASkqB,GAA4B7mB,GACjC,OAAO,IAAIwR,UAAU,4BAA4BxR,yCACzD,CAEI,SAASmsB,GAAuCnsB,GAC5C,OAAO,IAAIwR,UAAU,6CAA6CxR,0DAC1E,CAEI,SAAS4qB,GAAiC5qB,GACtC,OAAO,IAAIwR,UAAU,yCAAyCxR,sDACtE,CACI,SAAS6qB,GAA2B7qB,GAChC,OAAO,IAAIwR,UAAU,UAAYxR,EAAO,oCAChD,CACI,SAASuqB,GAAqC1B,GAC1CA,EAAOrU,eAAiBzE,EAAW,CAACxO,EAASC,KACzCqnB,EAAOpU,uBAAyBlT,EAChCsnB,EAAOnU,sBAAwBlT,EAC/BqnB,EAAOyC,oBAAsB,WAEzC,CACI,SAASZ,GAA+C7B,EAAQ1Y,GAC5Doa,GAAqC1B,GACrCmB,GAAiCnB,EAAQ1Y,EACjD,CACI,SAASsa,GAA+C5B,GACpD0B,GAAqC1B,GACrCe,GAAkCf,EAC1C,CACI,SAASmB,GAAiCnB,EAAQ1Y,QACTjR,IAAjC2pB,EAAOnU,wBAGX3D,EAA0B8X,EAAOrU,gBACjCqU,EAAOnU,sBAAsBvE,GAC7B0Y,EAAOpU,4BAAyBvV,EAChC2pB,EAAOnU,2BAAwBxV,EAC/B2pB,EAAOyC,oBAAsB,WACrC,CACI,SAASC,GAA0C1C,EAAQ1Y,GACvDua,GAA+C7B,EAAQ1Y,EAC/D,CACI,SAASyZ,GAAkCf,QACD3pB,IAAlC2pB,EAAOpU,yBAGXoU,EAAOpU,4BAAuBvV,GAC9B2pB,EAAOpU,4BAAyBvV,EAChC2pB,EAAOnU,2BAAwBxV,EAC/B2pB,EAAOyC,oBAAsB,WACrC,CACI,SAASjB,GAAoCxB,GACzCA,EAAOkC,cAAgBhb,EAAW,CAACxO,EAASC,KACxCqnB,EAAOuE,sBAAwB7rB,EAC/BsnB,EAAOwE,qBAAuB7rB,IAElCqnB,EAAO2C,mBAAqB,SACpC,CACI,SAAShB,GAA8C3B,EAAQ1Y,GAC3Dka,GAAoCxB,GACpC4C,GAAgC5C,EAAQ1Y,EAChD,CACI,SAASma,GAA8CzB,GACnDwB,GAAoCxB,GACpCC,GAAiCD,EACzC,CACI,SAAS4C,GAAgC5C,EAAQ1Y,QACTjR,IAAhC2pB,EAAOwE,uBAGXtc,EAA0B8X,EAAOkC,eACjClC,EAAOwE,qBAAqBld,GAC5B0Y,EAAOuE,2BAAwBluB,EAC/B2pB,EAAOwE,0BAAuBnuB,EAC9B2pB,EAAO2C,mBAAqB,WACpC,CACI,SAASrB,GAA+BtB,GACpCwB,GAAoCxB,EAC5C,CACI,SAAS6C,GAAyC7C,EAAQ1Y,GACtDqa,GAA8C3B,EAAQ1Y,EAC9D,CACI,SAAS2Y,GAAiCD,QACD3pB,IAAjC2pB,EAAOuE,wBAGXvE,EAAOuE,2BAAsBluB,GAC7B2pB,EAAOuE,2BAAwBluB,EAC/B2pB,EAAOwE,0BAAuBnuB,EAC9B2pB,EAAO2C,mBAAqB,YACpC,CAGI,SAAS8B,KACL,MAA0B,oBAAfC,WACAA,WAEc,oBAATC,KACLA,UAEgB,IAAXC,EACLA,OADN,CAIb,CA7SInnB,OAAO6R,iBAAiBuP,GAAgC9X,UAAW,CAC/Dqc,YAAa,CAAE7T,YAAY,GAC3BgU,OAAQ,CAAEhU,YAAY,GACtBzb,MAAO,CAAEyb,YAAY,KAES,iBAAvBlF,OAAOmF,aACd/R,OAAOiJ,eAAemY,GAAgC9X,UAAWsD,OAAOmF,YAAa,CACjFrM,MAAO,kCACPwD,cAAc,IAsStB,MAAMke,GAAUJ,KAGhB,SAASK,GAA0BtQ,GAC/B,GAAsB,mBAATA,GAAuC,iBAATA,EACvC,OAAO,EAEX,GAAkB,iBAAdA,EAAKrd,KACL,OAAO,EAEX,IAEI,OADA,IAAIqd,GACG,CACnB,CACQ,MAAO5N,GACH,OAAO,CACnB,CACA,CAMI,SAASme,KACL,MAAMvQ,EAAOqQ,cAAyC,EAASA,GAAQG,aACvE,OAAOF,GAA0BtQ,GAAQA,OAAOne,CACxD,CAKI,SAAS4uB,KAEL,MAAMzQ,EAAO,SAAsBpd,EAASD,GACxCvE,KAAKwE,QAAUA,GAAW,GAC1BxE,KAAKuE,KAAOA,GAAQ,QAChBnB,MAAMkvB,mBACNlvB,MAAMkvB,kBAAkBtyB,KAAMA,KAAKD,cAM3C,OAHA6T,EAAgBgO,EAAM,gBACtBA,EAAKzN,UAAYtJ,OAAOmT,OAAO5a,MAAM+Q,WACrCtJ,OAAOiJ,eAAe8N,EAAKzN,UAAW,cAAe,CAAE5D,MAAOqR,EAAM2Q,UAAU,EAAMxe,cAAc,IAC3F6N,CACf,CAEI,MAAMwQ,GAAeD,MAAmBE,KAExC,SAASG,GAAqBC,EAAQhU,EAAMiU,EAAcC,EAAc3V,EAAe2T,GACnF,MAAM5Y,EAAS+C,EAAmC2X,GAC5CrF,EAAS1B,GAAmCjN,GAClDgU,EAAOlW,YAAa,EACpB,IAAIqW,GAAe,EAEfC,EAAere,OAAoB/Q,GACvC,OAAO6Q,EAAW,CAACxO,EAASC,KACxB,IAAIgmB,EACJ,QAAetoB,IAAXktB,EAAsB,CAsBtB,GArBA5E,EAAiB,KACb,MAAM7qB,OAA0BuC,IAAlBktB,EAAOjc,OAAuBic,EAAOjc,OAAS,IAAI0d,GAAa,UAAW,cAClFU,EAAU,GACXH,GACDG,EAAQ1nB,KAAK,IACW,aAAhBqT,EAAKtG,OACEmT,GAAoB7M,EAAMvd,GAE9BsT,OAAoB/Q,IAG9BuZ,GACD8V,EAAQ1nB,KAAK,IACa,aAAlBqnB,EAAOta,OACAM,GAAqBga,EAAQvxB,GAEjCsT,OAAoB/Q,IAGnCsvB,EAAmB,IAAMltB,QAAQmtB,IAAIF,EAAQjqB,IAAIoqB,GAAUA,OAAY,EAAM/xB,IAE7EyvB,EAAOnG,QAEP,YADAuB,IAGJ4E,EAAOjqB,iBAAiB,QAASqlB,EACjD,CAIY,SAASmH,IACL,OAAO5e,EAAW,CAAC6e,EAAaC,KAC5B,SAAS3hB,EAAK4J,GACNA,EACA8X,IAKAxe,EAAmB0e,IAAY5hB,EAAM2hB,EAEjE,CACoB3hB,GAAK,IAEzB,CACY,SAAS4hB,IACL,OAAIT,EACOpe,GAAoB,GAExBG,EAAmByY,EAAOkC,cAAe,IACrChb,EAAW,CAACgf,EAAaC,KAC5BpX,GAAgCpE,EAAQ,CACpCwD,YAAaH,IACTyX,EAAele,EAAmB+a,GAAiCtC,EAAQhS,QAAQ3X,EAAW+P,GAC9F8f,GAAY,IAEhBhY,YAAa,IAAMgY,GAAY,GAC/BrX,YAAasX,MAIzC,CAgCY,GA9BAC,EAAmBf,EAAQ1a,EAAOgB,eAAgB8U,IACzC8E,EAIDc,GAAS,EAAM5F,GAHfkF,EAAmB,IAAMzH,GAAoB7M,EAAMoP,IAAc,EAAMA,GAKpE,OAGX2F,EAAmB/U,EAAM2O,EAAOrU,eAAgB8U,IACvC7Q,EAIDyW,GAAS,EAAM5F,GAHfkF,EAAmB,IAAMta,GAAqBga,EAAQ5E,IAAc,EAAMA,GAKvE,OAGX6F,EAAkBjB,EAAQ1a,EAAOgB,eAAgB,KACxC2Z,EAIDe,IAHAV,EAAmB,IAAMpD,GAAqDvC,IAK3E,OAGP7B,GAAoC9M,IAAyB,WAAhBA,EAAKtG,OAAqB,CACvE,MAAMwb,EAAa,IAAI5d,UAAU,+EAC5BiH,EAIDyW,GAAS,EAAME,GAHfZ,EAAmB,IAAMta,GAAqBga,EAAQkB,IAAa,EAAMA,EAK7F,CAEY,SAASC,IAGL,MAAMC,EAAkBhB,EACxB,OAAOle,EAAmBke,EAAc,IAAMgB,IAAoBhB,EAAee,SAA0BnwB,EAC3H,CACY,SAAS+vB,EAAmBxb,EAAQpD,EAASqe,GACnB,YAAlBjb,EAAOG,OACP8a,EAAOjb,EAAOO,cAGdrD,EAAcN,EAASqe,EAE3C,CACY,SAASS,EAAkB1b,EAAQpD,EAASqe,GAClB,WAAlBjb,EAAOG,OACP8a,IAGAhe,EAAgBL,EAASqe,EAE7C,CACY,SAASF,EAAmBE,EAAQa,EAAiBC,GAWjD,SAASC,IAEL,OADAhf,EAAYie,IAAU,IAAMgB,EAASH,EAAiBC,GAAgBG,GAAYD,GAAS,EAAMC,IAC1F,IAC3B,CAboBtB,IAGJA,GAAe,EACK,aAAhBnU,EAAKtG,QAA0BoT,GAAoC9M,GAInEuV,IAHA/e,EAAgB2e,IAAyBI,GAS7D,CACY,SAASP,EAASU,EAASjzB,GACnB0xB,IAGJA,GAAe,EACK,aAAhBnU,EAAKtG,QAA0BoT,GAAoC9M,GAInEwV,EAASE,EAASjzB,GAHlB+T,EAAgB2e,IAAyB,IAAMK,EAASE,EAASjzB,IAKrF,CACY,SAAS+yB,EAASE,EAASjzB,GAYvB,OAXAuuB,GAAmCrC,GACnC1U,EAAmCX,QACpBtU,IAAXktB,GACAA,EAAOpqB,oBAAoB,QAASwlB,GAEpCoI,EACApuB,EAAO7E,GAGP4E,OAAQrC,GAEL,IACvB,CAhEY6R,EAA0B4d,MAkEtC,CAOI,MAAMkB,GACF,WAAAr0B,GACI,MAAM,IAAIgW,UAAU,sBAChC,CAKQ,eAAImN,GACA,IAAKmR,GAAkCr0B,MACnC,MAAMs0B,GAAuC,eAEjD,OAAOC,GAA8Cv0B,KACjE,CAKQ,KAAAwG,GACI,IAAK6tB,GAAkCr0B,MACnC,MAAMs0B,GAAuC,SAEjD,IAAKE,GAAiDx0B,MAClD,MAAM,IAAI+V,UAAU,mDAExB0e,GAAqCz0B,KACjD,CACQ,OAAAujB,CAAQnI,OAAQ3X,GACZ,IAAK4wB,GAAkCr0B,MACnC,MAAMs0B,GAAuC,WAEjD,IAAKE,GAAiDx0B,MAClD,MAAM,IAAI+V,UAAU,qDAExB,OAAO2e,GAAuC10B,KAAMob,EAChE,CAIQ,KAAAla,CAAMgb,OAAIzY,GACN,IAAK4wB,GAAkCr0B,MACnC,MAAMs0B,GAAuC,SAEjDK,GAAqC30B,KAAMkc,EACvD,CAEQ,CAACvE,GAAajD,GACVgN,GAAW1hB,MACX,MAAMoF,EAASpF,KAAK2jB,iBAAiBjP,GAErC,OADAkgB,GAA+C50B,MACxCoF,CACnB,CAEQ,CAACwS,GAAWqD,GACR,MAAMjD,EAAShY,KAAK60B,0BACpB,GAAI70B,KAAKohB,OAAO5V,OAAS,EAAG,CACxB,MAAM4P,EAAQ6F,GAAajhB,MACvBA,KAAKojB,iBAA0C,IAAvBpjB,KAAKohB,OAAO5V,QACpCopB,GAA+C50B,MAC/CwmB,GAAoBxO,IAGpB8c,GAAgD90B,MAEpDib,EAAYM,YAAYH,EACxC,MAEgBJ,EAA6BhD,EAAQiD,GACrC6Z,GAAgD90B,KAEhE,CAEQ,CAAC6X,KAET,EAkBI,SAASwc,GAAkC3gB,GACvC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,8BAGtCA,aAAa0gB,EAC5B,CACI,SAASU,GAAgDnQ,GAClCoQ,GAA8CpQ,KAI7DA,EAAWE,SACXF,EAAWG,YAAa,GAG5BH,EAAWE,UAAW,EAEtB7P,EADoB2P,EAAWI,iBACN,KACrBJ,EAAWE,UAAW,EAClBF,EAAWG,aACXH,EAAWG,YAAa,EACxBgQ,GAAgDnQ,IAE7C,MACRzI,IACCyY,GAAqChQ,EAAYzI,GAC1C,QAEnB,CACI,SAAS6Y,GAA8CpQ,GACnD,MAAM3M,EAAS2M,EAAWkQ,0BAC1B,QAAKL,GAAiD7P,MAGjDA,EAAW2C,cAGZ3L,GAAuB3D,IAAWwD,GAAiCxD,GAAU,IAG7Duc,GAA8C5P,GAChD,EAI1B,CACI,SAASiQ,GAA+CjQ,GACpDA,EAAWI,oBAAiBthB,EAC5BkhB,EAAWhB,sBAAmBlgB,EAC9BkhB,EAAWqM,4BAAyBvtB,CAC5C,CAEI,SAASgxB,GAAqC9P,GAC1C,IAAK6P,GAAiD7P,GAClD,OAEJ,MAAM3M,EAAS2M,EAAWkQ,0BAC1BlQ,EAAWvB,iBAAkB,EACI,IAA7BuB,EAAWvD,OAAO5V,SAClBopB,GAA+CjQ,GAC/C6B,GAAoBxO,GAEhC,CACI,SAAS0c,GAAuC/P,EAAYvJ,GACxD,IAAKoZ,GAAiD7P,GAClD,OAEJ,MAAM3M,EAAS2M,EAAWkQ,0BAC1B,GAAIlZ,GAAuB3D,IAAWwD,GAAiCxD,GAAU,EAC7EmD,GAAiCnD,EAAQoD,GAAO,OAE/C,CACD,IAAIgV,EACJ,IACIA,EAAYzL,EAAWqM,uBAAuB5V,EAC9D,CACY,MAAOiW,GAEH,MADAsD,GAAqChQ,EAAY0M,GAC3CA,CACtB,CACY,IACI/P,GAAqBqD,EAAYvJ,EAAOgV,EACxD,CACY,MAAOmB,GAEH,MADAoD,GAAqChQ,EAAY4M,GAC3CA,CACtB,CACA,CACQuD,GAAgDnQ,EACxD,CACI,SAASgQ,GAAqChQ,EAAYzI,GACtD,MAAMlE,EAAS2M,EAAWkQ,0BACJ,aAAlB7c,EAAOG,SAGXuJ,GAAWiD,GACXiQ,GAA+CjQ,GAC/C8C,GAAoBzP,EAAQkE,GACpC,CACI,SAASqY,GAA8C5P,GACnD,MAAMhjB,EAAQgjB,EAAWkQ,0BAA0B1c,OACnD,MAAc,YAAVxW,EACO,KAEG,WAAVA,EACO,EAEJgjB,EAAWiD,aAAejD,EAAWtD,eACpD,CAEI,SAAS2T,GAA+CrQ,GACpD,OAAIoQ,GAA8CpQ,EAI1D,CACI,SAAS6P,GAAiD7P,GACtD,MAAMhjB,EAAQgjB,EAAWkQ,0BAA0B1c,OACnD,OAAKwM,EAAWvB,iBAA6B,aAAVzhB,CAI3C,CACI,SAASszB,GAAqCjd,EAAQ2M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAe+C,GAC7HtG,EAAWkQ,0BAA4B7c,EACvC2M,EAAWvD,YAAS3d,EACpBkhB,EAAWtD,qBAAkB5d,EAC7Bie,GAAWiD,GACXA,EAAW2C,UAAW,EACtB3C,EAAWvB,iBAAkB,EAC7BuB,EAAWG,YAAa,EACxBH,EAAWE,UAAW,EACtBF,EAAWqM,uBAAyB/F,EACpCtG,EAAWiD,aAAeM,EAC1BvD,EAAWI,eAAiBiD,EAC5BrD,EAAWhB,iBAAmBsE,EAC9BjQ,EAAOa,0BAA4B8L,EAEnC3P,EAAYR,EADQuT,KAC0B,KAC1CpD,EAAW2C,UAAW,EACtBwN,GAAgDnQ,GACzC,MACRwD,IACCwM,GAAqChQ,EAAYwD,GAC1C,MAEnB,CACI,SAAS+M,GAAyDld,EAAQmd,EAAkBjN,EAAe+C,GACvG,MAAMtG,EAAa9Z,OAAOmT,OAAOoW,GAAgCjgB,WACjE,IAAI4T,EACAC,EACAC,EAEAF,OAD2BtkB,IAA3B0xB,EAAiB7M,MACA,IAAM6M,EAAiB7M,MAAM3D,GAG7B,OAGjBqD,OAD0BvkB,IAA1B0xB,EAAiB5M,KACD,IAAM4M,EAAiB5M,KAAK5D,GAG5B,IAAMnQ,OAAoB/Q,GAG1CwkB,OAD4BxkB,IAA5B0xB,EAAiBtZ,OACCnH,GAAUygB,EAAiBtZ,OAAOnH,GAGlC,IAAMF,OAAoB/Q,GAEhDwxB,GAAqCjd,EAAQ2M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAe+C,EAChI,CAEI,SAASqJ,GAAuC/vB,GAC5C,OAAO,IAAIwR,UAAU,6CAA6CxR,0DAC1E,CAEI,SAAS6wB,GAAkBpd,EAAQqd,GAC/B,OAAItS,GAA+B/K,EAAOa,2BAC/Byc,GAAsBtd,GAE1Bud,GAAyBvd,EACxC,CACI,SAASud,GAAyBvd,EAAQqd,GACtC,MAAMtd,EAAS+C,EAAmC9C,GAClD,IAIIwd,EACAC,EACAC,EACAC,EACAC,EARAC,GAAU,EACVC,GAAY,EACZC,GAAY,EACZC,GAAY,EAMhB,MAAMC,EAAgB3hB,EAAWxO,IAC7B8vB,EAAuB9vB,IAE3B,SAASkiB,IACL,OAAI6N,GACAC,GAAY,EACLthB,OAAoB/Q,KAE/BoyB,GAAU,EA2CV1Z,GAAgCpE,EA1CZ,CAChBwD,YAAaH,IAIT7F,EAAgB,KACZugB,GAAY,EACZ,MAAMI,EAAS9a,EACT+a,EAAS/a,EAMV2a,GACDrB,GAAuCgB,EAAQ7c,0BAA2Bqd,GAEzEF,GACDtB,GAAuCiB,EAAQ9c,0BAA2Bsd,GAE9EN,GAAU,EACNC,GACA9N,OAIZ1M,YAAa,KACTua,GAAU,EACLE,GACDtB,GAAqCiB,EAAQ7c,2BAE5Cmd,GACDvB,GAAqCkB,EAAQ9c,2BAE5Ckd,GAAcC,GACfJ,OAAqBnyB,IAG7BwY,YAAa,KACT4Z,GAAU,KAIXrhB,OAAoB/Q,GACvC,CACQ,SAAS2yB,EAAiB1hB,GAGtB,GAFAqhB,GAAY,EACZP,EAAU9gB,EACNshB,EAAW,CACX,MAAMK,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe7d,GAAqBT,EAAQqe,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASM,EAAiB7hB,GAGtB,GAFAshB,GAAY,EACZP,EAAU/gB,EACNqhB,EAAW,CACX,MAAMM,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe7d,GAAqBT,EAAQqe,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASlO,IAEjB,CAWQ,OAVA2N,EAAUc,GAAqBzO,EAAgBC,EAAeoO,GAC9DT,EAAUa,GAAqBzO,EAAgBC,EAAeuO,GAC9DrhB,EAAc6C,EAAOgB,eAAiBoP,IAClCwM,GAAqCe,EAAQ7c,0BAA2BsP,GACxEwM,GAAqCgB,EAAQ9c,0BAA2BsP,GACnE4N,GAAcC,GACfJ,OAAqBnyB,GAElB,OAEJ,CAACiyB,EAASC,EACzB,CACI,SAASL,GAAsBtd,GAC3B,IAMIwd,EACAC,EACAC,EACAC,EACAC,EAVA7d,EAAS+C,EAAmC9C,GAC5C6d,GAAU,EACVY,GAAsB,EACtBC,GAAsB,EACtBX,GAAY,EACZC,GAAY,EAMhB,MAAMC,EAAgB3hB,EAAWxO,IAC7B8vB,EAAuB9vB,IAE3B,SAAS6wB,EAAmBC,GACxB1hB,EAAc0hB,EAAW7d,eAAgBoP,IACjCyO,IAAe7e,IAGnB0L,GAAkCiS,EAAQ7c,0BAA2BsP,GACrE1E,GAAkCkS,EAAQ9c,0BAA2BsP,GAChE4N,GAAcC,GACfJ,OAAqBnyB,IALd,MAS3B,CACQ,SAASozB,IACD9N,GAA2BhR,KAC3BW,EAAmCX,GACnCA,EAAS+C,EAAmC9C,GAC5C2e,EAAmB5e,IA4DvBoE,GAAgCpE,EA1DZ,CAChBwD,YAAaH,IAIT7F,EAAgB,KACZkhB,GAAsB,EACtBC,GAAsB,EACtB,MAAMR,EAAS9a,EACf,IAAI+a,EAAS/a,EACb,IAAK2a,IAAcC,EACf,IACIG,EAASpV,GAAkB3F,EAC3D,CAC4B,MAAOoK,GAIH,OAHA/B,GAAkCiS,EAAQ7c,0BAA2B2M,GACrE/B,GAAkCkS,EAAQ9c,0BAA2B2M,QACrEoQ,EAAqBnd,GAAqBT,EAAQwN,GAElF,CAE6BuQ,GACDvS,GAAoCkS,EAAQ7c,0BAA2Bqd,GAEtEF,GACDxS,GAAoCmS,EAAQ9c,0BAA2Bsd,GAE3EN,GAAU,EACNY,EACAK,IAEKJ,GACLK,OAIZzb,YAAa,KACTua,GAAU,EACLE,GACDzS,GAAkCoS,EAAQ7c,2BAEzCmd,GACD1S,GAAkCqS,EAAQ9c,2BAE1C6c,EAAQ7c,0BAA0B2L,kBAAkBhZ,OAAS,GAC7DiX,GAAoCiT,EAAQ7c,0BAA2B,GAEvE8c,EAAQ9c,0BAA0B2L,kBAAkBhZ,OAAS,GAC7DiX,GAAoCkT,EAAQ9c,0BAA2B,GAEtEkd,GAAcC,GACfJ,OAAqBnyB,IAG7BwY,YAAa,KACT4Z,GAAU,IAI9B,CACQ,SAASmB,EAAmBjV,EAAMkV,GAC1Bvb,GAA8B3D,KAC9BW,EAAmCX,GACnCA,EAAS6Q,GAAgC5Q,GACzC2e,EAAmB5e,IAEvB,MAAMmf,EAAaD,EAAatB,EAAUD,EACpCyB,EAAcF,EAAavB,EAAUC,EAiE3CzM,GAA6BnR,EAAQgK,EAAM,EAhEnB,CACpBxG,YAAaH,IAIT7F,EAAgB,KACZkhB,GAAsB,EACtBC,GAAsB,EACtB,MAAMU,EAAeH,EAAajB,EAAYD,EAE9C,GADsBkB,EAAalB,EAAYC,EAiBrCoB,GACNxU,GAA+CsU,EAAWre,0BAA2BuC,OAjBrE,CAChB,IAAImK,EACJ,IACIA,EAAcxE,GAAkB3F,EAChE,CAC4B,MAAOoK,GAIH,OAHA/B,GAAkCyT,EAAWre,0BAA2B2M,GACxE/B,GAAkC0T,EAAYte,0BAA2B2M,QACzEoQ,EAAqBnd,GAAqBT,EAAQwN,GAElF,CACiC4R,GACDxU,GAA+CsU,EAAWre,0BAA2BuC,GAEzFoI,GAAoC2T,EAAYte,0BAA2B0M,EACvG,CAIwBsQ,GAAU,EACNY,EACAK,IAEKJ,GACLK,OAIZzb,YAAaF,IACTya,GAAU,EACV,MAAMuB,EAAeH,EAAajB,EAAYD,EACxCsB,EAAgBJ,EAAalB,EAAYC,EAC1CoB,GACD9T,GAAkC4T,EAAWre,2BAE5Cwe,GACD/T,GAAkC6T,EAAYte,gCAEpCpV,IAAV2X,IACKgc,GACDxU,GAA+CsU,EAAWre,0BAA2BuC,IAEpFic,GAAiBF,EAAYte,0BAA0B2L,kBAAkBhZ,OAAS,GACnFiX,GAAoC0U,EAAYte,0BAA2B,IAG9Eue,GAAiBC,GAClBzB,OAAqBnyB,IAG7BwY,YAAa,KACT4Z,GAAU,IAI9B,CACQ,SAASiB,IACL,GAAIjB,EAEA,OADAY,GAAsB,EACfjiB,OAAoB/Q,GAE/BoyB,GAAU,EACV,MAAM/S,EAAcG,GAA2CyS,EAAQ7c,2BAOvE,OANoB,OAAhBiK,EACA+T,IAGAG,EAAmBlU,EAAYT,OAAO,GAEnC7N,OAAoB/Q,EACvC,CACQ,SAASszB,IACL,GAAIlB,EAEA,OADAa,GAAsB,EACfliB,OAAoB/Q,GAE/BoyB,GAAU,EACV,MAAM/S,EAAcG,GAA2C0S,EAAQ9c,2BAOvE,OANoB,OAAhBiK,EACA+T,IAGAG,EAAmBlU,EAAYT,OAAO,GAEnC7N,OAAoB/Q,EACvC,CACQ,SAAS2yB,EAAiB1hB,GAGtB,GAFAqhB,GAAY,EACZP,EAAU9gB,EACNshB,EAAW,CACX,MAAMK,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe7d,GAAqBT,EAAQqe,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASM,EAAiB7hB,GAGtB,GAFAshB,GAAY,EACZP,EAAU/gB,EACNqhB,EAAW,CACX,MAAMM,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe7d,GAAqBT,EAAQqe,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASlO,IAEjB,CAIQ,OAHA2N,EAAU4B,GAAyBvP,EAAgB+O,EAAgBV,GACnET,EAAU2B,GAAyBvP,EAAgBgP,EAAgBR,GACnEI,EAAmB5e,GACZ,CAAC2d,EAASC,EACzB,CAEI,SAAS4B,GAAqBvf,GAC1B,OAAOvE,EAAauE,SAAuC,IAArBA,EAAOwf,SACrD,CAEI,SAASC,GAAmBhF,GACxB,OAAI8E,GAAqB9E,GACdiF,GAAgCjF,EAAO+E,aAE3CG,GAA2BlF,EAC1C,CACI,SAASkF,GAA2BC,GAChC,IAAI5f,EACJ,MAAMyI,EAAiBH,GAAYsX,EAAe,SAElD,SAAS5P,IACL,IAAI6P,EACJ,IACIA,EAAarX,GAAaC,EAC1C,CACY,MAAOvE,GACH,OAAOzH,EAAoByH,EAC3C,CAEY,OAAO/G,EADaX,EAAoBqjB,GACClX,IACrC,IAAKlN,EAAakN,GACd,MAAM,IAAI5K,UAAU,kFAGxB,GADa2K,GAAiBC,GAE1B8T,GAAqCzc,EAAOa,+BAE3C,CACD,MAAMtI,EAAQsQ,GAAcF,GAC5B+T,GAAuC1c,EAAOa,0BAA2BtI,EAC7F,GAEA,CACQ,SAAS0X,EAAgBvT,GACrB,MAAMqJ,EAAW0C,EAAe1C,SAChC,IAAI+Z,EAUAC,EATJ,IACID,EAAepY,GAAU3B,EAAU,SACnD,CACY,MAAO7B,GACH,OAAOzH,EAAoByH,EAC3C,CACY,QAAqBzY,IAAjBq0B,EACA,OAAOtjB,OAAoB/Q,GAG/B,IACIs0B,EAAeniB,EAAYkiB,EAAc/Z,EAAU,CAACrJ,GACpE,CACY,MAAOwH,GACH,OAAOzH,EAAoByH,EAC3C,CAEY,OAAO/G,EADeX,EAAoBujB,GACCpX,IACvC,IAAKlN,EAAakN,GACd,MAAM,IAAI5K,UAAU,qFAIxC,CAEQ,OADAiC,EAASwe,GAnDchjB,EAmDuBwU,EAAeC,EAAiB,GACvEjQ,CACf,CACI,SAAS0f,GAAgC3f,GACrC,IAAIC,EAEJ,SAASgQ,IACL,IAAIgQ,EACJ,IACIA,EAAcjgB,EAAO+D,MACrC,CACY,MAAOI,GACH,OAAOzH,EAAoByH,EAC3C,CACY,OAAO/G,EAAqB6iB,EAAaC,IACrC,IAAKxkB,EAAawkB,GACd,MAAM,IAAIliB,UAAU,gFAExB,GAAIkiB,EAAW5c,KACXoZ,GAAqCzc,EAAOa,+BAE3C,CACD,MAAMtI,EAAQ0nB,EAAW1nB,MACzBmkB,GAAuC1c,EAAOa,0BAA2BtI,EAC7F,GAEA,CACQ,SAAS0X,EAAgBvT,GACrB,IACI,OAAOF,EAAoBuD,EAAO8D,OAAOnH,GACzD,CACY,MAAOwH,GACH,OAAOzH,EAAoByH,EAC3C,CACA,CAEQ,OADAlE,EAASwe,GA9BchjB,EA8BuBwU,EAAeC,EAAiB,GACvEjQ,CACf,CAEI,SAASkgB,GAAqCzF,EAAQ5Y,GAClDF,EAAiB8Y,EAAQ5Y,GACzB,MAAMiQ,EAAW2I,EACX3O,EAAwBgG,aAA2C,EAASA,EAAShG,sBACrFjI,EAASiO,aAA2C,EAASA,EAASjO,OACtE0M,EAAOuB,aAA2C,EAASA,EAASvB,KACpED,EAAQwB,aAA2C,EAASA,EAASxB,MACrEhiB,EAAOwjB,aAA2C,EAASA,EAASxjB,KAC1E,MAAO,CACHwd,2BAAiDrgB,IAA1BqgB,OACnBrgB,EACA+W,EAAwCsJ,EAAuB,GAAGjK,6CACtEgC,YAAmBpY,IAAXoY,OACJpY,EACA00B,GAAsCtc,EAAQiO,EAAU,GAAGjQ,8BAC/D0O,UAAe9kB,IAAT8kB,OACF9kB,EACA20B,GAAoC7P,EAAMuB,EAAU,GAAGjQ,4BAC3DyO,WAAiB7kB,IAAV6kB,OACH7kB,EACA40B,GAAqC/P,EAAOwB,EAAU,GAAGjQ,6BAC7DvT,UAAe7C,IAAT6C,OAAqB7C,EAAY60B,GAA0BhyB,EAAM,GAAGuT,4BAEtF,CACI,SAASse,GAAsCtkB,EAAIiW,EAAUjQ,GAEzD,OADAC,EAAejG,EAAIgG,GACXnF,GAAWwB,EAAYrC,EAAIiW,EAAU,CAACpV,GACtD,CACI,SAAS0jB,GAAoCvkB,EAAIiW,EAAUjQ,GAEvD,OADAC,EAAejG,EAAIgG,GACX8K,GAAezO,EAAYrC,EAAIiW,EAAU,CAACnF,GAC1D,CACI,SAAS0T,GAAqCxkB,EAAIiW,EAAUjQ,GAExD,OADAC,EAAejG,EAAIgG,GACX8K,GAAe/O,EAAY/B,EAAIiW,EAAU,CAACnF,GAC1D,CACI,SAAS2T,GAA0BhyB,EAAMuT,GAErC,GAAa,UADbvT,EAAO,GAAGA,KAEN,MAAM,IAAIyP,UAAU,GAAG8D,MAAYvT,8DAEvC,OAAOA,CACf,CAEI,SAASiyB,GAAuB1nB,EAASgJ,GACrCF,EAAiB9I,EAASgJ,GAC1B,MAAMmD,EAAgBnM,aAAyC,EAASA,EAAQmM,cAChF,MAAO,CAAEA,cAAe4D,QAAQ5D,GACxC,CAEI,SAASwb,GAAmB3nB,EAASgJ,GACjCF,EAAiB9I,EAASgJ,GAC1B,MAAM8Y,EAAe9hB,aAAyC,EAASA,EAAQ8hB,aACzE3V,EAAgBnM,aAAyC,EAASA,EAAQmM,cAC1E0V,EAAe7hB,aAAyC,EAASA,EAAQ6hB,aACzE/B,EAAS9f,aAAyC,EAASA,EAAQ8f,OAIzE,YAHeltB,IAAXktB,GACA8H,GAAkB9H,EAAQ,GAAG9W,8BAE1B,CACH8Y,aAAc/R,QAAQ+R,GACtB3V,cAAe4D,QAAQ5D,GACvB0V,aAAc9R,QAAQ8R,GACtB/B,SAEZ,CACI,SAAS8H,GAAkB9H,EAAQ9W,GAC/B,IAAK0Q,GAAcoG,GACf,MAAM,IAAI5a,UAAU,GAAG8D,2BAEnC,CAEI,SAAS6e,GAA4BvX,EAAMtH,GACvCF,EAAiBwH,EAAMtH,GACvB,MAAM8e,EAAWxX,aAAmC,EAASA,EAAKwX,SAClExe,EAAoBwe,EAAU,WAAY,wBAC1C/d,EAAqB+d,EAAU,GAAG9e,gCAClC,MAAM0Y,EAAWpR,aAAmC,EAASA,EAAKoR,SAGlE,OAFApY,EAAoBoY,EAAU,WAAY,wBAC1ClI,GAAqBkI,EAAU,GAAG1Y,gCAC3B,CAAE8e,WAAUpG,WAC3B,CAzsBI1nB,OAAO6R,iBAAiB0X,GAAgCjgB,UAAW,CAC/D3N,MAAO,CAAEmW,YAAY,GACrB4G,QAAS,CAAE5G,YAAY,GACvBzb,MAAO,CAAEyb,YAAY,GACrBuG,YAAa,CAAEvG,YAAY,KAE/B/I,EAAgBwgB,GAAgCjgB,UAAU3N,MAAO,SACjEoN,EAAgBwgB,GAAgCjgB,UAAUoP,QAAS,WACnE3P,EAAgBwgB,GAAgCjgB,UAAUjT,MAAO,SAC/B,iBAAvBuW,OAAOmF,aACd/R,OAAOiJ,eAAesgB,GAAgCjgB,UAAWsD,OAAOmF,YAAa,CACjFrM,MAAO,kCACPwD,cAAc,IAosBtB,MAAM6kB,GACF,WAAA74B,CAAY84B,EAAsB,GAAI/N,EAAc,CAAA,QACpBrnB,IAAxBo1B,EACAA,EAAsB,KAGtB7e,EAAa6e,EAAqB,mBAEtC,MAAMtP,EAAWG,GAAuBoB,EAAa,oBAC/CqK,EAAmB+C,GAAqCW,EAAqB,mBAEnF,GADAC,GAAyB94B,MACK,UAA1Bm1B,EAAiB7uB,KAAkB,CACnC,QAAsB7C,IAAlB8lB,EAASzoB,KACT,MAAM,IAAI0gB,WAAW,8DAGzB4G,GAAsDpoB,KAAMm1B,EADtC7L,GAAqBC,EAAU,GAErE,KACiB,CACD,MAAM0B,EAAgBxB,GAAqBF,GAE3C2L,GAAyDl1B,KAAMm1B,EADzC7L,GAAqBC,EAAU,GAC2C0B,EAChH,CACA,CAIQ,UAAIE,GACA,IAAKtQ,GAAiB7a,MAClB,MAAM+4B,GAA4B,UAEtC,OAAOpd,GAAuB3b,KAC1C,CAOQ,MAAA6b,CAAOnH,OAASjR,GACZ,OAAKoX,GAAiB7a,MAGlB2b,GAAuB3b,MAChByU,EAAoB,IAAIsB,UAAU,qDAEtC0C,GAAqBzY,KAAM0U,GALvBD,EAAoBskB,GAA4B,UAMvE,CACQ,SAAAvB,CAAUvO,OAAaxlB,GACnB,IAAKoX,GAAiB7a,MAClB,MAAM+4B,GAA4B,aAGtC,YAAqBt1B,IADL+kB,GAAqBS,EAAY,mBACrCR,KACD3N,EAAmC9a,MAEvC4oB,GAAgC5oB,KACnD,CACQ,WAAAg5B,CAAYC,EAAchQ,EAAa,IACnC,IAAKpO,GAAiB7a,MAClB,MAAM+4B,GAA4B,eAEtC9e,EAAuBgf,EAAc,EAAG,eACxC,MAAMC,EAAYR,GAA4BO,EAAc,mBACtDpoB,EAAU2nB,GAAmBvP,EAAY,oBAC/C,GAAItN,GAAuB3b,MACvB,MAAM,IAAI+V,UAAU,kFAExB,GAAIsV,GAAuB6N,EAAU3G,UACjC,MAAM,IAAIxc,UAAU,kFAIxB,OADAT,EADgBkd,GAAqBxyB,KAAMk5B,EAAU3G,SAAU1hB,EAAQ6hB,aAAc7hB,EAAQ8hB,aAAc9hB,EAAQmM,cAAenM,EAAQ8f,SAEnIuI,EAAUP,QAC7B,CACQ,MAAAQ,CAAOC,EAAanQ,EAAa,IAC7B,IAAKpO,GAAiB7a,MAClB,OAAOyU,EAAoBskB,GAA4B,WAE3D,QAAoBt1B,IAAhB21B,EACA,OAAO3kB,EAAoB,wCAE/B,IAAK6V,GAAiB8O,GAClB,OAAO3kB,EAAoB,IAAIsB,UAAU,8EAE7C,IAAIlF,EACJ,IACIA,EAAU2nB,GAAmBvP,EAAY,mBACzD,CACY,MAAO/M,GACH,OAAOzH,EAAoByH,EAC3C,CACY,OAAIP,GAAuB3b,MAChByU,EAAoB,IAAIsB,UAAU,8EAEzCsV,GAAuB+N,GAChB3kB,EAAoB,IAAIsB,UAAU,8EAEtCyc,GAAqBxyB,KAAMo5B,EAAavoB,EAAQ6hB,aAAc7hB,EAAQ8hB,aAAc9hB,EAAQmM,cAAenM,EAAQ8f,OACtI,CAYQ,GAAA0I,GACI,IAAKxe,GAAiB7a,MAClB,MAAM+4B,GAA4B,OAGtC,OAAOza,GADU8W,GAAkBp1B,MAE/C,CACQ,MAAAgD,CAAOimB,OAAaxlB,GAChB,IAAKoX,GAAiB7a,MAClB,MAAM+4B,GAA4B,UAGtC,OAAOlb,GAAmC7d,KAD1Bu4B,GAAuBtP,EAAY,mBACKjM,cACpE,CACQ,CAACoD,IAAqBvP,GAElB,OAAO7Q,KAAKgD,OAAO6N,EAC/B,CAOQ,WAAO9N,CAAK60B,GACR,OAAOH,GAAmBG,EACtC,EAkCI,SAASpB,GAAqBzO,EAAgBC,EAAeC,EAAiBC,EAAgB,EAAG+C,EAAgB,IAAM,GACnH,MAAMjT,EAASnN,OAAOmT,OAAO4a,GAAezkB,WAI5C,OAHA2kB,GAAyB9gB,GAEzBid,GAAqCjd,EADlBnN,OAAOmT,OAAOoW,GAAgCjgB,WACR4T,EAAgBC,EAAeC,EAAiBC,EAAe+C,GACjHjT,CACf,CAEI,SAASsf,GAAyBvP,EAAgBC,EAAeC,GAC7D,MAAMjQ,EAASnN,OAAOmT,OAAO4a,GAAezkB,WAI5C,OAHA2kB,GAAyB9gB,GAEzB8P,GAAkC9P,EADfnN,OAAOmT,OAAO6E,GAA6B1O,WACR4T,EAAgBC,EAAeC,EAAiB,OAAGxkB,GAClGuU,CACf,CACI,SAAS8gB,GAAyB9gB,GAC9BA,EAAOG,OAAS,WAChBH,EAAOE,aAAUzU,EACjBuU,EAAOO,kBAAe9U,EACtBuU,EAAOuE,YAAa,CAC5B,CACI,SAAS1B,GAAiBnH,GACtB,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,8BAGtCA,aAAaklB,EAC5B,CACI,SAASjd,GAAuB3D,GAC5B,YAAuBvU,IAAnBuU,EAAOE,OAInB,CAEI,SAASO,GAAqBT,EAAQtD,GAElC,GADAsD,EAAOuE,YAAa,EACE,WAAlBvE,EAAOG,OACP,OAAO3D,OAAoB/Q,GAE/B,GAAsB,YAAlBuU,EAAOG,OACP,OAAO1D,EAAoBuD,EAAOO,cAEtCiO,GAAoBxO,GACpB,MAAMD,EAASC,EAAOE,QACtB,QAAezU,IAAXsU,GAAwBgR,GAA2BhR,GAAS,CAC5D,MAAMsR,EAAmBtR,EAAO+Q,kBAChC/Q,EAAO+Q,kBAAoB,IAAI1S,EAC/BiT,EAAiBpoB,QAAQ4lB,IACrBA,EAAgBvL,iBAAY7X,IAE5C,CAEQ,OAAO0R,EADqB6C,EAAOa,0BAA0BlB,GAAajD,GACzBlB,EACzD,CACI,SAASgT,GAAoBxO,GACzBA,EAAOG,OAAS,SAChB,MAAMJ,EAASC,EAAOE,QACtB,QAAezU,IAAXsU,IAGJmB,EAAkCnB,GAC9B2D,GAA8B3D,IAAS,CACvC,MAAM0E,EAAe1E,EAAOmD,cAC5BnD,EAAOmD,cAAgB,IAAI9E,EAC3BqG,EAAaxb,QAAQga,IACjBA,EAAYK,eAE5B,CACA,CACI,SAASmM,GAAoBzP,EAAQkE,GACjClE,EAAOG,OAAS,UAChBH,EAAOO,aAAe2D,EACtB,MAAMnE,EAASC,EAAOE,aACPzU,IAAXsU,IAGJY,EAAiCZ,EAAQmE,GACrCR,GAA8B3D,GAC9ByE,GAA6CzE,EAAQmE,GAGrDkN,GAA8CrR,EAAQmE,GAElE,CAEI,SAAS6c,GAA4Bx0B,GACjC,OAAO,IAAIwR,UAAU,4BAA4BxR,yCACzD,CAEI,SAAS+0B,GAA2B3P,EAAM9P,GACtCF,EAAiBgQ,EAAM9P,GACvB,MAAMqO,EAAgByB,aAAmC,EAASA,EAAKzB,cAEvE,OADA/N,EAAoB+N,EAAe,gBAAiB,uBAC7C,CACHA,cAAe7N,EAA0B6N,GAErD,CAnIIrd,OAAO6R,iBAAiBkc,GAAgB,CACpC71B,KAAM,CAAE4Z,YAAY,KAExB9R,OAAO6R,iBAAiBkc,GAAezkB,UAAW,CAC9C0H,OAAQ,CAAEc,YAAY,GACtB6a,UAAW,CAAE7a,YAAY,GACzBqc,YAAa,CAAErc,YAAY,GAC3Bwc,OAAQ,CAAExc,YAAY,GACtB0c,IAAK,CAAE1c,YAAY,GACnB3Z,OAAQ,CAAE2Z,YAAY,GACtBwO,OAAQ,CAAExO,YAAY,KAE1B/I,EAAgBglB,GAAe71B,KAAM,QACrC6Q,EAAgBglB,GAAezkB,UAAU0H,OAAQ,UACjDjI,EAAgBglB,GAAezkB,UAAUqjB,UAAW,aACpD5jB,EAAgBglB,GAAezkB,UAAU6kB,YAAa,eACtDplB,EAAgBglB,GAAezkB,UAAUglB,OAAQ,UACjDvlB,EAAgBglB,GAAezkB,UAAUklB,IAAK,OAC9CzlB,EAAgBglB,GAAezkB,UAAUnR,OAAQ,UACf,iBAAvByU,OAAOmF,aACd/R,OAAOiJ,eAAe8kB,GAAezkB,UAAWsD,OAAOmF,YAAa,CAChErM,MAAO,iBACPwD,cAAc,IAGtBlJ,OAAOiJ,eAAe8kB,GAAezkB,UAAWiM,GAAqB,CACjE7P,MAAOqoB,GAAezkB,UAAUnR,OAChCuvB,UAAU,EACVxe,cAAc,IA0GlB,MAAMwlB,GAA0Bne,GACrBA,EAAMiE,WAEjBzL,EAAgB2lB,GAAwB,QAMxC,MAAMC,GACF,WAAAz5B,CAAY8Q,GACRoJ,EAAuBpJ,EAAS,EAAG,6BACnCA,EAAUyoB,GAA2BzoB,EAAS,mBAC9C7Q,KAAKy5B,wCAA0C5oB,EAAQqX,aACnE,CAIQ,iBAAIA,GACA,IAAKwR,GAA4B15B,MAC7B,MAAM25B,GAA8B,iBAExC,OAAO35B,KAAKy5B,uCACxB,CAIQ,QAAI34B,GACA,IAAK44B,GAA4B15B,MAC7B,MAAM25B,GAA8B,QAExC,OAAOJ,EACnB,EAaI,SAASI,GAA8Bp1B,GACnC,OAAO,IAAIwR,UAAU,uCAAuCxR,oDACpE,CACI,SAASm1B,GAA4BhmB,GACjC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,4CAGtCA,aAAa8lB,EAC5B,CAtBI3uB,OAAO6R,iBAAiB8c,GAA0BrlB,UAAW,CACzD+T,cAAe,CAAEvL,YAAY,GAC7B7b,KAAM,CAAE6b,YAAY,KAEU,iBAAvBlF,OAAOmF,aACd/R,OAAOiJ,eAAe0lB,GAA0BrlB,UAAWsD,OAAOmF,YAAa,CAC3ErM,MAAO,4BACPwD,cAAc,IAkBtB,MAAM6lB,GAAoB,IACf,EAEXhmB,EAAgBgmB,GAAmB,QAMnC,MAAMC,GACF,WAAA95B,CAAY8Q,GACRoJ,EAAuBpJ,EAAS,EAAG,wBACnCA,EAAUyoB,GAA2BzoB,EAAS,mBAC9C7Q,KAAK85B,mCAAqCjpB,EAAQqX,aAC9D,CAIQ,iBAAIA,GACA,IAAK6R,GAAuB/5B,MACxB,MAAMg6B,GAAyB,iBAEnC,OAAOh6B,KAAK85B,kCACxB,CAKQ,QAAIh5B,GACA,IAAKi5B,GAAuB/5B,MACxB,MAAMg6B,GAAyB,QAEnC,OAAOJ,EACnB,EAaI,SAASI,GAAyBz1B,GAC9B,OAAO,IAAIwR,UAAU,kCAAkCxR,+CAC/D,CACI,SAASw1B,GAAuBrmB,GAC5B,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,uCAGtCA,aAAammB,EAC5B,CAEI,SAASI,GAAmBnQ,EAAUjQ,GAClCF,EAAiBmQ,EAAUjQ,GAC3B,MAAMgC,EAASiO,aAA2C,EAASA,EAASjO,OACtEqe,EAAQpQ,aAA2C,EAASA,EAASoQ,MACrEC,EAAerQ,aAA2C,EAASA,EAASqQ,aAC5E7R,EAAQwB,aAA2C,EAASA,EAASxB,MACrE4Q,EAAYpP,aAA2C,EAASA,EAASoP,UACzEkB,EAAetQ,aAA2C,EAASA,EAASsQ,aAClF,MAAO,CACHve,YAAmBpY,IAAXoY,OACJpY,EACA42B,GAAiCxe,EAAQiO,EAAU,GAAGjQ,8BAC1DqgB,WAAiBz2B,IAAVy2B,OACHz2B,EACA62B,GAAgCJ,EAAOpQ,EAAU,GAAGjQ,6BACxDsgB,eACA7R,WAAiB7kB,IAAV6kB,OACH7kB,EACA82B,GAAgCjS,EAAOwB,EAAU,GAAGjQ,6BACxDqf,eAAyBz1B,IAAdy1B,OACPz1B,EACA+2B,GAAoCtB,EAAWpP,EAAU,GAAGjQ,iCAChEugB,eAEZ,CACI,SAASE,GAAgCzmB,EAAIiW,EAAUjQ,GAEnD,OADAC,EAAejG,EAAIgG,GACX8K,GAAezO,EAAYrC,EAAIiW,EAAU,CAACnF,GAC1D,CACI,SAAS4V,GAAgC1mB,EAAIiW,EAAUjQ,GAEnD,OADAC,EAAejG,EAAIgG,GACX8K,GAAe/O,EAAY/B,EAAIiW,EAAU,CAACnF,GAC1D,CACI,SAAS6V,GAAoC3mB,EAAIiW,EAAUjQ,GAEvD,OADAC,EAAejG,EAAIgG,GACZ,CAACuB,EAAOuJ,IAAezO,EAAYrC,EAAIiW,EAAU,CAAC1O,EAAOuJ,GACxE,CACI,SAAS0V,GAAiCxmB,EAAIiW,EAAUjQ,GAEpD,OADAC,EAAejG,EAAIgG,GACXnF,GAAWwB,EAAYrC,EAAIiW,EAAU,CAACpV,GACtD,CAhEI7J,OAAO6R,iBAAiBmd,GAAqB1lB,UAAW,CACpD+T,cAAe,CAAEvL,YAAY,GAC7B7b,KAAM,CAAE6b,YAAY,KAEU,iBAAvBlF,OAAOmF,aACd/R,OAAOiJ,eAAe+lB,GAAqB1lB,UAAWsD,OAAOmF,YAAa,CACtErM,MAAO,uBACPwD,cAAc,IAoEtB,MAAM0mB,GACF,WAAA16B,CAAY26B,EAAiB,CAAA,EAAIC,EAAsB,CAAA,EAAIC,EAAsB,SACtDn3B,IAAnBi3B,IACAA,EAAiB,MAErB,MAAMG,EAAmBnR,GAAuBiR,EAAqB,oBAC/DG,EAAmBpR,GAAuBkR,EAAqB,mBAC/DG,EAAcd,GAAmBS,EAAgB,mBACvD,QAAiCj3B,IAA7Bs3B,EAAYZ,aACZ,MAAM,IAAI3Y,WAAW,kCAEzB,QAAiC/d,IAA7Bs3B,EAAYX,aACZ,MAAM,IAAI5Y,WAAW,kCAEzB,MAAMwZ,EAAwB1R,GAAqBwR,EAAkB,GAC/DG,EAAwBxR,GAAqBqR,GAC7CI,EAAwB5R,GAAqBuR,EAAkB,GAC/DM,EAAwB1R,GAAqBoR,GACnD,IAAIO,EAIJC,GAA0Br7B,KAHLsU,EAAWxO,IAC5Bs1B,EAAuBt1B,IAEmBo1B,EAAuBC,EAAuBH,EAAuBC,GACnHK,GAAqDt7B,KAAM+6B,QACjCt3B,IAAtBs3B,EAAYzS,MACZ8S,EAAqBL,EAAYzS,MAAMtoB,KAAKu7B,6BAG5CH,OAAqB33B,EAErC,CAIQ,YAAIk1B,GACA,IAAK6C,GAAkBx7B,MACnB,MAAMy7B,GAA0B,YAEpC,OAAOz7B,KAAK07B,SACxB,CAIQ,YAAInJ,GACA,IAAKiJ,GAAkBx7B,MACnB,MAAMy7B,GAA0B,YAEpC,OAAOz7B,KAAK27B,SACxB,EAYI,SAASN,GAA0BrjB,EAAQ4jB,EAAcV,EAAuBC,EAAuBH,EAAuBC,GAC1H,SAASlT,IACL,OAAO6T,CACnB,CACQ,SAAS/P,EAAezQ,GACpB,OAAOygB,GAAyC7jB,EAAQoD,EACpE,CACQ,SAAS2Q,EAAerX,GACpB,OAAOonB,GAAyC9jB,EAAQtD,EACpE,CACQ,SAASoX,IACL,OAAOiQ,GAAyC/jB,EAC5D,CAEQ,SAASgQ,IACL,OAAOgU,GAA0ChkB,EAC7D,CACQ,SAASiQ,EAAgBvT,GACrB,OAAOunB,GAA4CjkB,EAAQtD,EACvE,CANQsD,EAAO2jB,UAAY/P,GAAqB7D,EAAgB8D,EAAgBC,EAAgBC,EAAgBmP,EAAuBC,GAO/HnjB,EAAO0jB,UAAYlF,GAAqBzO,EAAgBC,EAAeC,EAAiB+S,EAAuBC,GAE/GjjB,EAAOyU,mBAAgBhpB,EACvBuU,EAAOkkB,gCAA6Bz4B,EACpCuU,EAAOmkB,wCAAqC14B,EAC5C24B,GAA+BpkB,GAAQ,GACvCA,EAAOujB,gCAA6B93B,CAC5C,CACI,SAAS+3B,GAAkB9nB,GACvB,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,+BAGtCA,aAAa+mB,EAC5B,CAEI,SAAS4B,GAAqBrkB,EAAQkE,GAClCyY,GAAqC3c,EAAO0jB,UAAU7iB,0BAA2BqD,GACjFogB,GAA4CtkB,EAAQkE,EAC5D,CACI,SAASogB,GAA4CtkB,EAAQkE,GACzDqgB,GAAgDvkB,EAAOujB,4BACvDjK,GAA6CtZ,EAAO2jB,UAAUxP,0BAA2BjQ,GACzFsgB,GAA4BxkB,EACpC,CACI,SAASwkB,GAA4BxkB,GAC7BA,EAAOyU,eAIP2P,GAA+BpkB,GAAQ,EAEnD,CACI,SAASokB,GAA+BpkB,EAAQyW,QAEFhrB,IAAtCuU,EAAOkkB,4BACPlkB,EAAOmkB,qCAEXnkB,EAAOkkB,2BAA6B5nB,EAAWxO,IAC3CkS,EAAOmkB,mCAAqCr2B,IAEhDkS,EAAOyU,cAAgBgC,CAC/B,CA1EI5jB,OAAO6R,iBAAiB+d,GAAgBtmB,UAAW,CAC/CwkB,SAAU,CAAEhc,YAAY,GACxB4V,SAAU,CAAE5V,YAAY,KAEM,iBAAvBlF,OAAOmF,aACd/R,OAAOiJ,eAAe2mB,GAAgBtmB,UAAWsD,OAAOmF,YAAa,CACjErM,MAAO,kBACPwD,cAAc,IA0EtB,MAAM0oB,GACF,WAAA18B,GACI,MAAM,IAAIgW,UAAU,sBAChC,CAIQ,eAAImN,GACA,IAAKwZ,GAAmC18B,MACpC,MAAM28B,GAAqC,eAG/C,OAAOpI,GADoBv0B,KAAK48B,2BAA2BlB,UAAU7iB,0BAEjF,CACQ,OAAA0K,CAAQnI,OAAQ3X,GACZ,IAAKi5B,GAAmC18B,MACpC,MAAM28B,GAAqC,WAE/CE,GAAwC78B,KAAMob,EAC1D,CAKQ,KAAAla,CAAMwT,OAASjR,GACX,IAAKi5B,GAAmC18B,MACpC,MAAM28B,GAAqC,SAE/CG,GAAsC98B,KAAM0U,EACxD,CAKQ,SAAAqoB,GACI,IAAKL,GAAmC18B,MACpC,MAAM28B,GAAqC,aAE/CK,GAA0Ch9B,KACtD,EAkBI,SAAS08B,GAAmChpB,GACxC,QAAKD,EAAaC,MAGb7I,OAAOsJ,UAAUmI,eAAevH,KAAKrB,EAAG,+BAGtCA,aAAa+oB,EAC5B,CACI,SAASQ,GAAsCjlB,EAAQ2M,EAAYuY,EAAoBC,EAAgBlV,GACnGtD,EAAWiY,2BAA6B5kB,EACxCA,EAAOujB,2BAA6B5W,EACpCA,EAAWyY,oBAAsBF,EACjCvY,EAAW0Y,gBAAkBF,EAC7BxY,EAAWhB,iBAAmBsE,EAC9BtD,EAAW2Y,oBAAiB75B,EAC5BkhB,EAAW4Y,4BAAyB95B,EACpCkhB,EAAW6Y,2BAAwB/5B,CAC3C,CACI,SAAS63B,GAAqDtjB,EAAQ+iB,GAClE,MAAMpW,EAAa9Z,OAAOmT,OAAOye,GAAiCtoB,WAClE,IAAI+oB,EACAC,EACAlV,EAEAiV,OAD0Bz5B,IAA1Bs3B,EAAY7B,UACS9d,GAAS2f,EAAY7B,UAAU9d,EAAOuJ,GAGtCvJ,IACjB,IAEI,OADAyhB,GAAwClY,EAAYvJ,GAC7C5G,OAAoB/Q,EAC/C,CACgB,MAAOg6B,GACH,OAAOhpB,EAAoBgpB,EAC/C,GAIYN,OADsB15B,IAAtBs3B,EAAYb,MACK,IAAMa,EAAYb,MAAMvV,GAGxB,IAAMnQ,OAAoB/Q,GAG3CwkB,OADuBxkB,IAAvBs3B,EAAYlf,OACMnH,GAAUqmB,EAAYlf,OAAOnH,GAG7B,IAAMF,OAAoB/Q,GAEhDw5B,GAAsCjlB,EAAQ2M,EAAYuY,EAAoBC,EAAgBlV,EACtG,CACI,SAASsU,GAAgD5X,GACrDA,EAAWyY,yBAAsB35B,EACjCkhB,EAAW0Y,qBAAkB55B,EAC7BkhB,EAAWhB,sBAAmBlgB,CACtC,CACI,SAASo5B,GAAwClY,EAAYvJ,GACzD,MAAMpD,EAAS2M,EAAWiY,2BACpBc,EAAqB1lB,EAAO0jB,UAAU7iB,0BAC5C,IAAK2b,GAAiDkJ,GAClD,MAAM,IAAI3nB,UAAU,wDAIxB,IACI2e,GAAuCgJ,EAAoBtiB,EACvE,CACQ,MAAOc,GAGH,MADAogB,GAA4CtkB,EAAQkE,GAC9ClE,EAAO0jB,UAAUnjB,YACnC,CAC6Byc,GAA+C0I,KAC/C1lB,EAAOyU,eACxB2P,GAA+BpkB,GAAQ,EAEnD,CACI,SAAS8kB,GAAsCnY,EAAYzI,GACvDmgB,GAAqB1X,EAAWiY,2BAA4B1gB,EACpE,CACI,SAASyhB,GAAiDhZ,EAAYvJ,GAElE,OAAOjG,EADkBwP,EAAWyY,oBAAoBhiB,QACV3X,EAAW0kB,IAErD,MADAkU,GAAqB1X,EAAWiY,2BAA4BzU,GACtDA,GAElB,CACI,SAAS6U,GAA0CrY,GAC/C,MAAM3M,EAAS2M,EAAWiY,2BAE1BnI,GAD2Bzc,EAAO0jB,UAAU7iB,2BAG5CyjB,GAA4CtkB,EAD9B,IAAIjC,UAAU,8BAEpC,CAEI,SAAS8lB,GAAyC7jB,EAAQoD,GACtD,MAAMuJ,EAAa3M,EAAOujB,2BAC1B,OAAIvjB,EAAOyU,cAEAtX,EAD2B6C,EAAOkkB,2BACc,KACnD,MAAM3J,EAAWva,EAAO2jB,UAExB,GAAc,aADApJ,EAASpa,OAEnB,MAAMoa,EAASha,aAEnB,OAAOolB,GAAiDhZ,EAAYvJ,KAGrEuiB,GAAiDhZ,EAAYvJ,EAC5E,CACI,SAAS0gB,GAAyC9jB,EAAQtD,GACtD,MAAMiQ,EAAa3M,EAAOujB,2BAC1B,QAAkC93B,IAA9BkhB,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM3E,EAAW3gB,EAAO0jB,UAGxB/W,EAAW2Y,eAAiBhpB,EAAW,CAACxO,EAASC,KAC7C4e,EAAW4Y,uBAAyBz3B,EACpC6e,EAAW6Y,sBAAwBz3B,IAEvC,MAAMkwB,EAAgBtR,EAAWhB,iBAAiBjP,GAgBlD,OAfA6nB,GAAgD5X,GAChD3P,EAAYihB,EAAe,KACC,YAApB0C,EAASxgB,OACTylB,GAAqCjZ,EAAYgU,EAASpgB,eAG1Doc,GAAqCgE,EAAS9f,0BAA2BnE,GACzEmpB,GAAsClZ,IAEnC,MACRwD,IACCwM,GAAqCgE,EAAS9f,0BAA2BsP,GACzEyV,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CACI,SAASvB,GAAyC/jB,GAC9C,MAAM2M,EAAa3M,EAAOujB,2BAC1B,QAAkC93B,IAA9BkhB,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM3E,EAAW3gB,EAAO0jB,UAGxB/W,EAAW2Y,eAAiBhpB,EAAW,CAACxO,EAASC,KAC7C4e,EAAW4Y,uBAAyBz3B,EACpC6e,EAAW6Y,sBAAwBz3B,IAEvC,MAAM+3B,EAAenZ,EAAW0Y,kBAgBhC,OAfAd,GAAgD5X,GAChD3P,EAAY8oB,EAAc,KACE,YAApBnF,EAASxgB,OACTylB,GAAqCjZ,EAAYgU,EAASpgB,eAG1Dkc,GAAqCkE,EAAS9f,2BAC9CglB,GAAsClZ,IAEnC,MACRwD,IACCwM,GAAqCgE,EAAS9f,0BAA2BsP,GACzEyV,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CAEI,SAAStB,GAA0ChkB,GAI/C,OAFAokB,GAA+BpkB,GAAQ,GAEhCA,EAAOkkB,0BACtB,CACI,SAASD,GAA4CjkB,EAAQtD,GACzD,MAAMiQ,EAAa3M,EAAOujB,2BAC1B,QAAkC93B,IAA9BkhB,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM/K,EAAWva,EAAO2jB,UAIxBhX,EAAW2Y,eAAiBhpB,EAAW,CAACxO,EAASC,KAC7C4e,EAAW4Y,uBAAyBz3B,EACpC6e,EAAW6Y,sBAAwBz3B,IAEvC,MAAMkwB,EAAgBtR,EAAWhB,iBAAiBjP,GAkBlD,OAjBA6nB,GAAgD5X,GAChD3P,EAAYihB,EAAe,KACC,YAApB1D,EAASpa,OACTylB,GAAqCjZ,EAAY4N,EAASha,eAG1D+Y,GAA6CiB,EAASpG,0BAA2BzX,GACjF8nB,GAA4BxkB,GAC5B6lB,GAAsClZ,IAEnC,MACRwD,IACCmJ,GAA6CiB,EAASpG,0BAA2BhE,GACjFqU,GAA4BxkB,GAC5B4lB,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CAEI,SAASX,GAAqCp4B,GAC1C,OAAO,IAAIwR,UAAU,8CAA8CxR,2DAC3E,CACI,SAASs5B,GAAsClZ,QACDlhB,IAAtCkhB,EAAW4Y,yBAGf5Y,EAAW4Y,yBACX5Y,EAAW4Y,4BAAyB95B,EACpCkhB,EAAW6Y,2BAAwB/5B,EAC3C,CACI,SAASm6B,GAAqCjZ,EAAYjQ,QACbjR,IAArCkhB,EAAW6Y,wBAGfloB,EAA0BqP,EAAW2Y,gBACrC3Y,EAAW6Y,sBAAsB9oB,GACjCiQ,EAAW4Y,4BAAyB95B,EACpCkhB,EAAW6Y,2BAAwB/5B,EAC3C,CAEI,SAASg4B,GAA0Bl3B,GAC/B,OAAO,IAAIwR,UAAU,6BAA6BxR,0CAC1D,CA9PIsG,OAAO6R,iBAAiB+f,GAAiCtoB,UAAW,CAChEoP,QAAS,CAAE5G,YAAY,GACvBzb,MAAO,CAAEyb,YAAY,GACrBogB,UAAW,CAAEpgB,YAAY,GACzBuG,YAAa,CAAEvG,YAAY,KAE/B/I,EAAgB6oB,GAAiCtoB,UAAUoP,QAAS,WACpE3P,EAAgB6oB,GAAiCtoB,UAAUjT,MAAO,SAClE0S,EAAgB6oB,GAAiCtoB,UAAU4oB,UAAW,aACpC,iBAAvBtlB,OAAOmF,aACd/R,OAAOiJ,eAAe2oB,GAAiCtoB,UAAWsD,OAAOmF,YAAa,CAClFrM,MAAO,mCACPwD,cAAc,IAoPtBR,EAAQimB,0BAA4BA,GACpCjmB,EAAQsmB,qBAAuBA,GAC/BtmB,EAAQsP,6BAA+BA,GACvCtP,EAAQqlB,eAAiBA,GACzBrlB,EAAQsV,yBAA2BA,GACnCtV,EAAQ2O,0BAA4BA,GACpC3O,EAAQ6gB,gCAAkCA,GAC1C7gB,EAAQwH,4BAA8BA,GACtCxH,EAAQknB,gBAAkBA,GAC1BlnB,EAAQkpB,iCAAmCA,GAC3ClpB,EAAQqX,eAAiBA,GACzBrX,EAAQ0Y,gCAAkCA,GAC1C1Y,EAAQoY,4BAA8BA,EAEzC,CAvnJkEoS;qHCPnEC,EAAAliB,KAAe,SAAUmD,EAAQgf,EAAQC,EAAMC,EAAMC,GACnD,IAAIliB,EAAGmiB,EACHC,EAAiB,EAATF,EAAcD,EAAO,EAC7BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAQ,EACRxwB,EAAIiwB,EAAQE,EAAS,EAAK,EAC1BM,EAAIR,KAAY,EAChBS,EAAI1f,EAAOgf,EAAShwB,GAOxB,IALAA,GAAKywB,EAELxiB,EAAIyiB,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGviB,EAAS,IAAJA,EAAW+C,EAAOgf,EAAShwB,GAAIA,GAAKywB,EAAGD,GAAS,GAKvE,IAHAJ,EAAIniB,GAAM,IAAOuiB,GAAU,EAC3BviB,KAAQuiB,EACRA,GAASN,EACFM,EAAQ,EAAGJ,EAAS,IAAJA,EAAWpf,EAAOgf,EAAShwB,GAAIA,GAAKywB,EAAGD,GAAS,GAEvE,GAAU,IAANviB,EACFA,EAAI,EAAIsiB,MACH,IAAItiB,IAAMqiB,EACf,OAAOF,EAAIO,IAAsBrd,KAAdod,GAAI,EAAK,GAE5BN,GAAQn2B,KAAK22B,IAAI,EAAGV,GACpBjiB,GAAQsiB,CACZ,CACE,OAAQG,GAAI,EAAK,GAAKN,EAAIn2B,KAAK22B,IAAI,EAAG3iB,EAAIiiB,EAC5C,EAEAH,EAAAhU,MAAgB,SAAU/K,EAAQ1O,EAAO0tB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIliB,EAAGmiB,EAAGxwB,EACNywB,EAAiB,EAATF,EAAcD,EAAO,EAC7BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBO,EAAe,KAATX,EAAcj2B,KAAK22B,IAAI,GAAG,IAAO32B,KAAK22B,IAAI,GAAG,IAAO,EAC1D5wB,EAAIiwB,EAAO,EAAKE,EAAS,EACzBM,EAAIR,EAAO,GAAI,EACfS,EAAIpuB,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQrI,KAAKiG,IAAIoC,GAEb4N,MAAM5N,IAAUA,IAAUgR,KAC5B8c,EAAIlgB,MAAM5N,GAAS,EAAI,EACvB2L,EAAIqiB,IAEJriB,EAAIhU,KAAK6I,MAAM7I,KAAKwD,IAAI6E,GAASrI,KAAK62B,KAClCxuB,GAAS1C,EAAI3F,KAAK22B,IAAI,GAAI3iB,IAAM,IAClCA,IACArO,GAAK,IAGL0C,GADE2L,EAAIsiB,GAAS,EACNM,EAAKjxB,EAELixB,EAAK52B,KAAK22B,IAAI,EAAG,EAAIL,IAEpB3wB,GAAK,IACfqO,IACArO,GAAK,GAGHqO,EAAIsiB,GAASD,GACfF,EAAI,EACJniB,EAAIqiB,GACKriB,EAAIsiB,GAAS,GACtBH,GAAM9tB,EAAQ1C,EAAK,GAAK3F,KAAK22B,IAAI,EAAGV,GACpCjiB,GAAQsiB,IAERH,EAAI9tB,EAAQrI,KAAK22B,IAAI,EAAGL,EAAQ,GAAKt2B,KAAK22B,IAAI,EAAGV,GACjDjiB,EAAI,IAIDiiB,GAAQ,EAAGlf,EAAOgf,EAAShwB,GAAS,IAAJowB,EAAUpwB,GAAKywB,EAAGL,GAAK,IAAKF,GAAQ,GAI3E,IAFAjiB,EAAKA,GAAKiiB,EAAQE,EAClBC,GAAQH,EACDG,EAAO,EAAGrf,EAAOgf,EAAShwB,GAAS,IAAJiO,EAAUjO,GAAKywB,EAAGxiB,GAAK,IAAKoiB,GAAQ,GAE1Erf,EAAOgf,EAAShwB,EAAIywB,IAAU,IAAJC,CAC5B;;;;;;2CC1EA,IAAIK,+BCRJC,EAAA5f,WAuCA,SAAqB6f,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAL,EAAAM,YAiDA,SAAsBL,GACpB,IAAIM,EAcAvxB,EAbAkxB,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBM,EAAM,IAAIC,EAVhB,SAAsBR,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBK,CAAYT,EAAKG,EAAUC,IAEzCM,EAAU,EAGVC,EAAMP,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKpxB,EAAI,EAAGA,EAAI4xB,EAAK5xB,GAAK,EACxBuxB,EACGM,EAAUZ,EAAIhxB,WAAWD,KAAO,GAChC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,KAAO,GACpC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,KAAO,EACrC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,IAC/BwxB,EAAIG,KAAcJ,GAAO,GAAM,IAC/BC,EAAIG,KAAcJ,GAAO,EAAK,IAC9BC,EAAIG,KAAmB,IAANJ,EAmBnB,OAhBwB,IAApBF,IACFE,EACGM,EAAUZ,EAAIhxB,WAAWD,KAAO,EAChC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,KAAO,EACvCwxB,EAAIG,KAAmB,IAANJ,GAGK,IAApBF,IACFE,EACGM,EAAUZ,EAAIhxB,WAAWD,KAAO,GAChC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,KAAO,EACpC6xB,EAAUZ,EAAIhxB,WAAWD,EAAI,KAAO,EACvCwxB,EAAIG,KAAcJ,GAAO,EAAK,IAC9BC,EAAIG,KAAmB,IAANJ,GAGZC,CACT,EA5FAR,EAAAc,cAkHA,SAAwBC,GAQtB,IAPA,IAAIR,EACAK,EAAMG,EAAMx0B,OACZy0B,EAAaJ,EAAM,EACnBK,EAAQ,GACRC,EAAiB,MAGZlyB,EAAI,EAAGmyB,EAAOP,EAAMI,EAAYhyB,EAAImyB,EAAMnyB,GAAKkyB,EACtDD,EAAM90B,KAAKi1B,EAAYL,EAAO/xB,EAAIA,EAAIkyB,EAAkBC,EAAOA,EAAQnyB,EAAIkyB,IAqB7E,OAjBmB,IAAfF,GACFT,EAAMQ,EAAMH,EAAM,GAClBK,EAAM90B,KACJk1B,EAAOd,GAAO,GACdc,EAAQd,GAAO,EAAK,IACpB,OAEsB,IAAfS,IACTT,GAAOQ,EAAMH,EAAM,IAAM,GAAKG,EAAMH,EAAM,GAC1CK,EAAM90B,KACJk1B,EAAOd,GAAO,IACdc,EAAQd,GAAO,EAAK,IACpBc,EAAQd,GAAO,EAAK,IACpB,MAIGU,EAAMl3B,KAAK,GACpB,EA1IA,IALA,IAAIs3B,EAAS,GACTR,EAAY,GACZJ,EAA4B,oBAAf92B,WAA6BA,WAAa9F,MAEvD2B,EAAO,mEACFwJ,EAAI,EAAsBA,EAAbxJ,KAAwBwJ,EAC5CqyB,EAAOryB,GAAKxJ,EAAKwJ,GACjB6xB,EAAUr7B,EAAKyJ,WAAWD,IAAMA,EAQlC,SAASmxB,EAASF,GAChB,IAAIW,EAAMX,EAAI1zB,OAEd,GAAIq0B,EAAM,EAAI,EACZ,MAAM,IAAIz8B,MAAM,kDAKlB,IAAIi8B,EAAWH,EAAIqB,QAAQ,KAO3B,OANiB,IAAblB,IAAiBA,EAAWQ,GAMzB,CAACR,EAJcA,IAAaQ,EAC/B,EACA,EAAKR,EAAW,EAGtB,CA4DA,SAASmB,EAAiBC,GACxB,OAAOH,EAAOG,GAAO,GAAK,IACxBH,EAAOG,GAAO,GAAK,IACnBH,EAAOG,GAAO,EAAI,IAClBH,EAAa,GAANG,EACX,CAEA,SAASJ,EAAaL,EAAO1X,EAAO9I,GAGlC,IAFA,IAAIggB,EACAkB,EAAS,GACJzyB,EAAIqa,EAAOra,EAAIuR,EAAKvR,GAAK,EAChCuxB,GACIQ,EAAM/xB,IAAM,GAAM,WAClB+xB,EAAM/xB,EAAI,IAAM,EAAK,QACP,IAAf+xB,EAAM/xB,EAAI,IACbyyB,EAAOt1B,KAAKo1B,EAAgBhB,IAE9B,OAAOkB,EAAO13B,KAAK,GACrB,QAlGA82B,EAAU,IAAI5xB,WAAW,IAAM,GAC/B4xB,EAAU,IAAI5xB,WAAW,IAAM,KDTlByyB,GACT3C,EAAU4C,IACVC,EACiB,mBAAXppB,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENlE,EAAAutB,OAAiBA,EACjBvtB,EAAAwtB,WA2TA,SAAqBv1B,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOs1B,EAAOE,OAAOx1B,EACvB,EA/TA+H,EAAA0tB,kBAA4B,GAE5B,IAAIC,EAAe,WAwDnB,SAASC,EAAc31B,GACrB,GAAIA,EAAS01B,EACX,MAAM,IAAI1f,WAAW,cAAgBhW,EAAS,kCAGhD,IAAI41B,EAAM,IAAIx4B,WAAW4C,GAEzB,OADAX,OAAOoT,eAAemjB,EAAKN,EAAO3sB,WAC3BitB,CACT,CAYA,SAASN,EAAQO,EAAKC,EAAkB91B,GAEtC,GAAmB,iBAAR61B,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIvrB,UACR,sEAGJ,OAAOwrB,EAAYF,EACvB,CACE,OAAOt+B,EAAKs+B,EAAKC,EAAkB91B,EACrC,CAIA,SAASzI,EAAMwN,EAAO+wB,EAAkB91B,GACtC,GAAqB,iBAAV+E,EACT,OAuHJ,SAAqBixB,EAAQC,GACH,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKX,EAAOY,WAAWD,GACrB,MAAM,IAAI1rB,UAAU,qBAAuB0rB,GAG7C,IAAIj2B,EAAwC,EAA/B6T,EAAWmiB,EAAQC,GAC5BL,EAAMD,EAAa31B,GAEnBm2B,EAASP,EAAIpX,MAAMwX,EAAQC,GAE3BE,IAAWn2B,IAIb41B,EAAMA,EAAI7iB,MAAM,EAAGojB,IAGrB,OAAOP,CACT,CA7IWQ,CAAWrxB,EAAO+wB,GAG3B,GAAI7hB,YAAYkD,OAAOpS,GACrB,OAoJJ,SAAwBsxB,GACtB,GAAIC,EAAWD,EAAWj5B,YAAa,CACrC,IAAIm5B,EAAO,IAAIn5B,WAAWi5B,GAC1B,OAAOG,EAAgBD,EAAK9iB,OAAQ8iB,EAAK/gB,WAAY+gB,EAAK1iB,WAC9D,CACE,OAAO4iB,EAAcJ,EACvB,CA1JWK,CAAc3xB,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIwF,UACR,yHACiDxF,GAIrD,GAAIuxB,EAAWvxB,EAAOkP,cACjBlP,GAASuxB,EAAWvxB,EAAM0O,OAAQQ,aACrC,OAAOuiB,EAAgBzxB,EAAO+wB,EAAkB91B,GAGlD,GAAiC,oBAAtB22B,oBACNL,EAAWvxB,EAAO4xB,oBAClB5xB,GAASuxB,EAAWvxB,EAAM0O,OAAQkjB,oBACrC,OAAOH,EAAgBzxB,EAAO+wB,EAAkB91B,GAGlD,GAAqB,iBAAV+E,EACT,MAAM,IAAIwF,UACR,yEAIJ,IAAIqsB,EAAU7xB,EAAM6xB,SAAW7xB,EAAM6xB,UACrC,GAAe,MAAXA,GAAmBA,IAAY7xB,EACjC,OAAOuwB,EAAO/9B,KAAKq/B,EAASd,EAAkB91B,GAGhD,IAAI1C,EAoJN,SAAqB8Q,GACnB,GAAIknB,EAAOuB,SAASzoB,GAAM,CACxB,IAAIimB,EAA4B,EAAtByC,EAAQ1oB,EAAIpO,QAClB41B,EAAMD,EAAatB,GAEvB,OAAmB,IAAfuB,EAAI51B,QAIRoO,EAAImoB,KAAKX,EAAK,EAAG,EAAGvB,GAHXuB,CAKb,CAEE,QAAmB39B,IAAfmW,EAAIpO,OACN,MAA0B,iBAAfoO,EAAIpO,QAAuB+2B,EAAY3oB,EAAIpO,QAC7C21B,EAAa,GAEfc,EAAcroB,GAGvB,GAAiB,WAAbA,EAAItT,MAAqBxD,MAAM0/B,QAAQ5oB,EAAI5Y,MAC7C,OAAOihC,EAAcroB,EAAI5Y,KAE7B,CA3KUyhC,CAAWlyB,GACnB,GAAIzH,EAAG,OAAOA,EAEd,GAAsB,oBAAX2O,QAAgD,MAAtBA,OAAOirB,aACH,mBAA9BnyB,EAAMkH,OAAOirB,aACtB,OAAO5B,EAAO/9B,KACZwN,EAAMkH,OAAOirB,aAAa,UAAWpB,EAAkB91B,GAI3D,MAAM,IAAIuK,UACR,yHACiDxF,EAErD,CAmBA,SAASoyB,EAAY7hC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIiV,UAAU,0CACf,GAAIjV,EAAO,EAChB,MAAM,IAAI0gB,WAAW,cAAgB1gB,EAAO,iCAEhD,CA0BA,SAASygC,EAAazgC,GAEpB,OADA6hC,EAAW7hC,GACJqgC,EAAargC,EAAO,EAAI,EAAoB,EAAhBwhC,EAAQxhC,GAC7C,CAuCA,SAASmhC,EAAexxB,GAGtB,IAFA,IAAIjF,EAASiF,EAAMjF,OAAS,EAAI,EAA4B,EAAxB82B,EAAQ7xB,EAAMjF,QAC9C41B,EAAMD,EAAa31B,GACdyC,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAC/BmzB,EAAInzB,GAAgB,IAAXwC,EAAMxC,GAEjB,OAAOmzB,CACT,CAUA,SAASY,EAAiBvxB,EAAOuQ,EAAYxV,GAC3C,GAAIwV,EAAa,GAAKvQ,EAAM4O,WAAa2B,EACvC,MAAM,IAAIQ,WAAW,wCAGvB,GAAI/Q,EAAM4O,WAAa2B,GAAcxV,GAAU,GAC7C,MAAM,IAAIgW,WAAW,wCAGvB,IAAI4f,EAYJ,OAVEA,OADiB39B,IAAfud,QAAuCvd,IAAX+H,EACxB,IAAI5C,WAAW6H,QACDhN,IAAX+H,EACH,IAAI5C,WAAW6H,EAAOuQ,GAEtB,IAAIpY,WAAW6H,EAAOuQ,EAAYxV,GAI1CX,OAAOoT,eAAemjB,EAAKN,EAAO3sB,WAE3BitB,CACT,CA2BA,SAASkB,EAAS92B,GAGhB,GAAIA,GAAU01B,EACZ,MAAM,IAAI1f,WAAW,0DACa0f,EAAaj5B,SAAS,IAAM,UAEhE,OAAgB,EAATuD,CACT,CAqGA,SAAS6T,EAAYmiB,EAAQC,GAC3B,GAAIX,EAAOuB,SAASb,GAClB,OAAOA,EAAOh2B,OAEhB,GAAIiU,YAAYkD,OAAO6e,IAAWM,EAAWN,EAAQ/hB,aACnD,OAAO+hB,EAAOniB,WAEhB,GAAsB,iBAAXmiB,EACT,MAAM,IAAIzrB,UACR,kGAC0ByrB,GAI9B,IAAI3B,EAAM2B,EAAOh2B,OACbo3B,EAAaC,UAAUr3B,OAAS,IAAsB,IAAjBq3B,UAAU,GACnD,IAAKD,GAAqB,IAAR/C,EAAW,OAAO,EAIpC,IADA,IAAIiD,GAAc,IAEhB,OAAQrB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO5B,EACT,IAAK,OACL,IAAK,QACH,OAAOkD,EAAYvB,GAAQh2B,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANq0B,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOmD,EAAcxB,GAAQh2B,OAC/B,QACE,GAAIs3B,EACF,OAAOF,GAAY,EAAKG,EAAYvB,GAAQh2B,OAE9Ci2B,GAAY,GAAKA,GAAUwB,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAczB,EAAUnZ,EAAO9I,GACtC,IAAIsjB,GAAc,EAclB,SALcr/B,IAAV6kB,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQtoB,KAAKwL,OACf,MAAO,GAOT,SAJY/H,IAAR+b,GAAqBA,EAAMxf,KAAKwL,UAClCgU,EAAMxf,KAAKwL,QAGTgU,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACT8I,KAAW,GAGT,MAAO,GAKT,IAFKmZ,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAO0B,EAASnjC,KAAMsoB,EAAO9I,GAE/B,IAAK,OACL,IAAK,QACH,OAAO4jB,EAAUpjC,KAAMsoB,EAAO9I,GAEhC,IAAK,QACH,OAAO6jB,EAAWrjC,KAAMsoB,EAAO9I,GAEjC,IAAK,SACL,IAAK,SACH,OAAO8jB,EAAYtjC,KAAMsoB,EAAO9I,GAElC,IAAK,SACH,OAAO+jB,EAAYvjC,KAAMsoB,EAAO9I,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOgkB,EAAaxjC,KAAMsoB,EAAO9I,GAEnC,QACE,GAAIsjB,EAAa,MAAM,IAAI/sB,UAAU,qBAAuB0rB,GAC5DA,GAAYA,EAAW,IAAIwB,cAC3BH,GAAc,EAGtB,CAUA,SAASW,EAAM36B,EAAG+V,EAAGwf,GACnB,IAAIpwB,EAAInF,EAAE+V,GACV/V,EAAE+V,GAAK/V,EAAEu1B,GACTv1B,EAAEu1B,GAAKpwB,CACT,CA2IA,SAASy1B,EAAsBzkB,EAAQ0kB,EAAK3iB,EAAYygB,EAAUmC,GAEhE,GAAsB,IAAlB3kB,EAAOzT,OAAc,OAAO,EAmBhC,GAhB0B,iBAAfwV,GACTygB,EAAWzgB,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,gBACTA,GAAa,YAGXuhB,EADJvhB,GAAcA,KAGZA,EAAa4iB,EAAM,EAAK3kB,EAAOzT,OAAS,GAItCwV,EAAa,IAAGA,EAAa/B,EAAOzT,OAASwV,GAC7CA,GAAc/B,EAAOzT,OAAQ,CAC/B,GAAIo4B,EAAK,OAAO,EACX5iB,EAAa/B,EAAOzT,OAAS,CACtC,MAAS,GAAIwV,EAAa,EAAG,CACzB,IAAI4iB,EACC,OAAO,EADH5iB,EAAa,CAE1B,CAQE,GALmB,iBAAR2iB,IACTA,EAAM7C,EAAO/9B,KAAK4gC,EAAKlC,IAIrBX,EAAOuB,SAASsB,GAElB,OAAmB,IAAfA,EAAIn4B,QACC,EAEFq4B,EAAa5kB,EAAQ0kB,EAAK3iB,EAAYygB,EAAUmC,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjC/6B,WAAWuL,UAAUosB,QAC1BqD,EACKh7B,WAAWuL,UAAUosB,QAAQxrB,KAAKkK,EAAQ0kB,EAAK3iB,GAE/CpY,WAAWuL,UAAU2vB,YAAY/uB,KAAKkK,EAAQ0kB,EAAK3iB,GAGvD6iB,EAAa5kB,EAAQ,CAAC0kB,GAAM3iB,EAAYygB,EAAUmC,GAG3D,MAAM,IAAI7tB,UAAU,uCACtB,CAEA,SAAS8tB,EAAcpE,EAAKkE,EAAK3iB,EAAYygB,EAAUmC,GACrD,IA0BI31B,EA1BA81B,EAAY,EACZC,EAAYvE,EAAIj0B,OAChBy4B,EAAYN,EAAIn4B,OAEpB,QAAiB/H,IAAbg+B,IAEe,UADjBA,EAAW3hB,OAAO2hB,GAAUwB,gBACY,UAAbxB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIhC,EAAIj0B,OAAS,GAAKm4B,EAAIn4B,OAAS,EACjC,OAAO,EAETu4B,EAAY,EACZC,GAAa,EACbC,GAAa,EACbjjB,GAAc,CACpB,CAGE,SAASlF,EAAMslB,EAAKnzB,GAClB,OAAkB,IAAd81B,EACK3C,EAAInzB,GAEJmzB,EAAI8C,aAAaj2B,EAAI81B,EAElC,CAGE,GAAIH,EAAK,CACP,IAAIO,GAAa,EACjB,IAAKl2B,EAAI+S,EAAY/S,EAAI+1B,EAAW/1B,IAClC,GAAI6N,EAAK2jB,EAAKxxB,KAAO6N,EAAK6nB,OAAKQ,EAAoB,EAAIl2B,EAAIk2B,IAEzD,IADmB,IAAfA,IAAmBA,EAAal2B,GAChCA,EAAIk2B,EAAa,IAAMF,EAAW,OAAOE,EAAaJ,OAEvC,IAAfI,IAAmBl2B,GAAKA,EAAIk2B,GAChCA,GAAa,CAGrB,MAEI,IADInjB,EAAaijB,EAAYD,IAAWhjB,EAAagjB,EAAYC,GAC5Dh2B,EAAI+S,EAAY/S,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIm2B,GAAQ,EACHC,EAAI,EAAGA,EAAIJ,EAAWI,IAC7B,GAAIvoB,EAAK2jB,EAAKxxB,EAAIo2B,KAAOvoB,EAAK6nB,EAAKU,GAAI,CACrCD,GAAQ,EACR,KACV,CAEM,GAAIA,EAAO,OAAOn2B,CACxB,CAGE,OAAO,CACT,CAcA,SAASq2B,EAAUlD,EAAKI,EAAQvD,EAAQzyB,GACtCyyB,EAAS7kB,OAAO6kB,IAAW,EAC3B,IAAIsG,EAAYnD,EAAI51B,OAASyyB,EACxBzyB,GAGHA,EAAS4N,OAAO5N,IACH+4B,IACX/4B,EAAS+4B,GAJX/4B,EAAS+4B,EAQX,IAAIC,EAAShD,EAAOh2B,OAEhBA,EAASg5B,EAAS,IACpBh5B,EAASg5B,EAAS,GAEpB,IAAK,IAAIv2B,EAAI,EAAGA,EAAIzC,IAAUyC,EAAG,CAC/B,IAAIw2B,EAAS93B,SAAS60B,EAAOkD,OAAW,EAAJz2B,EAAO,GAAI,IAC/C,GAAIs0B,EAAYkC,GAAS,OAAOx2B,EAChCmzB,EAAInD,EAAShwB,GAAKw2B,CACtB,CACE,OAAOx2B,CACT,CAEA,SAAS02B,EAAWvD,EAAKI,EAAQvD,EAAQzyB,GACvC,OAAOo5B,EAAW7B,EAAYvB,EAAQJ,EAAI51B,OAASyyB,GAASmD,EAAKnD,EAAQzyB,EAC3E,CAEA,SAASq5B,EAAYzD,EAAKI,EAAQvD,EAAQzyB,GACxC,OAAOo5B,EAk4BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACP92B,EAAI,EAAGA,EAAI62B,EAAIt5B,SAAUyC,EAEhC82B,EAAU35B,KAAyB,IAApB05B,EAAI52B,WAAWD,IAEhC,OAAO82B,CACT,CAz4BoBC,CAAaxD,GAASJ,EAAKnD,EAAQzyB,EACvD,CAEA,SAASy5B,EAAa7D,EAAKI,EAAQvD,EAAQzyB,GACzC,OAAOo5B,EAAW5B,EAAcxB,GAASJ,EAAKnD,EAAQzyB,EACxD,CAEA,SAAS05B,EAAW9D,EAAKI,EAAQvD,EAAQzyB,GACvC,OAAOo5B,EAm4BT,SAAyBE,EAAKK,GAG5B,IAFA,IAAIt3B,EAAGu3B,EAAIC,EACPN,EAAY,GACP92B,EAAI,EAAGA,EAAI62B,EAAIt5B,WACjB25B,GAAS,GAAK,KADal3B,EAIhCm3B,GADAv3B,EAAIi3B,EAAI52B,WAAWD,KACT,EACVo3B,EAAKx3B,EAAI,IACTk3B,EAAU35B,KAAKi6B,GACfN,EAAU35B,KAAKg6B,GAGjB,OAAOL,CACT,CAj5BoBO,CAAe9D,EAAQJ,EAAI51B,OAASyyB,GAASmD,EAAKnD,EAAQzyB,EAC9E,CA8EA,SAAS+3B,EAAanC,EAAK9Y,EAAO9I,GAChC,OAAc,IAAV8I,GAAe9I,IAAQ4hB,EAAI51B,OACtBwzB,EAAOe,cAAcqB,GAErBpC,EAAOe,cAAcqB,EAAI7iB,MAAM+J,EAAO9I,GAEjD,CAEA,SAAS4jB,EAAWhC,EAAK9Y,EAAO9I,GAC9BA,EAAMtX,KAAK4d,IAAIsb,EAAI51B,OAAQgU,GAI3B,IAHA,IAAI+lB,EAAM,GAENt3B,EAAIqa,EACDra,EAAIuR,GAAK,CACd,IAWMgmB,EAAYC,EAAWC,EAAYC,EAXrCC,EAAYxE,EAAInzB,GAChB43B,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI33B,EAAI63B,GAAoBtmB,EAG1B,OAAQsmB,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAapE,EAAInzB,EAAI,OAEnB03B,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAapE,EAAInzB,EAAI,GACrBw3B,EAAYrE,EAAInzB,EAAI,GACQ,MAAV,IAAbu3B,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAapE,EAAInzB,EAAI,GACrBw3B,EAAYrE,EAAInzB,EAAI,GACpBy3B,EAAatE,EAAInzB,EAAI,GACO,MAAV,IAAbu3B,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIn6B,KAAKy6B,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIn6B,KAAKy6B,GACT53B,GAAK63B,CACT,CAEE,OAQF,SAAgCC,GAC9B,IAAIlG,EAAMkG,EAAWv6B,OACrB,GAAIq0B,GAAOmG,EACT,OAAOlmB,OAAOmmB,aAAahwB,MAAM6J,OAAQimB,GAI3C,IAAIR,EAAM,GACNt3B,EAAI,EACR,KAAOA,EAAI4xB,GACT0F,GAAOzlB,OAAOmmB,aAAahwB,MACzB6J,OACAimB,EAAWxnB,MAAMtQ,EAAGA,GAAK+3B,IAG7B,OAAOT,CACT,CAxBSW,CAAsBX,EAC/B,CA3+BAhyB,EAAA4yB,WAAqBjF,EAgBrBJ,EAAOsF,oBAUP,WAEE,IACE,IAAI3G,EAAM,IAAI72B,WAAW,GACrBy9B,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAE,GAG1C,OAFAz7B,OAAOoT,eAAeooB,EAAOz9B,WAAWuL,WACxCtJ,OAAOoT,eAAewhB,EAAK4G,GACN,KAAd5G,EAAI6G,MACX,MAAOpqB,GACP,OAAO,CACX,CACA,CArB6BqqB,GAExBzF,EAAOsF,qBAA0C,oBAAZjlC,SACb,mBAAlBA,QAAQD,OACjBC,QAAQD,MACN,iJAkBJ2J,OAAOiJ,eAAegtB,EAAO3sB,UAAW,SAAU,CAChDwI,YAAY,EACZlc,IAAK,WACH,GAAKqgC,EAAOuB,SAASriC,MACrB,OAAOA,KAAKif,MAChB,IAGApU,OAAOiJ,eAAegtB,EAAO3sB,UAAW,SAAU,CAChDwI,YAAY,EACZlc,IAAK,WACH,GAAKqgC,EAAOuB,SAASriC,MACrB,OAAOA,KAAKghB,UAChB,IAoCA8f,EAAO0F,SAAW,KAgElB1F,EAAO/9B,KAAO,SAAUwN,EAAO+wB,EAAkB91B,GAC/C,OAAOzI,EAAKwN,EAAO+wB,EAAkB91B,EACvC,EAIAX,OAAOoT,eAAe6iB,EAAO3sB,UAAWvL,WAAWuL,WACnDtJ,OAAOoT,eAAe6iB,EAAQl4B,YA8B9Bk4B,EAAOE,MAAQ,SAAUlgC,EAAM2lC,EAAMhF,GACnC,OArBF,SAAgB3gC,EAAM2lC,EAAMhF,GAE1B,OADAkB,EAAW7hC,GACPA,GAAQ,EACHqgC,EAAargC,QAET2C,IAATgjC,EAIyB,iBAAbhF,EACVN,EAAargC,GAAM2lC,KAAKA,EAAMhF,GAC9BN,EAAargC,GAAM2lC,KAAKA,GAEvBtF,EAAargC,EACtB,CAOSkgC,CAAMlgC,EAAM2lC,EAAMhF,EAC3B,EAUAX,EAAOS,YAAc,SAAUzgC,GAC7B,OAAOygC,EAAYzgC,EACrB,EAIAggC,EAAO4F,gBAAkB,SAAU5lC,GACjC,OAAOygC,EAAYzgC,EACrB,EA6GAggC,EAAOuB,SAAW,SAAmBv5B,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAE69B,WACpB79B,IAAMg4B,EAAO3sB,SACjB,EAEA2sB,EAAO8F,QAAU,SAAkBC,EAAG/9B,GAGpC,GAFIg5B,EAAW+E,EAAGj+B,cAAai+B,EAAI/F,EAAO/9B,KAAK8jC,EAAGA,EAAE5I,OAAQ4I,EAAExnB,aAC1DyiB,EAAWh5B,EAAGF,cAAaE,EAAIg4B,EAAO/9B,KAAK+F,EAAGA,EAAEm1B,OAAQn1B,EAAEuW,cACzDyhB,EAAOuB,SAASwE,KAAO/F,EAAOuB,SAASv5B,GAC1C,MAAM,IAAIiN,UACR,yEAIJ,GAAI8wB,IAAM/9B,EAAG,OAAO,EAKpB,IAHA,IAAI4K,EAAImzB,EAAEr7B,OACNs7B,EAAIh+B,EAAE0C,OAEDyC,EAAI,EAAG4xB,EAAM33B,KAAK4d,IAAIpS,EAAGozB,GAAI74B,EAAI4xB,IAAO5xB,EAC/C,GAAI44B,EAAE54B,KAAOnF,EAAEmF,GAAI,CACjByF,EAAImzB,EAAE54B,GACN64B,EAAIh+B,EAAEmF,GACN,KACN,CAGE,OAAIyF,EAAIozB,GAAU,EACdA,EAAIpzB,EAAU,EACX,CACT,EAEAotB,EAAOY,WAAa,SAAqBD,GACvC,OAAQ3hB,OAAO2hB,GAAUwB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAnC,EAAOiG,OAAS,SAAiBC,EAAMx7B,GACrC,IAAK1I,MAAM0/B,QAAQwE,GACjB,MAAM,IAAIjxB,UAAU,+CAGtB,GAAoB,IAAhBixB,EAAKx7B,OACP,OAAOs1B,EAAOE,MAAM,GAGtB,IAAI/yB,EACJ,QAAexK,IAAX+H,EAEF,IADAA,EAAS,EACJyC,EAAI,EAAGA,EAAI+4B,EAAKx7B,SAAUyC,EAC7BzC,GAAUw7B,EAAK/4B,GAAGzC,OAItB,IAAIyT,EAAS6hB,EAAOS,YAAY/1B,GAC5By7B,EAAM,EACV,IAAKh5B,EAAI,EAAGA,EAAI+4B,EAAKx7B,SAAUyC,EAAG,CAChC,IAAImzB,EAAM4F,EAAK/4B,GACf,GAAI6zB,EAAWV,EAAKx4B,YACdq+B,EAAM7F,EAAI51B,OAASyT,EAAOzT,OAC5Bs1B,EAAO/9B,KAAKq+B,GAAKW,KAAK9iB,EAAQgoB,GAE9Br+B,WAAWuL,UAAU5T,IAAIwU,KACvBkK,EACAmiB,EACA6F,OAGC,KAAKnG,EAAOuB,SAASjB,GAC1B,MAAM,IAAIrrB,UAAU,+CAEpBqrB,EAAIW,KAAK9iB,EAAQgoB,EACvB,CACIA,GAAO7F,EAAI51B,MACf,CACE,OAAOyT,CACT,EAiDA6hB,EAAOzhB,WAAaA,EA8EpByhB,EAAO3sB,UAAUwyB,WAAY,EAQ7B7F,EAAO3sB,UAAU+yB,OAAS,WACxB,IAAIrH,EAAM7/B,KAAKwL,OACf,GAAIq0B,EAAM,GAAM,EACd,MAAM,IAAIre,WAAW,6CAEvB,IAAK,IAAIvT,EAAI,EAAGA,EAAI4xB,EAAK5xB,GAAK,EAC5Bw1B,EAAKzjC,KAAMiO,EAAGA,EAAI,GAEpB,OAAOjO,IACT,EAEA8gC,EAAO3sB,UAAUgzB,OAAS,WACxB,IAAItH,EAAM7/B,KAAKwL,OACf,GAAIq0B,EAAM,GAAM,EACd,MAAM,IAAIre,WAAW,6CAEvB,IAAK,IAAIvT,EAAI,EAAGA,EAAI4xB,EAAK5xB,GAAK,EAC5Bw1B,EAAKzjC,KAAMiO,EAAGA,EAAI,GAClBw1B,EAAKzjC,KAAMiO,EAAI,EAAGA,EAAI,GAExB,OAAOjO,IACT,EAEA8gC,EAAO3sB,UAAUizB,OAAS,WACxB,IAAIvH,EAAM7/B,KAAKwL,OACf,GAAIq0B,EAAM,GAAM,EACd,MAAM,IAAIre,WAAW,6CAEvB,IAAK,IAAIvT,EAAI,EAAGA,EAAI4xB,EAAK5xB,GAAK,EAC5Bw1B,EAAKzjC,KAAMiO,EAAGA,EAAI,GAClBw1B,EAAKzjC,KAAMiO,EAAI,EAAGA,EAAI,GACtBw1B,EAAKzjC,KAAMiO,EAAI,EAAGA,EAAI,GACtBw1B,EAAKzjC,KAAMiO,EAAI,EAAGA,EAAI,GAExB,OAAOjO,IACT,EAEA8gC,EAAO3sB,UAAUlM,SAAW,WAC1B,IAAIuD,EAASxL,KAAKwL,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBq3B,UAAUr3B,OAAqB43B,EAAUpjC,KAAM,EAAGwL,GAC/C03B,EAAajtB,MAAMjW,KAAM6iC,UAClC,EAEA/B,EAAO3sB,UAAUkzB,eAAiBvG,EAAO3sB,UAAUlM,SAEnD64B,EAAO3sB,UAAUmzB,OAAS,SAAiBx+B,GACzC,IAAKg4B,EAAOuB,SAASv5B,GAAI,MAAM,IAAIiN,UAAU,6BAC7C,OAAI/V,OAAS8I,GACsB,IAA5Bg4B,EAAO8F,QAAQ5mC,KAAM8I,EAC9B,EAEAg4B,EAAO3sB,UAAUozB,QAAU,WACzB,IAAIzC,EAAM,GACN0C,EAAMj0B,EAAQ0tB,kBAGlB,OAFA6D,EAAM9kC,KAAKiI,SAAS,MAAO,EAAGu/B,GAAKC,QAAQ,UAAW,OAAOC,OACzD1nC,KAAKwL,OAASg8B,IAAK1C,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACIjE,IACFC,EAAO3sB,UAAU0sB,GAAuBC,EAAO3sB,UAAUozB,SAG3DzG,EAAO3sB,UAAUyyB,QAAU,SAAkBe,EAAQrf,EAAO9I,EAAKooB,EAAWC,GAI1E,GAHI/F,EAAW6F,EAAQ/+B,cACrB++B,EAAS7G,EAAO/9B,KAAK4kC,EAAQA,EAAO1J,OAAQ0J,EAAOtoB,cAEhDyhB,EAAOuB,SAASsF,GACnB,MAAM,IAAI5xB,UACR,wFAC2B4xB,GAiB/B,QAbclkC,IAAV6kB,IACFA,EAAQ,QAEE7kB,IAAR+b,IACFA,EAAMmoB,EAASA,EAAOn8B,OAAS,QAEf/H,IAAdmkC,IACFA,EAAY,QAEEnkC,IAAZokC,IACFA,EAAU7nC,KAAKwL,QAGb8c,EAAQ,GAAK9I,EAAMmoB,EAAOn8B,QAAUo8B,EAAY,GAAKC,EAAU7nC,KAAKwL,OACtE,MAAM,IAAIgW,WAAW,sBAGvB,GAAIomB,GAAaC,GAAWvf,GAAS9I,EACnC,OAAO,EAET,GAAIooB,GAAaC,EACf,OAAO,EAET,GAAIvf,GAAS9I,EACX,OAAO,EAQT,GAAIxf,OAAS2nC,EAAQ,OAAO,EAS5B,IAPA,IAAIj0B,GAJJm0B,KAAa,IADbD,KAAe,GAMXd,GAPJtnB,KAAS,IADT8I,KAAW,GASPuX,EAAM33B,KAAK4d,IAAIpS,EAAGozB,GAElBgB,EAAW9nC,KAAKue,MAAMqpB,EAAWC,GACjCE,EAAaJ,EAAOppB,MAAM+J,EAAO9I,GAE5BvR,EAAI,EAAGA,EAAI4xB,IAAO5xB,EACzB,GAAI65B,EAAS75B,KAAO85B,EAAW95B,GAAI,CACjCyF,EAAIo0B,EAAS75B,GACb64B,EAAIiB,EAAW95B,GACf,KACN,CAGE,OAAIyF,EAAIozB,GAAU,EACdA,EAAIpzB,EAAU,EACX,CACT,EA2HAotB,EAAO3sB,UAAUrJ,SAAW,SAAmB64B,EAAK3iB,EAAYygB,GAC9D,OAAmD,IAA5CzhC,KAAKugC,QAAQoD,EAAK3iB,EAAYygB,EACvC,EAEAX,EAAO3sB,UAAUosB,QAAU,SAAkBoD,EAAK3iB,EAAYygB,GAC5D,OAAOiC,EAAqB1jC,KAAM2jC,EAAK3iB,EAAYygB,GAAU,EAC/D,EAEAX,EAAO3sB,UAAU2vB,YAAc,SAAsBH,EAAK3iB,EAAYygB,GACpE,OAAOiC,EAAqB1jC,KAAM2jC,EAAK3iB,EAAYygB,GAAU,EAC/D,EA2CAX,EAAO3sB,UAAU6V,MAAQ,SAAgBwX,EAAQvD,EAAQzyB,EAAQi2B,GAE/D,QAAeh+B,IAAXw6B,EACFwD,EAAW,OACXj2B,EAASxL,KAAKwL,OACdyyB,EAAS,OAEJ,QAAex6B,IAAX+H,GAA0C,iBAAXyyB,EACxCwD,EAAWxD,EACXzyB,EAASxL,KAAKwL,OACdyyB,EAAS,MAEJ,KAAI5kB,SAAS4kB,GAUlB,MAAM,IAAI76B,MACR,2EAVF66B,KAAoB,EAChB5kB,SAAS7N,IACXA,KAAoB,OACH/H,IAAbg+B,IAAwBA,EAAW,UAEvCA,EAAWj2B,EACXA,OAAS/H,EAMf,CAEE,IAAI8gC,EAAYvkC,KAAKwL,OAASyyB,EAG9B,SAFex6B,IAAX+H,GAAwBA,EAAS+4B,KAAW/4B,EAAS+4B,GAEpD/C,EAAOh2B,OAAS,IAAMA,EAAS,GAAKyyB,EAAS,IAAOA,EAASj+B,KAAKwL,OACrE,MAAM,IAAIgW,WAAW,0CAGlBigB,IAAUA,EAAW,QAG1B,IADA,IAAIqB,GAAc,IAEhB,OAAQrB,GACN,IAAK,MACH,OAAO6C,EAAStkC,KAAMwhC,EAAQvD,EAAQzyB,GAExC,IAAK,OACL,IAAK,QACH,OAAOm5B,EAAU3kC,KAAMwhC,EAAQvD,EAAQzyB,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOq5B,EAAW7kC,KAAMwhC,EAAQvD,EAAQzyB,GAE1C,IAAK,SAEH,OAAOy5B,EAAYjlC,KAAMwhC,EAAQvD,EAAQzyB,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO05B,EAAUllC,KAAMwhC,EAAQvD,EAAQzyB,GAEzC,QACE,GAAIs3B,EAAa,MAAM,IAAI/sB,UAAU,qBAAuB0rB,GAC5DA,GAAY,GAAKA,GAAUwB,cAC3BH,GAAc,EAGtB,EAEAhC,EAAO3sB,UAAU6zB,OAAS,WACxB,MAAO,CACL1hC,KAAM,SACNtF,KAAM8B,MAAMqR,UAAUoK,MAAMxJ,KAAK/U,KAAKioC,MAAQjoC,KAAM,GAExD,EAyFA,IAAIgmC,EAAuB,KAoB3B,SAAS3C,EAAYjC,EAAK9Y,EAAO9I,GAC/B,IAAI0oB,EAAM,GACV1oB,EAAMtX,KAAK4d,IAAIsb,EAAI51B,OAAQgU,GAE3B,IAAK,IAAIvR,EAAIqa,EAAOra,EAAIuR,IAAOvR,EAC7Bi6B,GAAOpoB,OAAOmmB,aAAsB,IAAT7E,EAAInzB,IAEjC,OAAOi6B,CACT,CAEA,SAAS5E,EAAalC,EAAK9Y,EAAO9I,GAChC,IAAI0oB,EAAM,GACV1oB,EAAMtX,KAAK4d,IAAIsb,EAAI51B,OAAQgU,GAE3B,IAAK,IAAIvR,EAAIqa,EAAOra,EAAIuR,IAAOvR,EAC7Bi6B,GAAOpoB,OAAOmmB,aAAa7E,EAAInzB,IAEjC,OAAOi6B,CACT,CAEA,SAAS/E,EAAU/B,EAAK9Y,EAAO9I,GAC7B,IAAIqgB,EAAMuB,EAAI51B,SAET8c,GAASA,EAAQ,KAAGA,EAAQ,KAC5B9I,GAAOA,EAAM,GAAKA,EAAMqgB,KAAKrgB,EAAMqgB,GAGxC,IADA,IAAIsI,EAAM,GACDl6B,EAAIqa,EAAOra,EAAIuR,IAAOvR,EAC7Bk6B,GAAOC,EAAoBhH,EAAInzB,IAEjC,OAAOk6B,CACT,CAEA,SAAS3E,EAAcpC,EAAK9Y,EAAO9I,GAIjC,IAHA,IAAIjO,EAAQ6vB,EAAI7iB,MAAM+J,EAAO9I,GACzB+lB,EAAM,GAEDt3B,EAAI,EAAGA,EAAIsD,EAAM/F,OAAS,EAAGyC,GAAK,EACzCs3B,GAAOzlB,OAAOmmB,aAAa10B,EAAMtD,GAAqB,IAAfsD,EAAMtD,EAAI,IAEnD,OAAOs3B,CACT,CAiCA,SAAS8C,EAAapK,EAAQqK,EAAK98B,GACjC,GAAKyyB,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIzc,WAAW,sBAC3D,GAAIyc,EAASqK,EAAM98B,EAAQ,MAAM,IAAIgW,WAAW,wCAClD,CAmLA,SAAS+mB,EAAUnH,EAAK7wB,EAAO0tB,EAAQqK,EAAKd,EAAK1hB,GAC/C,IAAKgb,EAAOuB,SAASjB,GAAM,MAAM,IAAIrrB,UAAU,+CAC/C,GAAIxF,EAAQi3B,GAAOj3B,EAAQuV,EAAK,MAAM,IAAItE,WAAW,qCACrD,GAAIyc,EAASqK,EAAMlH,EAAI51B,OAAQ,MAAM,IAAIgW,WAAW,qBACtD,CA+LA,SAASgnB,EAAcpH,EAAK7wB,EAAO0tB,EAAQqK,EAAKd,EAAK1hB,GACnD,GAAImY,EAASqK,EAAMlH,EAAI51B,OAAQ,MAAM,IAAIgW,WAAW,sBACpD,GAAIyc,EAAS,EAAG,MAAM,IAAIzc,WAAW,qBACvC,CAEA,SAASinB,EAAYrH,EAAK7wB,EAAO0tB,EAAQyK,EAAcC,GAOrD,OANAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GACHH,EAAapH,EAAK7wB,EAAO0tB,EAAQ,GAEnCD,EAAQhU,MAAMoX,EAAK7wB,EAAO0tB,EAAQyK,EAAc,GAAI,GAC7CzK,EAAS,CAClB,CAUA,SAAS2K,EAAaxH,EAAK7wB,EAAO0tB,EAAQyK,EAAcC,GAOtD,OANAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GACHH,EAAapH,EAAK7wB,EAAO0tB,EAAQ,GAEnCD,EAAQhU,MAAMoX,EAAK7wB,EAAO0tB,EAAQyK,EAAc,GAAI,GAC7CzK,EAAS,CAClB,CAvbA6C,EAAO3sB,UAAUoK,MAAQ,SAAgB+J,EAAO9I,GAC9C,IAAIqgB,EAAM7/B,KAAKwL,QACf8c,IAAUA,GAGE,GACVA,GAASuX,GACG,IAAGvX,EAAQ,GACdA,EAAQuX,IACjBvX,EAAQuX,IANVrgB,OAAc/b,IAAR+b,EAAoBqgB,IAAQrgB,GASxB,GACRA,GAAOqgB,GACG,IAAGrgB,EAAM,GACVA,EAAMqgB,IACfrgB,EAAMqgB,GAGJrgB,EAAM8I,IAAO9I,EAAM8I,GAEvB,IAAIugB,EAAS7oC,KAAK8oC,SAASxgB,EAAO9I,GAIlC,OAFA3U,OAAOoT,eAAe4qB,EAAQ/H,EAAO3sB,WAE9B00B,CACT,EAUA/H,EAAO3sB,UAAU40B,WACjBjI,EAAO3sB,UAAU60B,WAAa,SAAqB/K,EAAQ5e,EAAYspB,GACrE1K,KAAoB,EACpB5e,KAA4B,EACvBspB,GAAUN,EAAYpK,EAAQ5e,EAAYrf,KAAKwL,QAKpD,IAHA,IAAIm4B,EAAM3jC,KAAKi+B,GACXgL,EAAM,EACNh7B,EAAI,IACCA,EAAIoR,IAAe4pB,GAAO,MACjCtF,GAAO3jC,KAAKi+B,EAAShwB,GAAKg7B,EAG5B,OAAOtF,CACT,EAEA7C,EAAO3sB,UAAU+0B,WACjBpI,EAAO3sB,UAAUg1B,WAAa,SAAqBlL,EAAQ5e,EAAYspB,GACrE1K,KAAoB,EACpB5e,KAA4B,EACvBspB,GACHN,EAAYpK,EAAQ5e,EAAYrf,KAAKwL,QAKvC,IAFA,IAAIm4B,EAAM3jC,KAAKi+B,IAAW5e,GACtB4pB,EAAM,EACH5pB,EAAa,IAAM4pB,GAAO,MAC/BtF,GAAO3jC,KAAKi+B,IAAW5e,GAAc4pB,EAGvC,OAAOtF,CACT,EAEA7C,EAAO3sB,UAAUi1B,UACjBtI,EAAO3sB,UAAUk1B,UAAY,SAAoBpL,EAAQ0K,GAGvD,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCxL,KAAKi+B,EACd,EAEA6C,EAAO3sB,UAAUm1B,aACjBxI,EAAO3sB,UAAUo1B,aAAe,SAAuBtL,EAAQ0K,GAG7D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCxL,KAAKi+B,GAAWj+B,KAAKi+B,EAAS,IAAM,CAC7C,EAEA6C,EAAO3sB,UAAUq1B,aACjB1I,EAAO3sB,UAAU+vB,aAAe,SAAuBjG,EAAQ0K,GAG7D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACnCxL,KAAKi+B,IAAW,EAAKj+B,KAAKi+B,EAAS,EAC7C,EAEA6C,EAAO3sB,UAAUs1B,aACjB3I,EAAO3sB,UAAUu1B,aAAe,SAAuBzL,EAAQ0K,GAI7D,OAHA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,SAElCxL,KAAKi+B,GACTj+B,KAAKi+B,EAAS,IAAM,EACpBj+B,KAAKi+B,EAAS,IAAM,IACD,SAAnBj+B,KAAKi+B,EAAS,EACrB,EAEA6C,EAAO3sB,UAAUw1B,aACjB7I,EAAO3sB,UAAUy1B,aAAe,SAAuB3L,EAAQ0K,GAI7D,OAHA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QAEpB,SAAfxL,KAAKi+B,IACTj+B,KAAKi+B,EAAS,IAAM,GACrBj+B,KAAKi+B,EAAS,IAAM,EACrBj+B,KAAKi+B,EAAS,GAClB,EAEA6C,EAAO3sB,UAAU01B,UAAY,SAAoB5L,EAAQ5e,EAAYspB,GACnE1K,KAAoB,EACpB5e,KAA4B,EACvBspB,GAAUN,EAAYpK,EAAQ5e,EAAYrf,KAAKwL,QAKpD,IAHA,IAAIm4B,EAAM3jC,KAAKi+B,GACXgL,EAAM,EACNh7B,EAAI,IACCA,EAAIoR,IAAe4pB,GAAO,MACjCtF,GAAO3jC,KAAKi+B,EAAShwB,GAAKg7B,EAM5B,OAFItF,IAFJsF,GAAO,OAEStF,GAAOz7B,KAAK22B,IAAI,EAAG,EAAIxf,IAEhCskB,CACT,EAEA7C,EAAO3sB,UAAU21B,UAAY,SAAoB7L,EAAQ5e,EAAYspB,GACnE1K,KAAoB,EACpB5e,KAA4B,EACvBspB,GAAUN,EAAYpK,EAAQ5e,EAAYrf,KAAKwL,QAKpD,IAHA,IAAIyC,EAAIoR,EACJ4pB,EAAM,EACNtF,EAAM3jC,KAAKi+B,IAAWhwB,GACnBA,EAAI,IAAMg7B,GAAO,MACtBtF,GAAO3jC,KAAKi+B,IAAWhwB,GAAKg7B,EAM9B,OAFItF,IAFJsF,GAAO,OAEStF,GAAOz7B,KAAK22B,IAAI,EAAG,EAAIxf,IAEhCskB,CACT,EAEA7C,EAAO3sB,UAAU41B,SAAW,SAAmB9L,EAAQ0K,GAGrD,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACtB,IAAfxL,KAAKi+B,IACyB,GAA3B,IAAOj+B,KAAKi+B,GAAU,GADKj+B,KAAKi+B,EAE3C,EAEA6C,EAAO3sB,UAAU61B,YAAc,SAAsB/L,EAAQ0K,GAC3D1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QAC3C,IAAIm4B,EAAM3jC,KAAKi+B,GAAWj+B,KAAKi+B,EAAS,IAAM,EAC9C,OAAc,MAAN0F,EAAsB,WAANA,EAAmBA,CAC7C,EAEA7C,EAAO3sB,UAAU81B,YAAc,SAAsBhM,EAAQ0K,GAC3D1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QAC3C,IAAIm4B,EAAM3jC,KAAKi+B,EAAS,GAAMj+B,KAAKi+B,IAAW,EAC9C,OAAc,MAAN0F,EAAsB,WAANA,EAAmBA,CAC7C,EAEA7C,EAAO3sB,UAAU+1B,YAAc,SAAsBjM,EAAQ0K,GAI3D,OAHA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QAEnCxL,KAAKi+B,GACVj+B,KAAKi+B,EAAS,IAAM,EACpBj+B,KAAKi+B,EAAS,IAAM,GACpBj+B,KAAKi+B,EAAS,IAAM,EACzB,EAEA6C,EAAO3sB,UAAUg2B,YAAc,SAAsBlM,EAAQ0K,GAI3D,OAHA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QAEnCxL,KAAKi+B,IAAW,GACrBj+B,KAAKi+B,EAAS,IAAM,GACpBj+B,KAAKi+B,EAAS,IAAM,EACpBj+B,KAAKi+B,EAAS,EACnB,EAEA6C,EAAO3sB,UAAUi2B,YAAc,SAAsBnM,EAAQ0K,GAG3D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCwyB,EAAQliB,KAAK9b,KAAMi+B,GAAQ,EAAM,GAAI,EAC9C,EAEA6C,EAAO3sB,UAAUk2B,YAAc,SAAsBpM,EAAQ0K,GAG3D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCwyB,EAAQliB,KAAK9b,KAAMi+B,GAAQ,EAAO,GAAI,EAC/C,EAEA6C,EAAO3sB,UAAUm2B,aAAe,SAAuBrM,EAAQ0K,GAG7D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCwyB,EAAQliB,KAAK9b,KAAMi+B,GAAQ,EAAM,GAAI,EAC9C,EAEA6C,EAAO3sB,UAAUo2B,aAAe,SAAuBtM,EAAQ0K,GAG7D,OAFA1K,KAAoB,EACf0K,GAAUN,EAAYpK,EAAQ,EAAGj+B,KAAKwL,QACpCwyB,EAAQliB,KAAK9b,KAAMi+B,GAAQ,EAAO,GAAI,EAC/C,EAQA6C,EAAO3sB,UAAUq2B,YACjB1J,EAAO3sB,UAAUs2B,YAAc,SAAsBl6B,EAAO0tB,EAAQ5e,EAAYspB,IAC9Ep4B,GAASA,EACT0tB,KAAoB,EACpB5e,KAA4B,EACvBspB,IAEHJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ5e,EADfnX,KAAK22B,IAAI,EAAG,EAAIxf,GAAc,EACO,GAGtD,IAAI4pB,EAAM,EACNh7B,EAAI,EAER,IADAjO,KAAKi+B,GAAkB,IAAR1tB,IACNtC,EAAIoR,IAAe4pB,GAAO,MACjCjpC,KAAKi+B,EAAShwB,GAAMsC,EAAQ04B,EAAO,IAGrC,OAAOhL,EAAS5e,CAClB,EAEAyhB,EAAO3sB,UAAUu2B,YACjB5J,EAAO3sB,UAAUw2B,YAAc,SAAsBp6B,EAAO0tB,EAAQ5e,EAAYspB,IAC9Ep4B,GAASA,EACT0tB,KAAoB,EACpB5e,KAA4B,EACvBspB,IAEHJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ5e,EADfnX,KAAK22B,IAAI,EAAG,EAAIxf,GAAc,EACO,GAGtD,IAAIpR,EAAIoR,EAAa,EACjB4pB,EAAM,EAEV,IADAjpC,KAAKi+B,EAAShwB,GAAa,IAARsC,IACVtC,GAAK,IAAMg7B,GAAO,MACzBjpC,KAAKi+B,EAAShwB,GAAMsC,EAAQ04B,EAAO,IAGrC,OAAOhL,EAAS5e,CAClB,EAEAyhB,EAAO3sB,UAAUy2B,WACjB9J,EAAO3sB,UAAU02B,WAAa,SAAqBt6B,EAAO0tB,EAAQ0K,GAKhE,OAJAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,IAAM,GACtDj+B,KAAKi+B,GAAmB,IAAR1tB,EACT0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAU22B,cACjBhK,EAAO3sB,UAAU42B,cAAgB,SAAwBx6B,EAAO0tB,EAAQ0K,GAMtE,OALAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,MAAQ,GACxDj+B,KAAKi+B,GAAmB,IAAR1tB,EAChBvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EACvB0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAU62B,cACjBlK,EAAO3sB,UAAU82B,cAAgB,SAAwB16B,EAAO0tB,EAAQ0K,GAMtE,OALAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,MAAQ,GACxDj+B,KAAKi+B,GAAW1tB,IAAU,EAC1BvQ,KAAKi+B,EAAS,GAAc,IAAR1tB,EACb0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAU+2B,cACjBpK,EAAO3sB,UAAUg3B,cAAgB,SAAwB56B,EAAO0tB,EAAQ0K,GAQtE,OAPAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,WAAY,GAC5Dj+B,KAAKi+B,EAAS,GAAM1tB,IAAU,GAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,GAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EAC9BvQ,KAAKi+B,GAAmB,IAAR1tB,EACT0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAUi3B,cACjBtK,EAAO3sB,UAAUk3B,cAAgB,SAAwB96B,EAAO0tB,EAAQ0K,GAQtE,OAPAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,WAAY,GAC5Dj+B,KAAKi+B,GAAW1tB,IAAU,GAC1BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,GAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EAC9BvQ,KAAKi+B,EAAS,GAAc,IAAR1tB,EACb0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAUm3B,WAAa,SAAqB/6B,EAAO0tB,EAAQ5e,EAAYspB,GAG5E,GAFAp4B,GAASA,EACT0tB,KAAoB,GACf0K,EAAU,CACb,IAAI4C,EAAQrjC,KAAK22B,IAAI,EAAI,EAAIxf,EAAc,GAE3CkpB,EAASvoC,KAAMuQ,EAAO0tB,EAAQ5e,EAAYksB,EAAQ,GAAIA,EAC1D,CAEE,IAAIt9B,EAAI,EACJg7B,EAAM,EACNuC,EAAM,EAEV,IADAxrC,KAAKi+B,GAAkB,IAAR1tB,IACNtC,EAAIoR,IAAe4pB,GAAO,MAC7B14B,EAAQ,GAAa,IAARi7B,GAAsC,IAAzBxrC,KAAKi+B,EAAShwB,EAAI,KAC9Cu9B,EAAM,GAERxrC,KAAKi+B,EAAShwB,IAAOsC,EAAQ04B,EAAQ,GAAKuC,EAAM,IAGlD,OAAOvN,EAAS5e,CAClB,EAEAyhB,EAAO3sB,UAAUs3B,WAAa,SAAqBl7B,EAAO0tB,EAAQ5e,EAAYspB,GAG5E,GAFAp4B,GAASA,EACT0tB,KAAoB,GACf0K,EAAU,CACb,IAAI4C,EAAQrjC,KAAK22B,IAAI,EAAI,EAAIxf,EAAc,GAE3CkpB,EAASvoC,KAAMuQ,EAAO0tB,EAAQ5e,EAAYksB,EAAQ,GAAIA,EAC1D,CAEE,IAAIt9B,EAAIoR,EAAa,EACjB4pB,EAAM,EACNuC,EAAM,EAEV,IADAxrC,KAAKi+B,EAAShwB,GAAa,IAARsC,IACVtC,GAAK,IAAMg7B,GAAO,MACrB14B,EAAQ,GAAa,IAARi7B,GAAsC,IAAzBxrC,KAAKi+B,EAAShwB,EAAI,KAC9Cu9B,EAAM,GAERxrC,KAAKi+B,EAAShwB,IAAOsC,EAAQ04B,EAAQ,GAAKuC,EAAM,IAGlD,OAAOvN,EAAS5e,CAClB,EAEAyhB,EAAO3sB,UAAUu3B,UAAY,SAAoBn7B,EAAO0tB,EAAQ0K,GAM9D,OALAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,KAAM,KAClD1tB,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCvQ,KAAKi+B,GAAmB,IAAR1tB,EACT0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAUw3B,aAAe,SAAuBp7B,EAAO0tB,EAAQ0K,GAMpE,OALAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,OAAQ,OACxDj+B,KAAKi+B,GAAmB,IAAR1tB,EAChBvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EACvB0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAUy3B,aAAe,SAAuBr7B,EAAO0tB,EAAQ0K,GAMpE,OALAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,OAAQ,OACxDj+B,KAAKi+B,GAAW1tB,IAAU,EAC1BvQ,KAAKi+B,EAAS,GAAc,IAAR1tB,EACb0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAU03B,aAAe,SAAuBt7B,EAAO0tB,EAAQ0K,GAQpE,OAPAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,YAAY,YAC5Dj+B,KAAKi+B,GAAmB,IAAR1tB,EAChBvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,GAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,GACvB0tB,EAAS,CAClB,EAEA6C,EAAO3sB,UAAU23B,aAAe,SAAuBv7B,EAAO0tB,EAAQ0K,GASpE,OARAp4B,GAASA,EACT0tB,KAAoB,EACf0K,GAAUJ,EAASvoC,KAAMuQ,EAAO0tB,EAAQ,EAAG,YAAY,YACxD1tB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CvQ,KAAKi+B,GAAW1tB,IAAU,GAC1BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,GAC9BvQ,KAAKi+B,EAAS,GAAM1tB,IAAU,EAC9BvQ,KAAKi+B,EAAS,GAAc,IAAR1tB,EACb0tB,EAAS,CAClB,EAiBA6C,EAAO3sB,UAAU43B,aAAe,SAAuBx7B,EAAO0tB,EAAQ0K,GACpE,OAAOF,EAAWzoC,KAAMuQ,EAAO0tB,GAAQ,EAAM0K,EAC/C,EAEA7H,EAAO3sB,UAAU63B,aAAe,SAAuBz7B,EAAO0tB,EAAQ0K,GACpE,OAAOF,EAAWzoC,KAAMuQ,EAAO0tB,GAAQ,EAAO0K,EAChD,EAYA7H,EAAO3sB,UAAU83B,cAAgB,SAAwB17B,EAAO0tB,EAAQ0K,GACtE,OAAOC,EAAY5oC,KAAMuQ,EAAO0tB,GAAQ,EAAM0K,EAChD,EAEA7H,EAAO3sB,UAAU+3B,cAAgB,SAAwB37B,EAAO0tB,EAAQ0K,GACtE,OAAOC,EAAY5oC,KAAMuQ,EAAO0tB,GAAQ,EAAO0K,EACjD,EAGA7H,EAAO3sB,UAAU4tB,KAAO,SAAe4F,EAAQwE,EAAa7jB,EAAO9I,GACjE,IAAKshB,EAAOuB,SAASsF,GAAS,MAAM,IAAI5xB,UAAU,+BAQlD,GAPKuS,IAAOA,EAAQ,GACf9I,GAAe,IAARA,IAAWA,EAAMxf,KAAKwL,QAC9B2gC,GAAexE,EAAOn8B,SAAQ2gC,EAAcxE,EAAOn8B,QAClD2gC,IAAaA,EAAc,GAC5B3sB,EAAM,GAAKA,EAAM8I,IAAO9I,EAAM8I,GAG9B9I,IAAQ8I,EAAO,OAAO,EAC1B,GAAsB,IAAlBqf,EAAOn8B,QAAgC,IAAhBxL,KAAKwL,OAAc,OAAO,EAGrD,GAAI2gC,EAAc,EAChB,MAAM,IAAI3qB,WAAW,6BAEvB,GAAI8G,EAAQ,GAAKA,GAAStoB,KAAKwL,OAAQ,MAAM,IAAIgW,WAAW,sBAC5D,GAAIhC,EAAM,EAAG,MAAM,IAAIgC,WAAW,2BAG9BhC,EAAMxf,KAAKwL,SAAQgU,EAAMxf,KAAKwL,QAC9Bm8B,EAAOn8B,OAAS2gC,EAAc3sB,EAAM8I,IACtC9I,EAAMmoB,EAAOn8B,OAAS2gC,EAAc7jB,GAGtC,IAAIuX,EAAMrgB,EAAM8I,EAahB,OAXItoB,OAAS2nC,GAAqD,mBAApC/+B,WAAWuL,UAAUi4B,WAEjDpsC,KAAKosC,WAAWD,EAAa7jB,EAAO9I,GAEpC5W,WAAWuL,UAAU5T,IAAIwU,KACvB4yB,EACA3nC,KAAK8oC,SAASxgB,EAAO9I,GACrB2sB,GAIGtM,CACT,EAMAiB,EAAO3sB,UAAUsyB,KAAO,SAAe9C,EAAKrb,EAAO9I,EAAKiiB,GAEtD,GAAmB,iBAARkC,EAAkB,CAS3B,GARqB,iBAAVrb,GACTmZ,EAAWnZ,EACXA,EAAQ,EACR9I,EAAMxf,KAAKwL,QACa,iBAARgU,IAChBiiB,EAAWjiB,EACXA,EAAMxf,KAAKwL,aAEI/H,IAAbg+B,GAA8C,iBAAbA,EACnC,MAAM,IAAI1rB,UAAU,6BAEtB,GAAwB,iBAAb0rB,IAA0BX,EAAOY,WAAWD,GACrD,MAAM,IAAI1rB,UAAU,qBAAuB0rB,GAE7C,GAAmB,IAAfkC,EAAIn4B,OAAc,CACpB,IAAI/G,EAAOk/B,EAAIz1B,WAAW,IACR,SAAbuzB,GAAuBh9B,EAAO,KAClB,WAAbg9B,KAEFkC,EAAMl/B,EAEd,CACA,KAA4B,iBAARk/B,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMvqB,OAAOuqB,IAIf,GAAIrb,EAAQ,GAAKtoB,KAAKwL,OAAS8c,GAAStoB,KAAKwL,OAASgU,EACpD,MAAM,IAAIgC,WAAW,sBAGvB,GAAIhC,GAAO8I,EACT,OAAOtoB,KAQT,IAAIiO,EACJ,GANAqa,KAAkB,EAClB9I,OAAc/b,IAAR+b,EAAoBxf,KAAKwL,OAASgU,IAAQ,EAE3CmkB,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAK11B,EAAIqa,EAAOra,EAAIuR,IAAOvR,EACzBjO,KAAKiO,GAAK01B,MAEP,CACL,IAAIpyB,EAAQuvB,EAAOuB,SAASsB,GACxBA,EACA7C,EAAO/9B,KAAK4gC,EAAKlC,GACjB5B,EAAMtuB,EAAM/F,OAChB,GAAY,IAARq0B,EACF,MAAM,IAAI9pB,UAAU,cAAgB4tB,EAClC,qCAEJ,IAAK11B,EAAI,EAAGA,EAAIuR,EAAM8I,IAASra,EAC7BjO,KAAKiO,EAAIqa,GAAS/W,EAAMtD,EAAI4xB,EAElC,CAEE,OAAO7/B,IACT,EAKA,IAAIqsC,EAAoB,oBAgBxB,SAAStJ,EAAavB,EAAQ2D,GAE5B,IAAIU,EADJV,EAAQA,GAAS5jB,IAMjB,IAJA,IAAI/V,EAASg2B,EAAOh2B,OAChB8gC,EAAgB,KAChB/6B,EAAQ,GAEHtD,EAAI,EAAGA,EAAIzC,IAAUyC,EAAG,CAI/B,IAHA43B,EAAYrE,EAAOtzB,WAAWD,IAGd,OAAU43B,EAAY,MAAQ,CAE5C,IAAKyG,EAAe,CAElB,GAAIzG,EAAY,MAAQ,EAEjBV,GAAS,IAAK,GAAI5zB,EAAMnG,KAAK,IAAM,IAAM,KAC9C,QACV,CAAe,GAAI6C,EAAI,IAAMzC,EAAQ,EAEtB25B,GAAS,IAAK,GAAI5zB,EAAMnG,KAAK,IAAM,IAAM,KAC9C,QACV,CAGQkhC,EAAgBzG,EAEhB,QACR,CAGM,GAAIA,EAAY,MAAQ,EACjBV,GAAS,IAAK,GAAI5zB,EAAMnG,KAAK,IAAM,IAAM,KAC9CkhC,EAAgBzG,EAChB,QACR,CAGMA,EAAkE,OAArDyG,EAAgB,OAAU,GAAKzG,EAAY,YAC/CyG,IAEJnH,GAAS,IAAK,GAAI5zB,EAAMnG,KAAK,IAAM,IAAM,KAMhD,GAHAkhC,EAAgB,KAGZzG,EAAY,IAAM,CACpB,IAAKV,GAAS,GAAK,EAAG,MACtB5zB,EAAMnG,KAAKy6B,EACjB,MAAW,GAAIA,EAAY,KAAO,CAC5B,IAAKV,GAAS,GAAK,EAAG,MACtB5zB,EAAMnG,KACJy6B,GAAa,EAAM,IACP,GAAZA,EAAmB,IAE3B,MAAW,GAAIA,EAAY,MAAS,CAC9B,IAAKV,GAAS,GAAK,EAAG,MACtB5zB,EAAMnG,KACJy6B,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAE3B,KAAW,MAAIA,EAAY,SASrB,MAAM,IAAIziC,MAAM,sBARhB,IAAK+hC,GAAS,GAAK,EAAG,MACtB5zB,EAAMnG,KACJy6B,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAI3B,CACA,CAEE,OAAOt0B,CACT,CA2BA,SAASyxB,EAAe8B,GACtB,OAAO9F,EAAOO,YAxHhB,SAAsBuF,GAMpB,IAFAA,GAFAA,EAAMA,EAAI/6B,MAAM,KAAK,IAEX29B,OAAOD,QAAQ4E,EAAmB,KAEpC7gC,OAAS,EAAG,MAAO,GAE3B,KAAOs5B,EAAIt5B,OAAS,GAAM,GACxBs5B,GAAY,IAEd,OAAOA,CACT,CA4G4ByH,CAAYzH,GACxC,CAEA,SAASF,EAAYjmB,EAAK6tB,EAAKvO,EAAQzyB,GACrC,IAAK,IAAIyC,EAAI,EAAGA,EAAIzC,KACbyC,EAAIgwB,GAAUuO,EAAIhhC,QAAYyC,GAAK0Q,EAAInT,UADhByC,EAE5Bu+B,EAAIv+B,EAAIgwB,GAAUtf,EAAI1Q,GAExB,OAAOA,CACT,CAKA,SAAS6zB,EAAYloB,EAAKtT,GACxB,OAAOsT,aAAetT,GACZ,MAAPsT,GAAkC,MAAnBA,EAAI7Z,aAA+C,MAAxB6Z,EAAI7Z,YAAYwE,MACzDqV,EAAI7Z,YAAYwE,OAAS+B,EAAK/B,IACpC,CACA,SAASg+B,EAAa3oB,GAEpB,OAAOA,GAAQA,CACjB,CAIA,IAAIwuB,EAAsB,WAGxB,IAFA,IAAIqE,EAAW,mBACXC,EAAQ,IAAI5pC,MAAM,KACbmL,EAAI,EAAGA,EAAI,KAAMA,EAExB,IADA,IAAI0+B,EAAU,GAAJ1+B,EACDo2B,EAAI,EAAGA,EAAI,KAAMA,EACxBqI,EAAMC,EAAMtI,GAAKoI,EAASx+B,GAAKw+B,EAASpI,GAG5C,OAAOqI,CACR,CAVyB,oCE1wD1B,QAAK5a,WAAW8G,eAId,IACE,MAAMlnB,EAAUV,QAAQ,iBAClB47B,YAAEA,GAAgBl7B,EACxB,IACEA,EAAQk7B,YAAc,OACtB/hC,OAAOgiC,OAAO/a,WAAY9gB,QAAQ,oBAClCU,EAAQk7B,YAAcA,EACtB,MAAO1rC,GAEP,MADAwQ,EAAQk7B,YAAcA,EAChB1rC,CACZ,EACI,MAAOA,GAEP2J,OAAOgiC,OAAO/a,WAAYgb,IAC9B,CAGA,IAGE,MAAMC,KAAEA,GAASC,IACbD,IAASA,EAAK54B,UAAU6D,SAC1B+0B,EAAK54B,UAAU6D,OAAS,SAAe/Q,GACrC,IAAIiT,EAAW,EACf,MAAM+yB,EAAOjtC,KAEb,OAAO,IAAI44B,eAAe,CACxBtyB,KAAM,QACN,UAAMiiB,CAAM2kB,GACV,MAAM9xB,EAAQ6xB,EAAK1uB,MAAMrE,EAAUhS,KAAK4d,IAAImnB,EAAKnsC,KAAMoZ,EAnC/C,QAoCF+E,QAAe7D,EAAM+xB,cAC3BjzB,GAAY+E,EAAOI,WACnB6tB,EAAK3pB,QAAQ,IAAI3a,WAAWqW,IAExB/E,IAAa+yB,EAAKnsC,MACpBosC,EAAK1mC,OAEjB,GAEA,GAEE,MAAOtF,GAAO,KCtChB+L,eAAiBmgC,EAAYlN,EAAOmN,GAAQ,GAC1C,IAAK,MAAMC,KAAQpN,EACjB,GAAI,WAAYoN,QAC6CA,EAAKt1B,cAC3D,GAAIyH,YAAYkD,OAAO2qB,GAC5B,GAAID,EAAO,CACT,IAAInzB,EAAWozB,EAAKtsB,WACpB,MAAMxB,EAAM8tB,EAAKtsB,WAAassB,EAAKjuB,WACnC,KAAOnF,IAAasF,GAAK,CACvB,MAAM1e,EAAOoH,KAAK4d,IAAItG,EAAMtF,EAZpB,OAaFkB,EAAQkyB,EAAKruB,OAAOV,MAAMrE,EAAUA,EAAWpZ,GACrDoZ,GAAYkB,EAAMiE,iBACZ,IAAIzW,WAAWwS,EAC/B,CACA,YACckyB,MAGH,CAEL,IAAIpzB,EAAW,EAAGpR,IAClB,KAAOoR,IAAapR,EAAEhI,MAAM,CAC1B,MAAMsa,EAAQtS,EAAEyV,MAAMrE,EAAUhS,KAAK4d,IAAIhd,EAAEhI,KAAMoZ,EAzBvC,QA0BJ+E,QAAe7D,EAAM+xB,cAC3BjzB,GAAY+E,EAAOI,iBACb,IAAIzW,WAAWqW,EAC7B,CACA,CAEA,CAEA,MAAMsuB,EAAQ,MAAMR,EAElB7M,GAAS,GACT55B,GAAQ,GACRxF,GAAQ,EACR0sC,GAAW,cAUX,WAAAztC,CAAa0tC,EAAY,GAAI58B,EAAU,CAAA,GACrC,GAAyB,iBAAd48B,GAAwC,OAAdA,EACnC,MAAM,IAAI13B,UAAU,qFAGtB,GAA0C,mBAA/B03B,EAAUh2B,OAAOsG,UAC1B,MAAM,IAAIhI,UAAU,oFAGtB,GAAuB,iBAAZlF,GAA2C,mBAAZA,EACxC,MAAM,IAAIkF,UAAU,yEAGN,OAAZlF,IAAkBA,EAAU,CAAA,GAEhC,MAAM68B,EAAU,IAAInlC,YACpB,IAAK,MAAMoO,KAAW82B,EAAW,CAC/B,IAAIH,EAEFA,EADE7tB,YAAYkD,OAAOhM,GACd,IAAI/N,WAAW+N,EAAQsI,OAAOV,MAAM5H,EAAQqK,WAAYrK,EAAQqK,WAAarK,EAAQ0I,aACnF1I,aAAmB8I,YACrB,IAAI7W,WAAW+N,EAAQ4H,MAAM,IAC3B5H,aAAmBo2B,EACrBp2B,EAEA+2B,EAAQllC,OAAO,GAAGmO,KAG3B3W,MAAKc,GAAS2e,YAAYkD,OAAO2qB,GAAQA,EAAKjuB,WAAaiuB,EAAKxsC,KAChEd,MAAKkgC,EAAO90B,KAAKkiC,EACvB,CAEIttC,MAAKwtC,EAAW,QAAuB/pC,IAApBoN,EAAQ28B,QAAwB,cAAgB38B,EAAQ28B,UAC3E,MAAMlnC,OAAwB7C,IAAjBoN,EAAQvK,KAAqB,GAAKwZ,OAAOjP,EAAQvK,MAC9DtG,MAAKsG,EAAQ,iBAAiBqnC,KAAKrnC,GAAQA,EAAO,EACtD,CAME,QAAIxF,GACF,OAAOd,MAAKc,CAChB,CAKE,QAAIwF,GACF,OAAOtG,MAAKsG,CAChB,CASE,UAAMsnC,GAGJ,MAAMC,EAAU,IAAIC,YACpB,IAAIhJ,EAAM,GACV,UAAW,MAAMwI,KAAQF,EAAWptC,MAAKkgC,GAAQ,GAC/C4E,GAAO+I,EAAQE,OAAOT,EAAM,CAAEt1B,QAAQ,IAIxC,OADA8sB,GAAO+I,EAAQE,SACRjJ,CACX,CASE,iBAAMqI,GAMJ,MAAMnsC,EAAO,IAAI4H,WAAW5I,KAAKc,MACjC,IAAIm9B,EAAS,EACb,UAAW,MAAM7iB,KAASgyB,EAAWptC,MAAKkgC,GAAQ,GAChDl/B,EAAKT,IAAI6a,EAAO6iB,GAChBA,GAAU7iB,EAAM5P,OAGlB,OAAOxK,EAAKie,MAChB,CAEE,MAAAjH,GACE,MAAMg2B,EAAKZ,EAAWptC,MAAKkgC,GAAQ,GAEnC,OAAO,IAAIpO,WAAW8G,eAAe,CAEnCtyB,KAAM,QACN,UAAMiiB,CAAM2kB,GACV,MAAM9xB,QAAc4yB,EAAGv8B,OACvB2J,EAAMC,KAAO6xB,EAAK1mC,QAAU0mC,EAAK3pB,QAAQnI,EAAM7K,MACvD,EAEM,YAAMsL,SACEmyB,EAAGpwB,QACjB,GAEA,CAWE,KAAAW,CAAO+J,EAAQ,EAAG9I,EAAMxf,KAAKc,KAAMwF,EAAO,IACxC,MAAMxF,KAAEA,GAASd,KAEjB,IAAIiuC,EAAgB3lB,EAAQ,EAAIpgB,KAAKs/B,IAAI1mC,EAAOwnB,EAAO,GAAKpgB,KAAK4d,IAAIwC,EAAOxnB,GACxEotC,EAAc1uB,EAAM,EAAItX,KAAKs/B,IAAI1mC,EAAO0e,EAAK,GAAKtX,KAAK4d,IAAItG,EAAK1e,GAEpE,MAAMqtC,EAAOjmC,KAAKs/B,IAAI0G,EAAcD,EAAe,GAC7C/N,EAAQlgC,MAAKkgC,EACbuN,EAAY,GAClB,IAAIW,EAAQ,EAEZ,IAAK,MAAMd,KAAQpN,EAAO,CAExB,GAAIkO,GAASD,EACX,MAGF,MAAMrtC,EAAO2e,YAAYkD,OAAO2qB,GAAQA,EAAKjuB,WAAaiuB,EAAKxsC,KAC/D,GAAImtC,GAAiBntC,GAAQmtC,EAG3BA,GAAiBntC,EACjBotC,GAAeptC,MACV,CACL,IAAIsa,EACAqE,YAAYkD,OAAO2qB,IACrBlyB,EAAQkyB,EAAKxE,SAASmF,EAAe/lC,KAAK4d,IAAIhlB,EAAMotC,IACpDE,GAAShzB,EAAMiE,aAEfjE,EAAQkyB,EAAK/uB,MAAM0vB,EAAe/lC,KAAK4d,IAAIhlB,EAAMotC,IACjDE,GAAShzB,EAAMta,MAEjBotC,GAAeptC,EACf2sC,EAAUriC,KAAKgQ,GACf6yB,EAAgB,CACxB,CACA,CAEI,MAAMhB,EAAO,IAAIF,EAAK,GAAI,CAAEzmC,KAAMwZ,OAAOxZ,GAAM28B,gBAI/C,OAHAgK,GAAKnsC,EAAQqtC,EACblB,GAAK/M,EAASuN,EAEPR,CACX,CAEE,IAAKx1B,OAAOmF,eACV,MAAO,MACX,CAEE,OAAQnF,OAAO42B,aAAcC,GAC3B,OACEA,GACkB,iBAAXA,GACuB,mBAAvBA,EAAOvuC,cAEa,mBAAlBuuC,EAAOt2B,QACgB,mBAAvBs2B,EAAOnB,cAEhB,gBAAgBQ,KAAKW,EAAO72B,OAAOmF,aAEzC,GAGA/R,OAAO6R,iBAAiB6wB,EAAMp5B,UAAW,CACvCrT,KAAM,CAAE6b,YAAY,GACpBrW,KAAM,CAAEqW,YAAY,GACpB4B,MAAO,CAAE5B,YAAY,KAIhB,MAAMowB,GAAOQ,ECzMPgB,GA7CC,cAAmBxB,GAC/ByB,GAAgB,EAChBjqC,GAAQ,GAOR,WAAAxE,CAAa0uC,EAAUC,EAAU79B,EAAU,CAAA,GACzC,GAAIgyB,UAAUr3B,OAAS,EACrB,MAAM,IAAIuK,UAAU,8DAA8D8sB,UAAUr3B,mBAE9F/J,MAAMgtC,EAAU59B,GAEA,OAAZA,IAAkBA,EAAU,CAAA,GAGhC,MAAM29B,OAAwC/qC,IAAzBoN,EAAQ29B,aAA6BrkC,KAAKC,MAAQgP,OAAOvI,EAAQ29B,cACjFp1B,OAAO+E,MAAMqwB,KAChBxuC,MAAKwuC,EAAgBA,GAGvBxuC,MAAKuE,EAAQub,OAAO4uB,EACxB,CAEE,QAAInqC,GACF,OAAOvE,MAAKuE,CAChB,CAEE,gBAAIiqC,GACF,OAAOxuC,MAAKwuC,CAChB,CAEE,IAAK/2B,OAAOmF,eACV,MAAO,MACX,CAEE,OAAQnF,OAAO42B,aAAcC,GAC3B,QAASA,GAAUA,aAAkBvB,IACnC,WAAWY,KAAKW,EAAO72B,OAAOmF,aACpC;;ACtCA,IAAKA,YAAY+xB,GAAE5wB,SAAS9P,GAAEogC,YAAYO,IAAGn3B,OAC7C0Q,GAAEjgB,KAAKC,OACPk2B,GAAE,uEAAuEt0B,MAAM,KAC/E8kC,GAAE,CAAChI,EAAE/9B,EAAE+E,KAAKg5B,GAAG,GAAG,gBAAgB8G,KAAK7kC,GAAKA,EAAE6lC,KAAI,EAAE9gC,OAAM,IAAJA,EAAWA,EAAE,GAAS,QAAN/E,EAAE6lC,IAAW7lC,EAAEvE,KAAK,OAAOsiC,GAAG/9B,EAAEvE,OAAOsJ,GAAS,QAAN/E,EAAE6lC,IAAW,IAAI94B,GAAE,CAAC/M,GAAG+E,EAAE/E,GAAGA,GAAG,CAAC+9B,EAAE/9B,EAAE,KACpJoT,GAAE,CAACrO,EAAEghC,KAAKA,EAAEhhC,EAAEA,EAAE45B,QAAQ,YAAY,SAASA,QAAQ,MAAM,OAAOA,QAAQ,MAAM,OAAOA,QAAQ,KAAK,OACpG/zB,GAAE,CAACmL,EAAGgoB,EAAG3qB,KAAK,GAAG2qB,EAAEr7B,OAAO0Q,EAAG,MAAM,IAAInG,UAAU,sBAAsB8I,qBAAqB3C,kCAAkC2qB,EAAEr7B,oBAKzH,MAAMsjC,GAAW,MACxBpQ,GAAG,GACH,WAAA3+B,IAAe8mC,GAAG,GAAGA,EAAEr7B,OAAO,MAAM,IAAIuK,UAAU,gFAAgF,CAClI,IAAK44B,MAAM,MAAO,UAAU,CAC5B,CAAC1gC,MAAK,OAAOjO,KAAKqL,SAAS,CAC3B,OAAQujC,IAAGG,GAAI,OAAOA,GAAc,iBAAJA,GAAqB,aAAPA,EAAEJ,MAAkBtQ,GAAE2Q,KAAK3Q,GAAgB,mBAAN0Q,EAAE1Q,GAAe,CACpG,MAAA4Q,IAAUpI,GAAGnzB,GAAE,SAASmvB,UAAU,GAAG7iC,MAAK0+B,EAAGtzB,KAAKyjC,MAAKhI,GAAG,CAC1D,OAAOA,GAAGnzB,GAAE,SAASmvB,UAAU,GAAGgE,GAAG,GAAG7mC,MAAK0+B,EAAG1+B,MAAK0+B,EAAGwQ,OAAO,EAAEpmC,KAAKA,IAAI+9B,EAAE,CAC5E,GAAApmC,CAAIomC,GAAGnzB,GAAE,MAAMmvB,UAAU,GAAGgE,GAAG,GAAG,IAAI,IAAI/9B,EAAE9I,MAAK0+B,EAAGyQ,EAAErmC,EAAE0C,OAAOqC,EAAE,EAAEA,EAAEshC,EAAEthC,IAAI,GAAG/E,EAAE+E,GAAG,KAAKg5B,EAAE,OAAO/9B,EAAE+E,GAAG,GAAG,OAAO,IAAI,CACpH,MAAAuhC,CAAOvI,EAAE/9B,GAAiF,OAA9E4K,GAAE,SAASmvB,UAAU,GAAG/5B,EAAE,GAAG+9B,GAAG,GAAG7mC,MAAK0+B,EAAGz9B,QAAQ4M,GAAGA,EAAE,KAAKg5B,GAAG/9B,EAAEsC,KAAKyC,EAAE,KAAY/E,CAAC,CAClG,GAAAxI,CAAIumC,GAA8B,OAA3BnzB,GAAE,MAAMmvB,UAAU,GAAGgE,GAAG,GAAU7mC,MAAK0+B,EAAGsQ,KAAKlmC,GAAGA,EAAE,KAAK+9B,EAAE,CAClE,OAAA5lC,CAAQ4lC,EAAE/9B,GAA4B,IAAI,IAAK+E,EAAE6wB,KAApChrB,GAAE,UAAUmvB,UAAU,GAAmB7iC,MAAK6mC,EAAE9xB,KAAKjM,EAAE41B,EAAE7wB,EAAE7N,KAAK,CAC7E,GAAAO,IAAOsmC,GAAGnzB,GAAE,MAAMmvB,UAAU,GAAG,IAAI/5B,EAAE,GAAG+E,GAAE,EAAGg5B,EAAEgI,MAAKhI,GAAG7mC,MAAK0+B,EAAGz9B,QAAQy9B,IAAIA,EAAE,KAAKmI,EAAE,GAAGh5B,IAAIA,GAAG/E,EAAEsC,KAAKy7B,IAAI/9B,EAAEsC,KAAKszB,KAAK7wB,GAAG/E,EAAEsC,KAAKy7B,GAAG7mC,MAAK0+B,EAAG51B,CAAC,CAC3I,QAACuC,SAAgBrL,MAAK0+B,CAAE,CACxB,KAAC2Q,GAAO,IAAI,IAAIxI,KAAK7mC,WAAW6mC,CAAC,CACjC,OAAC7jC,GAAS,IAAI,IAAG,CAAE6jC,KAAK7mC,WAAW6mC,CAAC,GC9B7B,MAAMyI,WAAuBlsC,MACnC,WAAArD,CAAYyE,EAAS8B,GACpB7E,MAAM+C,GAENpB,MAAMkvB,kBAAkBtyB,KAAMA,KAAKD,aAEnCC,KAAKsG,KAAOA,CACd,CAEC,QAAI/B,GACH,OAAOvE,KAAKD,YAAYwE,IAC1B,CAEC,IAAKkT,OAAOmF,eACX,OAAO5c,KAAKD,YAAYwE,IAC1B,ECLO,MAAMgrC,WAAmBD,GAM/B,WAAAvvC,CAAYyE,EAAS8B,EAAMkpC,GAC1B/tC,MAAM+C,EAAS8B,GAEXkpC,IAEHxvC,KAAKyE,KAAOzE,KAAKyvC,MAAQD,EAAY/qC,KACrCzE,KAAK0vC,eAAiBF,EAAYG,QAErC,EClBA,MAAMC,GAAOn4B,OAAOmF,YAQPizB,GAAwBvB,GAEjB,iBAAXA,GACkB,mBAAlBA,EAAOW,QACW,mBAAlBX,EAAOztC,QACQ,mBAAfytC,EAAO7tC,KACW,mBAAlB6tC,EAAOc,QACQ,mBAAfd,EAAOhuC,KACQ,mBAAfguC,EAAO/tC,KACS,mBAAhB+tC,EAAOwB,MACG,oBAAjBxB,EAAOsB,IASIG,GAASzB,GAEpBA,GACkB,iBAAXA,GACuB,mBAAvBA,EAAOnB,aACS,iBAAhBmB,EAAOhoC,MACW,mBAAlBgoC,EAAOt2B,QACgB,mBAAvBs2B,EAAOvuC,aACd,gBAAgB4tC,KAAKW,EAAOsB,KCvBxBI,GAAWC,EAAUC,EAAOF,UAC5BG,GAAY14B,OAAO,kBAWV,MAAM24B,GACpB,WAAArwC,CAAYswC,GAAMvvC,KACjBA,EAAO,GACJ,IACH,IAAIwvC,EAAW,KAEF,OAATD,EAEHA,EAAO,KACGR,GAAsBQ,GAEhCA,EAAOvP,EAAO/9B,KAAKstC,EAAKpoC,YACd8nC,GAAOM,IAEPvP,EAAOuB,SAASgO,KAEhBE,EAAMC,iBAAiBH,GAEjCA,EAAOvP,EAAO/9B,KAAKstC,GACT5wB,YAAYkD,OAAO0tB,GAE7BA,EAAOvP,EAAO/9B,KAAKstC,EAAKpxB,OAAQoxB,EAAKrvB,WAAYqvB,EAAKhxB,YAC5CgxB,aAAgBH,IAEhBG,aAAgBvB,IAE1BuB,EJvBI,SAAyBx6B,EAAE46B,EAAEC,IACpC,IAAI5nC,EAAE,GAAGqf,OAAMA,OAAMsf,QAAQ,MAAO,IAAIlpB,OAAM,IAAKxV,SAAS,GAAI,KAAK8E,EAAE,GAAG8iC,EAAE,KAAK7nC,8CAKjF,OAJA+M,EAAE5U,QAAQ,CAACuY,EAAEqF,IAAc,iBAAHrF,EACvB3L,EAAEzC,KAAKulC,EAAEz0B,GAAE2C,GAAG,YAAYrF,EAAEiuB,QAAQ,sBAAuB,eAC3D55B,EAAEzC,KAAKulC,EAAEz0B,GAAE2C,GAAG,gBAAgB3C,GAAE1C,EAAEjV,KAAM,wBAAwBiV,EAAElT,MAAM,qCAAsCkT,EAAG,SAClH3L,EAAEzC,KAAK,KAAKtC,OACL,IAAI2nC,EAAE5iC,EAAE,CAACvH,KAAK,iCAAiCwC,GAAG,CIiB/C8nC,CAAeP,GACtBC,EAAWD,EAAK/pC,KAAKyD,MAAM,KAAK,IAIhCsmC,EAAOvP,EAAO/9B,KAAK+c,OAAOuwB,MAG3B,IAAIr4B,EAASq4B,EAETvP,EAAOuB,SAASgO,GACnBr4B,EAASk4B,EAAOW,SAAS9tC,KAAKstC,GACpBN,GAAOM,KACjBr4B,EAASk4B,EAAOW,SAAS9tC,KAAKstC,EAAKr4B,WAGpChY,KAAKmwC,IAAa,CACjBE,OACAr4B,SACAs4B,WACAQ,WAAW,EACX5vC,MAAO,MAERlB,KAAKc,KAAOA,EAERuvC,aAAgBH,GACnBG,EAAKlwC,GAAG,QAAS4wC,IAChB,MAAM7vC,EAAQ6vC,aAAkBzB,GAC/ByB,EACA,IAAIxB,GAAW,+CAA+CvvC,KAAK6J,QAAQknC,EAAOvsC,UAAW,SAAUusC,GACxG/wC,KAAKmwC,IAAWjvC,MAAQA,GAG5B,CAEC,QAAImvC,GACH,OAAOrwC,KAAKmwC,IAAWn4B,MACzB,CAEC,YAAIg5B,GACH,OAAOhxC,KAAKmwC,IAAWW,SACzB,CAOC,iBAAM3D,GACL,MAAMluB,OAACA,EAAM+B,WAAEA,EAAU3B,WAAEA,SAAoB4xB,GAAYjxC,MAC3D,OAAOif,EAAOV,MAAMyC,EAAYA,EAAa3B,EAC/C,CAEC,cAAM6xB,GACL,MAAMC,EAAKnxC,KAAKoxC,QAAQ3wC,IAAI,gBAE5B,GAAI0wC,EAAGE,WAAW,qCAAsC,CACvD,MAAMH,EAAW,IAAIpC,GACfwC,EAAa,IAAIpqC,sBAAsBlH,KAAK4tC,QAElD,IAAK,MAAOrpC,EAAMgM,KAAU+gC,EAC3BJ,EAASjC,OAAO1qC,EAAMgM,GAGvB,OAAO2gC,CACV,CAEE,MAAMK,WAACA,SAAoB1rC,QAAAC,UAAAqL,KAAA,WAAA,OAAAqgC,EAAA,GAC3B,OAAOD,EAAWvxC,KAAKqwC,KAAMc,EAC/B,CAOC,UAAMlE,GACL,MAAMkE,EAAMnxC,KAAKoxC,SAAWpxC,KAAKoxC,QAAQ3wC,IAAI,iBAAqBT,KAAKmwC,IAAWE,MAAQrwC,KAAKmwC,IAAWE,KAAK/pC,MAAS,GAClH86B,QAAYphC,KAAKmtC,cAEvB,OAAO,IAAIJ,GAAK,CAAC3L,GAAM,CACtB96B,KAAM6qC,GAET,CAOC,UAAMM,GACL,MAAM7D,QAAa5tC,KAAK4tC,OACxB,OAAOrkC,KAAKC,MAAMokC,EACpB,CAOC,UAAMA,GACL,MAAM3uB,QAAegyB,GAAYjxC,MACjC,OAAO,IAAI8tC,aAAcC,OAAO9uB,EAClC,CAOC,MAAAA,GACC,OAAOgyB,GAAYjxC,KACrB,EAyBAiN,eAAegkC,GAAYjwC,GAC1B,GAAIA,EAAKmvC,IAAWW,UACnB,MAAM,IAAI/6B,UAAU,0BAA0B/U,EAAK6I,OAKpD,GAFA7I,EAAKmvC,IAAWW,WAAY,EAExB9vC,EAAKmvC,IAAWjvC,MACnB,MAAMF,EAAKmvC,IAAWjvC,MAGvB,MAAMmvC,KAACA,GAAQrvC,EAGf,GAAa,OAATqvC,EACH,OAAOvP,EAAOE,MAAM,GAIrB,KAAMqP,aAAgBH,GACrB,OAAOpP,EAAOE,MAAM,GAKrB,MAAM0Q,EAAQ,GACd,IAAIC,EAAa,EAEjB,IACC,UAAW,MAAMv2B,KAASi1B,EAAM,CAC/B,GAAIrvC,EAAKF,KAAO,GAAK6wC,EAAav2B,EAAM5P,OAASxK,EAAKF,KAAM,CAC3D,MAAMI,EAAQ,IAAIquC,GAAW,mBAAmBvuC,EAAK6I,mBAAmB7I,EAAKF,OAAQ,YAErF,MADAuvC,EAAKuB,QAAQ1wC,GACPA,CACV,CAEGywC,GAAcv2B,EAAM5P,OACpBkmC,EAAMtmC,KAAKgQ,EACd,CACA,CAAG,MAAOla,GAER,MADeA,aAAiBouC,GAAiBpuC,EAAQ,IAAIquC,GAAW,+CAA+CvuC,EAAK6I,QAAQ3I,EAAMsD,UAAW,SAAUtD,EAEjK,CAEC,IAA2B,IAAvBmvC,EAAKwB,gBAAwD,IAA9BxB,EAAKyB,eAAeC,MAWtD,MAAM,IAAIxC,GAAW,4DAA4DvuC,EAAK6I,OAVtF,IACC,OAAI6nC,EAAMM,MAAMnkC,GAAkB,iBAANA,GACpBizB,EAAO/9B,KAAK2uC,EAAM1oC,KAAK,KAGxB83B,EAAOiG,OAAO2K,EAAOC,EAC/B,CAAI,MAAOzwC,GACR,MAAM,IAAIquC,GAAW,kDAAkDvuC,EAAK6I,QAAQ3I,EAAMsD,UAAW,SAAUtD,EAClH,CAIA,CA/EAkvC,GAAKj8B,UAAU8K,OAASgzB,EAAU7B,GAAKj8B,UAAU8K,OAAQ,qEAA0E,qBAGnIpU,OAAO6R,iBAAiB0zB,GAAKj8B,UAAW,CACvCk8B,KAAM,CAAC1zB,YAAY,GACnBq0B,SAAU,CAACr0B,YAAY,GACvBwwB,YAAa,CAACxwB,YAAY,GAC1BswB,KAAM,CAACtwB,YAAY,GACnB80B,KAAM,CAAC90B,YAAY,GACnBixB,KAAM,CAACjxB,YAAY,GACnB3b,KAAM,CAACP,IAAKwxC,EAAU,OACrB,yEACA,sEA4EK,MAAM5E,GAAQ,CAAC6E,EAAUhqB,KAC/B,IAAIiqB,EACAC,GACA/B,KAACA,GAAQ6B,EAAS/B,IAGtB,GAAI+B,EAASlB,SACZ,MAAM,IAAI5tC,MAAM,sCAgBjB,OAXKitC,aAAgBH,GAAwC,mBAArBG,EAAKgC,cAE5CF,EAAK,IAAIG,EAAY,CAACpqB,kBACtBkqB,EAAK,IAAIE,EAAY,CAACpqB,kBACtBmoB,EAAKkC,KAAKJ,GACV9B,EAAKkC,KAAKH,GAEVF,EAAS/B,IAAWn4B,OAASm6B,EAC7B9B,EAAO+B,GAGD/B,GAGFmC,GAA6BP,EAClC5B,GAAQA,EAAKgC,cACb,4FACA,wDAaYI,GAAqB,CAACpC,EAAMrjC,IAE3B,OAATqjC,EACI,KAIY,iBAATA,EACH,2BAIJR,GAAsBQ,GAClB,kDAIJN,GAAOM,GACHA,EAAK/pC,MAAQ,KAIjBw6B,EAAOuB,SAASgO,IAASE,EAAMC,iBAAiBH,IAAS5wB,YAAYkD,OAAO0tB,GACxE,KAGJA,aAAgBvB,GACZ,iCAAiC9hC,EAAQmjC,IAAWG,WAIxDD,GAAoC,mBAArBA,EAAKgC,YAChB,gCAAgCG,GAA2BnC,KAI/DA,aAAgBH,EACZ,KAID,2BC5UFwC,GAAwD,mBAA5B3iC,EAAK2iC,mBACtC3iC,EAAK2iC,mBACLnuC,IACC,IAAK,0BAA0BopC,KAAKppC,GAAO,CAC1C,MAAMrD,EAAQ,IAAI6U,UAAU,2CAA2CxR,MAEvE,MADAsG,OAAOiJ,eAAe5S,EAAO,OAAQ,CAACqP,MAAO,2BACvCrP,CACT,GAIMyxC,GAA0D,mBAA7B5iC,EAAK4iC,oBACvC5iC,EAAK4iC,oBACL,CAACpuC,EAAMgM,KACN,GAAI,kCAAkCo9B,KAAKp9B,GAAQ,CAClD,MAAMrP,EAAQ,IAAI6U,UAAU,yCAAyCxR,OAErE,MADAsG,OAAOiJ,eAAe5S,EAAO,OAAQ,CAACqP,MAAO,qBACvCrP,CACT,GAee,MAAM0xC,WAAgB1rC,gBAOpC,WAAAnH,CAAY4pB,GAGX,IAAIvkB,EAAS,GACb,GAAIukB,aAAgBipB,GAAS,CAC5B,MAAMC,EAAMlpB,EAAKkpB,MACjB,IAAK,MAAOtuC,EAAMvB,KAAW6H,OAAOQ,QAAQwnC,GAC3CztC,EAAOgG,QAAQpI,EAAO6F,IAAI0H,GAAS,CAAChM,EAAMgM,IAE9C,MAAS,GAAY,MAARoZ,OAEJ,IAAoB,iBAATA,GAAsB4mB,EAAMuC,iBAAiBnpB,GA+B9D,MAAM,IAAI5T,UAAU,wIA/BiD,CACrE,MAAM5I,EAASwc,EAAKlS,OAAOsG,UAE3B,GAAc,MAAV5Q,EAEH/H,EAAOgG,QAAQP,OAAOQ,QAAQse,QACxB,CACN,GAAsB,mBAAXxc,EACV,MAAM,IAAI4I,UAAU,iCAKrB3Q,EAAS,IAAIukB,GACX9gB,IAAIsY,IACJ,GACiB,iBAATA,GAAqBovB,EAAMuC,iBAAiB3xB,GAEnD,MAAM,IAAIpL,UAAU,+CAGrB,MAAO,IAAIoL,KACTtY,IAAIsY,IACN,GAAoB,IAAhBA,EAAK3V,OACR,MAAM,IAAIuK,UAAU,+CAGrB,MAAO,IAAIoL,IAEjB,CACA,CAEA,CAgBE,OAbA/b,EACCA,EAAOoG,OAAS,EACfpG,EAAOyD,IAAI,EAAEtE,EAAMgM,MAClBmiC,GAAmBnuC,GACnBouC,GAAoBpuC,EAAMub,OAAOvP,IAC1B,CAACuP,OAAOvb,GAAM0+B,cAAenjB,OAAOvP,WAE5C9M,EAEFhC,MAAM2D,GAIC,IAAI2tC,MAAM/yC,KAAM,CACtB,GAAAS,CAAIknC,EAAQgJ,EAAGhxB,GACd,OAAQgxB,GACP,IAAK,SACL,IAAK,MACJ,MAAO,CAACpsC,EAAMgM,KACbmiC,GAAmBnuC,GACnBouC,GAAoBpuC,EAAMub,OAAOvP,IAC1BrJ,gBAAgBiN,UAAUw8B,GAAG57B,KACnC4yB,EACA7nB,OAAOvb,GAAM0+B,cACbnjB,OAAOvP,KAIV,IAAK,SACL,IAAK,MACL,IAAK,SACJ,OAAOhM,IACNmuC,GAAmBnuC,GACZ2C,gBAAgBiN,UAAUw8B,GAAG57B,KACnC4yB,EACA7nB,OAAOvb,GAAM0+B,gBAIhB,IAAK,OACJ,MAAO,KACN0E,EAAOmI,OACA,IAAItvC,IAAI0G,gBAAgBiN,UAAUk7B,KAAKt6B,KAAK4yB,IAAS0H,QAG9D,QACC,OAAO2D,QAAQvyC,IAAIknC,EAAQgJ,EAAGhxB,GAEpC,GAGA,CAEC,IAAKlI,OAAOmF,eACX,OAAO5c,KAAKD,YAAYwE,IAC1B,CAEC,QAAA0D,GACC,OAAO4C,OAAOsJ,UAAUlM,SAAS8M,KAAK/U,KACxC,CAEC,GAAAS,CAAI8D,GACH,MAAMvB,EAAShD,KAAKovC,OAAO7qC,GAC3B,GAAsB,IAAlBvB,EAAOwI,OACV,OAAO,KAGR,IAAI+E,EAAQvN,EAAOgG,KAAK,MAKxB,MAJI,sBAAsB2kC,KAAKppC,KAC9BgM,EAAQA,EAAM0yB,eAGR1yB,CACT,CAEC,OAAAtP,CAAQuU,EAAUy9B,OAAUxvC,GAC3B,IAAK,MAAMc,KAAQvE,KAAKqvC,OACvB2D,QAAQ/8B,MAAMT,EAAUy9B,EAAS,CAACjzC,KAAKS,IAAI8D,GAAOA,EAAMvE,MAE3D,CAEC,OAAEgD,GACD,IAAK,MAAMuB,KAAQvE,KAAKqvC,aACjBrvC,KAAKS,IAAI8D,EAElB,CAKC,QAAE8G,GACD,IAAK,MAAM9G,KAAQvE,KAAKqvC,YACjB,CAAC9qC,EAAMvE,KAAKS,IAAI8D,GAEzB,CAEC,CAACkT,OAAOsG,YACP,OAAO/d,KAAKqL,SACd,CAOC,GAAAwnC,GACC,MAAO,IAAI7yC,KAAKqvC,QAAQ6D,OAAO,CAAC9tC,EAAQkL,KACvClL,EAAOkL,GAAOtQ,KAAKovC,OAAO9+B,GACnBlL,GACL,GACL,CAKC,CAACqS,OAAO4I,IAAI,iCACX,MAAO,IAAIrgB,KAAKqvC,QAAQ6D,OAAO,CAAC9tC,EAAQkL,KACvC,MAAMtN,EAAShD,KAAKovC,OAAO9+B,GAS3B,OALClL,EAAOkL,GADI,SAARA,EACWtN,EAAO,GAEPA,EAAOwI,OAAS,EAAIxI,EAASA,EAAO,GAG5CoC,GACL,GACL,EAOAyF,OAAO6R,iBACNk2B,GAAQz+B,UACR,CAAC,MAAO,UAAW,UAAW,UAAU++B,OAAO,CAAC9tC,EAAQ+tC,KACvD/tC,EAAO+tC,GAAY,CAACx2B,YAAY,GACzBvX,GACL,CAAA,IC5OJ,MAAMguC,GAAiB,IAAI5yC,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAQvC6yC,GAAa5uC,GAClB2uC,GAAe9yC,IAAImE,GCCrB0rC,GAAY14B,OAAO,sBAWV,MAAM67B,WAAiBlD,GACrC,WAAArwC,CAAYswC,EAAO,KAAMx/B,EAAU,CAAA,GAClCpP,MAAM4uC,EAAMx/B,GAGZ,MAAM1B,EAA2B,MAAlB0B,EAAQ1B,OAAiB0B,EAAQ1B,OAAS,IAEnDiiC,EAAU,IAAIwB,GAAQ/hC,EAAQugC,SAEpC,GAAa,OAATf,IAAkBe,EAAQ9wC,IAAI,gBAAiB,CAClD,MAAMizC,EAAcd,GAAmBpC,EAAMrwC,MACzCuzC,GACHnC,EAAQnC,OAAO,eAAgBsE,EAEnC,CAEEvzC,KAAKmwC,IAAa,CACjB7pC,KAAM,UACNuD,IAAKgH,EAAQhH,IACbsF,SACAqkC,WAAY3iC,EAAQ2iC,YAAc,GAClCpC,UACAqC,QAAS5iC,EAAQ4iC,QACjBvrB,cAAerX,EAAQqX,cAE1B,CAEC,QAAI5hB,GACH,OAAOtG,KAAKmwC,IAAW7pC,IACzB,CAEC,OAAIuD,GACH,OAAO7J,KAAKmwC,IAAWtmC,KAAO,EAChC,CAEC,UAAIsF,GACH,OAAOnP,KAAKmwC,IAAWhhC,MACzB,CAKC,MAAIukC,GACH,OAAO1zC,KAAKmwC,IAAWhhC,QAAU,KAAOnP,KAAKmwC,IAAWhhC,OAAS,GACnE,CAEC,cAAIwkC,GACH,OAAO3zC,KAAKmwC,IAAWsD,QAAU,CACnC,CAEC,cAAID,GACH,OAAOxzC,KAAKmwC,IAAWqD,UACzB,CAEC,WAAIpC,GACH,OAAOpxC,KAAKmwC,IAAWiB,OACzB,CAEC,iBAAIlpB,GACH,OAAOloB,KAAKmwC,IAAWjoB,aACzB,CAOC,KAAAmlB,GACC,OAAO,IAAIiG,GAASjG,GAAMrtC,KAAMA,KAAKkoB,eAAgB,CACpD5hB,KAAMtG,KAAKsG,KACXuD,IAAK7J,KAAK6J,IACVsF,OAAQnP,KAAKmP,OACbqkC,WAAYxzC,KAAKwzC,WACjBpC,QAASpxC,KAAKoxC,QACdsC,GAAI1zC,KAAK0zC,GACTC,WAAY3zC,KAAK2zC,WACjB7yC,KAAMd,KAAKc,KACXonB,cAAeloB,KAAKkoB,eAEvB,CAOC,eAAO0rB,CAAS/pC,EAAKsF,EAAS,KAC7B,IAAKkkC,GAAWlkC,GACf,MAAM,IAAIqS,WAAW,mEAGtB,OAAO,IAAI8xB,GAAS,KAAM,CACzBlC,QAAS,CACR/qC,SAAU,IAAIwtC,IAAIhqC,GAAK5B,YAExBkH,UAEH,CAEC,YAAOjO,GACN,MAAM4yC,EAAW,IAAIR,GAAS,KAAM,CAACnkC,OAAQ,EAAGqkC,WAAY,KAE5D,OADAM,EAAS3D,IAAW7pC,KAAO,QACpBwtC,CACT,CAEC,WAAOrC,CAAKzwC,OAAOyC,EAAWkmB,EAAO,CAAA,GACpC,MAAM0mB,EAAO9mC,KAAKI,UAAU3I,GAE5B,QAAayC,IAAT4sC,EACH,MAAM,IAAIt6B,UAAU,iCAGrB,MAAMq7B,EAAU,IAAIwB,GAAQjpB,GAAQA,EAAKynB,SAMzC,OAJKA,EAAQ9wC,IAAI,iBAChB8wC,EAAQ7wC,IAAI,eAAgB,oBAGtB,IAAI+yC,GAASjD,EAAM,IACtB1mB,EACHynB,WAEH,CAEC,IAAK35B,OAAOmF,eACX,MAAO,UACT,EAGA/R,OAAO6R,iBAAiB42B,GAASn/B,UAAW,CAC3C7N,KAAM,CAACqW,YAAY,GACnB9S,IAAK,CAAC8S,YAAY,GAClBxN,OAAQ,CAACwN,YAAY,GACrB+2B,GAAI,CAAC/2B,YAAY,GACjBg3B,WAAY,CAACh3B,YAAY,GACzB62B,WAAY,CAAC72B,YAAY,GACzBy0B,QAAS,CAACz0B,YAAY,GACtB0wB,MAAO,CAAC1wB,YAAY,KC7Id,SAASo3B,GAA0BlqC,EAAKmqC,GAAa,GAE3D,OAAW,MAAPnqC,EACI,eAGRA,EAAM,IAAIgqC,IAAIhqC,GAGV,uBAAuB8jC,KAAK9jC,EAAIoqC,UAC5B,eAIRpqC,EAAIqqC,SAAW,GAIfrqC,EAAIsqC,SAAW,GAIftqC,EAAImE,KAAO,GAGPgmC,IAGHnqC,EAAIuqC,SAAW,GAIfvqC,EAAIwqC,OAAS,IAIPxqC,GACR,CAKO,MAAMyqC,GAAiB,IAAI9zC,IAAI,CACrC,GACA,cACA,6BACA,cACA,SACA,gBACA,2BACA,kCACA,eA6EM,SAAS+zC,GAA4B1qC,GAE3C,QAAI,yBAAyB8jC,KAAK9jC,KAKb,UAAjBA,EAAIoqC,aAOJ,uBAAuBtG,KAAK9jC,EAAIoqC,WAjE9B,SAAwCpqC,GAQ9C,GAAI,gBAAgB8jC,KAAK9jC,EAAIoqC,UAC5B,OAAO,EAIR,MAAMO,EAAS3qC,EAAI4qC,KAAKhN,QAAQ,cAAe,IACzCiN,EAAgBC,EAAKH,GAE3B,QAAsB,IAAlBE,IAAuB,SAAS/G,KAAK6G,OAInB,IAAlBE,IAAuB,mCAAmC/G,KAAK6G,KAOlD,cAAb3qC,EAAI4qC,OAAwB5qC,EAAI4qC,KAAKG,SAAS,eAK7B,UAAjB/qC,EAAIoqC,QAYT,CA0BQY,CAA+BhrC,IACvC,CCnJA,MAAMsmC,GAAY14B,OAAO,qBAQnBq9B,GAAYxG,GAEE,iBAAXA,GACsB,iBAAtBA,EAAO6B,IAIV4E,GAAgB9C,EAAU,OAC/B,+DACA,kEAWc,MAAM+C,WAAgB5E,GACpC,WAAArwC,CAAYk1C,EAAOtrB,EAAO,IACzB,IAAIurB,EAUJ,GAPIJ,GAAUG,GACbC,EAAY,IAAIrB,IAAIoB,EAAMprC,MAE1BqrC,EAAY,IAAIrB,IAAIoB,GACpBA,EAAQ,CAAA,GAGkB,KAAvBC,EAAUhB,UAA0C,KAAvBgB,EAAUf,SAC1C,MAAM,IAAIp+B,UAAU,GAAGm/B,0CAGxB,IAAI/nC,EAASwc,EAAKxc,QAAU8nC,EAAM9nC,QAAU,MAU5C,GATI,wCAAwCwgC,KAAKxgC,KAChDA,EAASA,EAAOgoC,gBAGZL,GAAUnrB,IAAS,SAAUA,GACjCorB,MAIiB,MAAbprB,EAAK0mB,MAAiByE,GAAUG,IAAyB,OAAfA,EAAM5E,QACxC,QAAXljC,GAA+B,SAAXA,GACrB,MAAM,IAAI4I,UAAU,iDAGrB,MAAMq/B,EAAYzrB,EAAK0mB,KACtB1mB,EAAK0mB,KACJyE,GAAUG,IAAyB,OAAfA,EAAM5E,KAC1BhD,GAAM4H,GACN,KAEFxzC,MAAM2zC,EAAW,CAChBt0C,KAAM6oB,EAAK7oB,MAAQm0C,EAAMn0C,MAAQ,IAGlC,MAAMswC,EAAU,IAAIwB,GAAQjpB,EAAKynB,SAAW6D,EAAM7D,SAAW,IAE7D,GAAkB,OAAdgE,IAAuBhE,EAAQ9wC,IAAI,gBAAiB,CACvD,MAAMizC,EAAcd,GAAmB2C,EAAWp1C,MAC9CuzC,GACHnC,EAAQ7wC,IAAI,eAAgBgzC,EAEhC,CAEE,IAAI5iB,EAASmkB,GAAUG,GACtBA,EAAMtkB,OACN,KAMD,GALI,WAAYhH,IACfgH,EAAShH,EAAKgH,QAID,MAAVA,INpDc,iBAFS2d,EMsDU3d,INnDnB,gBAAjB2d,EAAOsB,KACU,gBAAjBtB,EAAOsB,KMmDP,MAAM,IAAI75B,UAAU,kENvDMu4B,MM4D3B,IAAI+G,EAA4B,MAAjB1rB,EAAK0rB,SAAmBJ,EAAMI,SAAW1rB,EAAK0rB,SAC7D,GAAiB,KAAbA,EAEHA,EAAW,mBACL,GAAIA,EAAU,CAEpB,MAAMC,EAAiB,IAAIzB,IAAIwB,GAE/BA,EAAW,wBAAwB1H,KAAK2H,GAAkB,SAAWA,CACxE,MACGD,OAAW5xC,EAGZzD,KAAKmwC,IAAa,CACjBhjC,SACAymC,SAAUjqB,EAAKiqB,UAAYqB,EAAMrB,UAAY,SAC7CxC,UACA8D,YACAvkB,SACA0kB,YAIDr1C,KAAKu1C,YAAyB9xC,IAAhBkmB,EAAK4rB,YAAyC9xC,IAAjBwxC,EAAMM,OAAuB,GAAKN,EAAMM,OAAU5rB,EAAK4rB,OAClGv1C,KAAKw1C,cAA6B/xC,IAAlBkmB,EAAK6rB,cAA6C/xC,IAAnBwxC,EAAMO,UAAgCP,EAAMO,SAAY7rB,EAAK6rB,SAC5Gx1C,KAAKyzC,QAAU9pB,EAAK8pB,SAAWwB,EAAMxB,SAAW,EAChDzzC,KAAKy1C,MAAQ9rB,EAAK8rB,OAASR,EAAMQ,MACjCz1C,KAAKkoB,cAAgByB,EAAKzB,eAAiB+sB,EAAM/sB,eAAiB,MAClEloB,KAAK01C,mBAAqB/rB,EAAK+rB,oBAAsBT,EAAMS,qBAAsB,EAIjF11C,KAAK21C,eAAiBhsB,EAAKgsB,gBAAkBV,EAAMU,gBAAkB,EACvE,CAGC,UAAIxoC,GACH,OAAOnN,KAAKmwC,IAAWhjC,MACzB,CAGC,OAAItD,GACH,OAAO+rC,EAAU51C,KAAKmwC,IAAW+E,UACnC,CAGC,WAAI9D,GACH,OAAOpxC,KAAKmwC,IAAWiB,OACzB,CAEC,YAAIwC,GACH,OAAO5zC,KAAKmwC,IAAWyD,QACzB,CAGC,UAAIjjB,GACH,OAAO3wB,KAAKmwC,IAAWxf,MACzB,CAGC,YAAI0kB,GACH,MAAiC,gBAA7Br1C,KAAKmwC,IAAWkF,SACZ,GAGyB,WAA7Br1C,KAAKmwC,IAAWkF,SACZ,eAGJr1C,KAAKmwC,IAAWkF,SACZr1C,KAAKmwC,IAAWkF,SAASptC,gBADjC,CAKF,CAEC,kBAAI0tC,GACH,OAAO31C,KAAKmwC,IAAWwF,cACzB,CAEC,kBAAIA,CAAeA,GAClB31C,KAAKmwC,IAAWwF,eD9GX,SAAgCA,GACtC,IAAKrB,GAAeh0C,IAAIq1C,GACvB,MAAM,IAAI5/B,UAAU,2BAA2B4/B,KAGhD,OAAOA,CACR,CCwGmCE,CAAuBF,EAC1D,CAOC,KAAAtI,GACC,OAAO,IAAI2H,GAAQh1C,KACrB,CAEC,IAAKyX,OAAOmF,eACX,MAAO,SACT,EAGA/R,OAAO6R,iBAAiBs4B,GAAQ7gC,UAAW,CAC1ChH,OAAQ,CAACwP,YAAY,GACrB9S,IAAK,CAAC8S,YAAY,GAClBy0B,QAAS,CAACz0B,YAAY,GACtBi3B,SAAU,CAACj3B,YAAY,GACvB0wB,MAAO,CAAC1wB,YAAY,GACpBgU,OAAQ,CAAChU,YAAY,GACrB04B,SAAU,CAAC14B,YAAY,GACvBg5B,eAAgB,CAACh5B,YAAY,KASvB,MAAMm5B,GAAwB9oC,IACpC,MAAMkoC,UAACA,GAAaloC,EAAQmjC,IACtBiB,EAAU,IAAIwB,GAAQ5lC,EAAQmjC,IAAWiB,SAG1CA,EAAQ9wC,IAAI,WAChB8wC,EAAQ7wC,IAAI,SAAU,OAIvB,IAAIw1C,EAAqB,KAKzB,GAJqB,OAAjB/oC,EAAQqjC,MAAiB,gBAAgB1C,KAAK3gC,EAAQG,UACzD4oC,EAAqB,KAGD,OAAjB/oC,EAAQqjC,KAAe,CAC1B,MAAM2F,ELiHqBhpC,KAC5B,MAAMqjC,KAACA,GAAQrjC,EAAQmjC,IAGvB,OAAa,OAATE,EACI,EAIJN,GAAOM,GACHA,EAAKvvC,KAITggC,EAAOuB,SAASgO,GACZA,EAAK7kC,OAIT6kC,GAAsC,mBAAvBA,EAAK4F,eAChB5F,EAAK6F,gBAAkB7F,EAAK6F,iBAAmB7F,EAAK4F,gBAIrD,MKzIaE,CAAcnpC,GAEP,iBAAfgpC,GAA4B58B,OAAO+E,MAAM63B,KACnDD,EAAqBj2B,OAAOk2B,GAE/B,CAEKD,GACH3E,EAAQ7wC,IAAI,iBAAkBw1C,GAMA,KAA3B/oC,EAAQ2oC,iBACX3oC,EAAQ2oC,eDtL6B,mCC4LlC3oC,EAAQqoC,UAAiC,gBAArBroC,EAAQqoC,SAC/BroC,EAAQmjC,IAAWkF,SDxEd,SAAmCroC,GAASopC,oBAACA,EAAmBC,uBAAEA,GAA0B,CAAA,GAMlG,GAAyB,gBAArBrpC,EAAQqoC,UAAyD,KAA3BroC,EAAQ2oC,eACjD,OAAO,KAIR,MAAMW,EAAStpC,EAAQ2oC,eAMvB,GAAyB,iBAArB3oC,EAAQqoC,SACX,MAAO,cAIR,MAAMkB,EAAiBvpC,EAAQqoC,SAG/B,IAAImB,EAAczC,GAA0BwC,GAIxCE,EAAiB1C,GAA0BwC,GAAgB,GAI3DC,EAAYvuC,WAAWuD,OAAS,OACnCgrC,EAAcC,GAOXL,IACHI,EAAcJ,EAAoBI,IAG/BH,IACHI,EAAiBJ,EAAuBI,IAIzC,MAAMC,EAAa,IAAI7C,IAAI7mC,EAAQnD,KAEnC,OAAQysC,GACP,IAAK,cACJ,MAAO,cAER,IAAK,SACJ,OAAOG,EAER,IAAK,aACJ,OAAOD,EAER,IAAK,gBAGJ,OAAIjC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDD,EAAexuC,WAEvB,IAAK,kCAGJ,OAAIuuC,EAAYpwC,SAAWswC,EAAWtwC,OAC9BowC,EAKJjC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDD,EAER,IAAK,cAGJ,OAAID,EAAYpwC,SAAWswC,EAAWtwC,OAC9BowC,EAID,cAER,IAAK,2BAGJ,OAAIA,EAAYpwC,SAAWswC,EAAWtwC,OAC9BowC,EAIDC,EAER,IAAK,6BAGJ,OAAIlC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDF,EAER,QACC,MAAM,IAAIzgC,UAAU,2BAA2BugC,KAElD,CCjDgCK,CAA0B3pC,GAExDA,EAAQmjC,IAAWkF,SAAW,cAM3BroC,EAAQmjC,IAAWkF,oBAAoBxB,KAC1CzC,EAAQ7wC,IAAI,UAAWyM,EAAQqoC,UAI3BjE,EAAQ9wC,IAAI,eAChB8wC,EAAQ7wC,IAAI,aAAc,cAIvByM,EAAQwoC,WAAapE,EAAQ9wC,IAAI,oBACpC8wC,EAAQ7wC,IAAI,kBAAmB,qBAGhC,IAAIk1C,MAACA,GAASzoC,EACO,mBAAVyoC,IACVA,EAAQA,EAAMP,IAMf,MAAMb,ECrSkBa,KACxB,GAAIA,EAAUb,OACb,OAAOa,EAAUb,OAGlB,MAAMuC,EAAa1B,EAAU2B,KAAKrrC,OAAS,EACrCwC,EAAOknC,EAAUlnC,OAAwC,MAA/BknC,EAAU2B,KAAKD,GAAsB,IAAM,IAC3E,MAAoD,MAA7C1B,EAAU2B,KAAKD,EAAa5oC,EAAKxC,QAAkB,IAAM,ID8RjDsrC,CAAU5B,GAczB,MAAO,CAENA,YACArkC,QAbe,CAEfkmC,KAAM7B,EAAUd,SAAWC,EAE3BlnC,OAAQH,EAAQG,OAChBikC,QAASA,EAAQ35B,OAAO4I,IAAI,iCAC5Bq1B,mBAAoB1oC,EAAQ0oC,mBAC5BD,WE3SK,MAAMuB,WAAmB1H,GAC/B,WAAAvvC,CAAYyE,EAAS8B,EAAO,WAC3B7E,MAAM+C,EAAS8B,EACjB;gICNA,SAAKwrB,WAAWM,aACd,IACE,MAAM6kB,eAAEA,GAAmBjmC,QAAQ,kBACnCkmC,GAAO,IAAID,GAAiBE,MAC5BC,EAAK,IAAI33B,YACTy3B,EAAKjtC,YAAYmtC,EAAI,CAACA,EAAIA,IAC1B,MAAOC,GACkB,iBAAzBA,EAAIt3C,YAAYwE,OACdutB,WAAWM,aAAeilB,EAAIt3C,YAEpC,CAGAu3C,GAAiBxlB,WAAWM,gBCR5B,MAAMmlB,KAAEA,IAASC,EC+BXC,GAAmB,IAAIj3C,IAAI,CAAC,QAAS,QAAS,kJASrCyM,eAAe2D,EAAM/G,EAAK6tC,GACxC,OAAO,IAAI7xC,QAAQ,CAACC,EAASC,KAE5B,MAAMiH,EAAU,IAAIgoC,GAAQnrC,EAAK6tC,IAC3BxC,UAACA,EAASrkC,QAAEA,GAAWilC,GAAsB9oC,GACnD,IAAKyqC,GAAiBn3C,IAAI40C,EAAUjB,UACnC,MAAM,IAAIl+B,UAAU,0BAA0BlM,kBAAoBqrC,EAAUjB,SAASxM,QAAQ,KAAM,0BAGpG,GAA2B,UAAvByN,EAAUjB,SAAsB,CACnC,MAAMjzC,EClDF,SAAyB22C,GAC5B,IAAK,UAAUhK,KAAKgK,GAChB,MAAM,IAAI5hC,UAAU,oEAKxB,MAAM6hC,GAFND,EAAMA,EAAIlQ,QAAQ,SAAU,KAELlH,QAAQ,KAC/B,IAAmB,IAAfqX,GAAqBA,GAAc,EACnC,MAAM,IAAI7hC,UAAU,uBAGxB,MAAM8hC,EAAOF,EAAIvvC,UAAU,EAAGwvC,GAAY7tC,MAAM,KAChD,IAAI+tC,EAAU,GACV9Y,GAAS,EACb,MAAM14B,EAAOuxC,EAAK,IAAM,aACxB,IAAIE,EAAWzxC,EACf,IAAK,IAAI2H,EAAI,EAAGA,EAAI4pC,EAAKrsC,OAAQyC,IACb,WAAZ4pC,EAAK5pC,GACL+wB,GAAS,EAEJ6Y,EAAK5pC,KACV8pC,GAAY,IAAIF,EAAK5pC,KACe,IAAhC4pC,EAAK5pC,GAAGsyB,QAAQ,cAChBuX,EAAUD,EAAK5pC,GAAG7F,UAAU,KAKnCyvC,EAAK,IAAOC,EAAQtsC,SACrBusC,GAAY,oBACZD,EAAU,YAGd,MAAMrW,EAAWzC,EAAS,SAAW,QAC/Bh+B,EAAOg3C,SAASL,EAAIvvC,UAAUwvC,EAAa,IAC3C34B,EAAS6hB,OAAO/9B,KAAK/B,EAAMygC,GAMjC,OAJAxiB,EAAO3Y,KAAOA,EACd2Y,EAAO84B,SAAWA,EAElB94B,EAAO64B,QAAUA,EACV74B,CACX,CDOgBg5B,CAAgBjrC,EAAQnD,KAC/BiqC,EAAW,IAAIR,GAAStyC,EAAM,CAACowC,QAAS,CAAC,eAAgBpwC,EAAK+2C,YAEpE,YADAjyC,EAAQguC,EAEX,CAGE,MAAMoE,GAA+B,WAAvBhD,EAAUjB,SAAwBkE,EAAQpoC,GAAM/C,SACxD2jB,OAACA,GAAU3jB,EACjB,IAAI8mC,EAAW,KAEf,MAAM/pB,EAAQ,KACb,MAAM7oB,EAAQ,IAAI81C,GAAW,8BAC7BjxC,EAAO7E,GACH8L,EAAQqjC,MAAQrjC,EAAQqjC,gBAAgBH,EAAOW,UAClD7jC,EAAQqjC,KAAKuB,QAAQ1wC,GAGjB4yC,GAAaA,EAASzD,MAI3ByD,EAASzD,KAAKtvC,KAAK,QAASG,IAG7B,GAAIyvB,GAAUA,EAAOnG,QAEpB,YADAT,IAID,MAAMquB,EAAmB,KACxBruB,IACAkK,KAIKokB,EAAWH,EAAKhD,EAAUjtC,WAAY4I,GAExC8f,GACHA,EAAOjqB,iBAAiB,QAAS0xC,GAGlC,MAAMnkB,EAAW,KAChBokB,EAAStuB,QACL4G,GACHA,EAAOpqB,oBAAoB,QAAS6xC,IAItCC,EAASl4C,GAAG,QAASe,IACpB6E,EAAO,IAAIwpC,GAAW,cAAcviC,EAAQnD,uBAAuB3I,EAAMsD,UAAW,SAAUtD,IAC9F+yB,MAyQH,SAA6CjnB,EAASsrC,GACrD,MAAMC,EAAazX,EAAO/9B,KAAK,aAE/B,IAEIy1C,EAFAC,GAAoB,EACpBC,GAA0B,EAG9B1rC,EAAQ7M,GAAG,WAAY2zC,IACtB,MAAM1C,QAACA,GAAW0C,EAClB2E,EAAqD,YAAjCrH,EAAQ,uBAAuCA,EAAQ,oBAG5EpkC,EAAQ7M,GAAG,SAAUw4C,IACpB,MAAMC,EAAgB,KACrB,GAAIH,IAAsBC,EAAyB,CAClD,MAAMx3C,EAAQ,IAAIkC,MAAM,mBACxBlC,EAAMuD,KAAO,6BACb6zC,EAAcp3C,EAClB,GAGQ23C,EAASzX,IACdsX,EAAwE,IAA9C5X,EAAO8F,QAAQxF,EAAI7iB,UAAWg6B,IAGnDG,GAA2BF,IAC/BE,EACqE,IAApE5X,EAAO8F,QAAQ4R,EAAcj6B,OAAM,GAAKg6B,EAAWh6B,MAAM,EAAG,KACL,IAAvDuiB,EAAO8F,QAAQxF,EAAI7iB,OAAM,GAAKg6B,EAAWh6B,MAAM,KAIjDi6B,EAAgBpX,GAGjBuX,EAAOG,gBAAgB,QAASF,GAChCD,EAAOx4C,GAAG,OAAQ04C,GAElB7rC,EAAQ7M,GAAG,QAAS,KACnBw4C,EAAOrrC,eAAe,QAASsrC,GAC/BD,EAAOrrC,eAAe,OAAQurC,MAGjC,CAjTEE,CAAoCV,EAAUn3C,IACzC4yC,GAAYA,EAASzD,MACxByD,EAASzD,KAAKuB,QAAQ1wC,KAKpBwQ,QAAQ4B,QAAU,OAGrB+kC,EAASl4C,GAAG,SAAUw+B,IACrB,IAAIqa,EACJra,EAAEma,gBAAgB,MAAO,KACxBE,EAAuBra,EAAEsa,eAE1Bta,EAAEma,gBAAgB,QAASI,IAE1B,GAAIpF,GAAYkF,EAAuBra,EAAEsa,eAAiBC,EAAU,CACnE,MAAMh4C,EAAQ,IAAIkC,MAAM,mBACxBlC,EAAMuD,KAAO,6BACbqvC,EAASzD,KAAKtvC,KAAK,QAASG,EAClC,MAKEm3C,EAASl4C,GAAG,WAAYg5C,IACvBd,EAASe,WAAW,GACpB,MAAMhI,ETyGF,SAAwBA,EAAU,IACxC,OAAO,IAAIwB,GACVxB,EAEE8B,OAAO,CAAC9tC,EAAQmL,EAAOa,EAAOX,KAC1BW,EAAQ,GAAM,GACjBhM,EAAOgG,KAAKqF,EAAM8N,MAAMnN,EAAOA,EAAQ,IAGjChM,GACL,IACF8pC,OAAO,EAAE3qC,EAAMgM,MACf,IAGC,OAFAmiC,GAAmBnuC,GACnBouC,GAAoBpuC,EAAMub,OAAOvP,KAC1B,CACZ,CAAM,MACD,OAAO,CACZ,IAIA,CS/HmB8oC,CAAeF,EAAUG,YAGzC,GAAIjG,GAAW8F,EAAUI,YAAa,CAErC,MAAMlzC,EAAW+qC,EAAQ3wC,IAAI,YAG7B,IAAI+4C,EAAc,KAClB,IACCA,EAA2B,OAAbnzC,EAAoB,KAAO,IAAIwtC,IAAIxtC,EAAU2G,EAAQnD,IACxE,CAAM,MAID,GAAyB,WAArBmD,EAAQ4mC,SAGX,OAFA7tC,EAAO,IAAIwpC,GAAW,wDAAwDlpC,IAAY,0BAC1F4tB,GAGN,CAGI,OAAQjnB,EAAQ4mC,UACf,IAAK,QAGJ,OAFA7tC,EAAO,IAAIwpC,GAAW,0EAA0EviC,EAAQnD,MAAO,qBAC/GoqB,IAED,IAAK,SAEJ,MACD,IAAK,SAAU,CAEd,GAAoB,OAAhBulB,EACH,MAID,GAAIxsC,EAAQymC,SAAWzmC,EAAQuoC,OAG9B,OAFAxvC,EAAO,IAAIwpC,GAAW,gCAAgCviC,EAAQnD,MAAO,sBACrEoqB,IAMD,MAAMwlB,EAAiB,CACtBrI,QAAS,IAAIwB,GAAQ5lC,EAAQokC,SAC7BmE,OAAQvoC,EAAQuoC,OAChB9B,QAASzmC,EAAQymC,QAAU,EAC3BgC,MAAOzoC,EAAQyoC,MACfD,SAAUxoC,EAAQwoC,SAClBroC,OAAQH,EAAQG,OAChBkjC,KAAMhD,GAAMrgC,GACZ2jB,OAAQ3jB,EAAQ2jB,OAChB7vB,KAAMkM,EAAQlM,KACdu0C,SAAUroC,EAAQqoC,SAClBM,eAAgB3oC,EAAQ2oC,gBAYzB,IX7I6B,EAACvc,EAAatP,KAChD,MAAM4vB,EAAO,IAAI7F,IAAI/pB,GAAU6vB,SACzBl7B,EAAO,IAAIo1B,IAAIza,GAAaugB,SAElC,OAAOD,IAASj7B,GAAQi7B,EAAK9E,SAAS,IAAIn2B,MWyIhCm7B,CAAoB5sC,EAAQnD,IAAK2vC,KX/HbpgB,EW+H6CpsB,EAAQnD,IX9HtE,IAAIgqC,IW8HuE2F,GX9HzDvF,WAClB,IAAIJ,IAAIza,GAAa6a,UW8H5B,IAAK,MAAM1vC,IAAQ,CAAC,gBAAiB,mBAAoB,SAAU,WAClEk1C,EAAerI,QAAQvwC,OAAO0D,GAKhC,GAA6B,MAAzB40C,EAAUI,YAAsBvsC,EAAQqjC,MAAQqH,EAASrH,gBAAgBH,EAAOW,SAGnF,OAFA9qC,EAAO,IAAIwpC,GAAW,2DAA4D,8BAClFtb,IAK4B,MAAzBklB,EAAUI,aAAiD,MAAzBJ,EAAUI,YAA+C,MAAzBJ,EAAUI,YAA0C,SAAnBvsC,EAAQG,UAC9GssC,EAAetsC,OAAS,MACxBssC,EAAepJ,UAAO5sC,EACtBg2C,EAAerI,QAAQvwC,OAAO,mBAI/B,MAAMg5C,EN0FL,SAAuCzI,GAG7C,MAAM0I,GAAgB1I,EAAQ3wC,IAAI,oBAAsB,IAAIsJ,MAAM,UAGlE,IAAIusC,EAAS,GAMb,IAAK,MAAMhxC,KAASw0C,EACfx0C,GAASgvC,GAAeh0C,IAAIgF,KAC/BgxC,EAAShxC,GAKX,OAAOgxC,CACR,CM9GqCyD,CAA8B3I,GAQ7D,OAPIyI,IACHJ,EAAe9D,eAAiBkE,GAIjC/zC,EAAQ8K,EAAM,IAAIokC,GAAQwE,EAAaC,UACvCxlB,GAEN,CAEK,QACC,OAAOluB,EAAO,IAAIgQ,UAAU,oBAAoB/I,EAAQ4mC,sDAE9D,CXlK8B,IAACxa,EWqKxBzI,GACHwoB,EAAUa,KAAK,MAAO,KACrBrpB,EAAOpqB,oBAAoB,QAAS6xC,KAItC,IAAI/H,EAAO4J,EAAKd,EAAW,IAAI7G,EAAepxC,IACzCA,GACH6E,EAAO7E,KAKLwQ,QAAQ4B,QAAU,UACrB6lC,EAAUh5C,GAAG,UAAWi4C,GAGzB,MAAM8B,EAAkB,CACvBrwC,IAAKmD,EAAQnD,IACbsF,OAAQgqC,EAAUI,WAClB/F,WAAY2F,EAAUgB,cACtB/I,UACAtwC,KAAMkM,EAAQlM,KACd2yC,QAASzmC,EAAQymC,QACjBvrB,cAAelb,EAAQkb,eAIlBkyB,EAAUhJ,EAAQ3wC,IAAI,oBAU5B,IAAKuM,EAAQwoC,UAA+B,SAAnBxoC,EAAQG,QAAiC,OAAZitC,GAA6C,MAAzBjB,EAAUI,YAA+C,MAAzBJ,EAAUI,WAGnH,OAFAzF,EAAW,IAAIR,GAASjD,EAAM6J,QAC9Bp0C,EAAQguC,GAST,MAAMuG,EAAc,CACnBngB,MAAOogB,EAAKC,aACZC,YAAaF,EAAKC,cAInB,GAAgB,SAAZH,GAAkC,WAAZA,EAQzB,OAPA/J,EAAO4J,EAAK5J,EAAMiK,EAAKG,aAAaJ,GAAcn5C,IAC7CA,GACH6E,EAAO7E,KAGT4yC,EAAW,IAAIR,GAASjD,EAAM6J,QAC9Bp0C,EAAQguC,GAKT,GAAgB,YAAZsG,GAAqC,cAAZA,EAAyB,CAGrD,MAAMvH,EAAMoH,EAAKd,EAAW,IAAI7G,EAAepxC,IAC1CA,GACH6E,EAAO7E,KA8BT,OA3BA2xC,EAAImH,KAAK,OAAQ5+B,IAGfi1B,EADyB,IAAV,GAAXj1B,EAAM,IACH6+B,EAAK5J,EAAMiK,EAAKI,gBAAiBx5C,IACnCA,GACH6E,EAAO7E,KAIF+4C,EAAK5J,EAAMiK,EAAKK,mBAAoBz5C,IACtCA,GACH6E,EAAO7E,KAKV4yC,EAAW,IAAIR,GAASjD,EAAM6J,GAC9Bp0C,EAAQguC,UAETjB,EAAImH,KAAK,MAAO,KAGVlG,IACJA,EAAW,IAAIR,GAASjD,EAAM6J,GAC9Bp0C,EAAQguC,KAId,CAGG,GAAgB,OAAZsG,EAQH,OAPA/J,EAAO4J,EAAK5J,EAAMiK,EAAKM,yBAA0B15C,IAC5CA,GACH6E,EAAO7E,KAGT4yC,EAAW,IAAIR,GAASjD,EAAM6J,QAC9Bp0C,EAAQguC,GAKTA,EAAW,IAAIR,GAASjD,EAAM6J,GAC9Bp0C,EAAQguC,KVuBkB7mC,OAAOwR,GAAO4xB,WAC7B,OAATA,EAEH5xB,EAAKe,YAGCwwB,GAASK,EAAM5xB,IUzBrBo8B,CAAcxC,EAAUrrC,GAAS8tC,MAAM/0C,IAEzC,kBEhXA,IAAI44B,GAAI,EACR,MAAMoc,GAAI,CACTC,eAAgBrc,KAChBsc,mBAAoBtc,KACpBuc,aAAcvc,KACdwc,mBAAoBxc,KACpByc,aAAczc,KACd0c,yBAA0B1c,KAC1B2c,oBAAqB3c,KACrB4c,gBAAiB5c,KACjB6c,UAAW7c,KACX8c,IAAK9c,MAGN,IAAIkQ,GAAI,EACR,MAAMh5B,GACUg5B,GADVh5B,GAEUg5B,IAAK,EAWf6M,GAAQ7tC,GAAS,GAAJA,EAEb2F,GAAO,OAEb,MAAMmoC,GAIL,WAAA57C,CAAYuwC,GACXtwC,KAAKoR,MAAQ,EACbpR,KAAK47C,MAAQ,EAEb57C,KAAK67C,YAAcroC,GACnBxT,KAAK87C,cAAgBtoC,GACrBxT,KAAK+7C,aAAevoC,GACpBxT,KAAKg8C,cAAgBxoC,GACrBxT,KAAKi8C,YAAczoC,GACnBxT,KAAKk8C,WAAa1oC,GAClBxT,KAAKm8C,UAAY3oC,GAEjBxT,KAAKo8C,cAAgB,CAAA,EAErB9L,EAAW,SAAWA,EACtB,MAAM+L,EAAO,IAAIzzC,WAAW0nC,EAAS9kC,QACrC,IAAK,IAAIyC,EAAI,EAAGA,EAAIqiC,EAAS9kC,OAAQyC,IACpCouC,EAAKpuC,GAAKqiC,EAASpiC,WAAWD,GAC9BjO,KAAKo8C,cAAcC,EAAKpuC,KAAM,EAG/BjO,KAAKswC,SAAW+L,EAChBr8C,KAAKs8C,WAAa,IAAI1zC,WAAW5I,KAAKswC,SAAS9kC,OAAS,GACxDxL,KAAK2B,MAAQo5C,GAAEC,cACjB,CAKC,KAAAhxB,CAAMhpB,GACL,IAAIiN,EAAI,EACR,MAAMsuC,EAAUv7C,EAAKwK,OACrB,IAAIgxC,EAAgBx8C,KAAKoR,OACrBkrC,WAACA,EAAUhM,SAAEA,EAAQ8L,cAAEA,EAAahrC,MAAEA,EAAKzP,MAAEA,EAAKi6C,MAAEA,GAAS57C,KACjE,MAAMy8C,EAAiBz8C,KAAKswC,SAAS9kC,OAC/BkxC,EAAcD,EAAiB,EAC/BE,EAAe37C,EAAKwK,OAC1B,IAAIqC,EACA+uC,EAEJ,MAAMC,EAAOt4C,IACZvE,KAAKuE,EAAO,QAAU0J,GAGjB5M,EAAQkD,WACNvE,KAAKuE,EAAO,SAGdiR,EAAW,CAACsnC,EAAgBx0B,EAAO9I,EAAK68B,UAC/B54C,IAAV6kB,GAAuBA,IAAU9I,GACpCxf,KAAK88C,GAAgBT,GAAQA,EAAKvT,SAASxgB,EAAO9I,KAI9Cu9B,EAAe,CAACx4C,EAAMlD,KAC3B,MAAM27C,EAAaz4C,EAAO,OACpBy4C,KAAch9C,OAIhBqB,GACHmU,EAASjR,EAAMvE,KAAKg9C,GAAa/uC,EAAGjN,UAC7BhB,KAAKg9C,KAEZxnC,EAASjR,EAAMvE,KAAKg9C,GAAah8C,EAAKwK,OAAQxK,GAC9ChB,KAAKg9C,GAAc,KAIrB,IAAK/uC,EAAI,EAAGA,EAAIsuC,EAAStuC,IAGxB,OAFAJ,EAAI7M,EAAKiN,GAEDtM,GACP,KAAKo5C,GAAEC,eACN,GAAI5pC,IAAUk/B,EAAS9kC,OAAS,EAAG,CAClC,GAxFS,KAwFLqC,EACH+tC,GAAS/lC,QACH,GA5FF,KA4FMhI,EACV,OAGDuD,IACA,KACN,CAAY,GAAIA,EAAQ,GAAMk/B,EAAS9kC,OAAS,EAAG,CAC7C,GAAIowC,EAAQ/lC,IAjGH,KAiGsBhI,EAC9BlM,EAAQo5C,GAAEU,IACVG,EAAQ,MACF,IAAMA,EAAQ/lC,IAvGhB,KAuGoChI,EAKxC,OAJAuD,EAAQ,EACRoE,EAAS,eACT7T,EAAQo5C,GAAEE,kBAGjB,CAEM,KACN,CAESptC,IAAMyiC,EAASl/B,EAAQ,KAC1BA,GAAQ,GAGLvD,IAAMyiC,EAASl/B,EAAQ,IAC1BA,IAGD,MACD,KAAK2pC,GAAEE,mBACNt5C,EAAQo5C,GAAEG,aACV2B,EAAK,iBACLzrC,EAAQ,EAET,KAAK2pC,GAAEG,aACN,GAhIM,KAgIFrtC,EAAU,CACbxM,EAAM,iBACNM,EAAQo5C,GAAEO,oBACV,KACN,CAGK,GADAlqC,IApIU,KAqINvD,EACH,MAGD,GAxIS,KAwILA,EAAa,CAChB,GAAc,IAAVuD,EAEH,OAGD2rC,EAAa,iBAAiB,GAC9Bp7C,EAAQo5C,GAAEI,mBACV,KACN,CAGK,GADAyB,EAAKlB,GAAM7tC,GACP+uC,EAnJC,IAmJSA,EAlJT,IAmJJ,OAGD,MACD,KAAK7B,GAAEI,mBACN,GA5JS,KA4JLttC,EACH,MAGDgvC,EAAK,iBACLl7C,EAAQo5C,GAAEK,aAEX,KAAKL,GAAEK,aApKA,KAqKFvtC,IACHkvC,EAAa,iBAAiB,GAC9BvnC,EAAS,eACT7T,EAAQo5C,GAAEM,0BAGX,MACD,KAAKN,GAAEM,yBACN,GA9KM,KA8KFxtC,EACH,OAGDlM,EAAQo5C,GAAEE,mBACV,MACD,KAAKF,GAAEO,oBACN,GArLM,KAqLFztC,EACH,OAGD2H,EAAS,gBACT7T,EAAQo5C,GAAEQ,gBACV,MACD,KAAKR,GAAEQ,gBACN55C,EAAQo5C,GAAES,UACVqB,EAAK,cAEN,KAAK9B,GAAES,UAGN,GAFAgB,EAAgBprC,EAEF,IAAVA,EAAa,CAGhB,IADAnD,GAAKyuC,EACEzuC,EAAI0uC,KAAkB37C,EAAKiN,KAAMmuC,IACvCnuC,GAAKwuC,EAGNxuC,GAAKyuC,EACL7uC,EAAI7M,EAAKiN,EACf,CAEK,GAAImD,EAAQk/B,EAAS9kC,OAChB8kC,EAASl/B,KAAWvD,GACT,IAAVuD,GACH2rC,EAAa,cAAc,GAG5B3rC,KAEAA,EAAQ,OAEH,GAAIA,IAAUk/B,EAAS9kC,OAC7B4F,IAxNK,KAyNDvD,EAEH+tC,GAAS/lC,GAzND,KA0NEhI,EAEV+tC,GAAS/lC,GAETzE,EAAQ,OAEH,GAAIA,EAAQ,IAAMk/B,EAAS9kC,OACjC,GAAIowC,EAAQ/lC,IAEX,GADAzE,EAAQ,EArOJ,KAsOAvD,EAAU,CAEb+tC,IAAU/lC,GACVL,EAAS,aACTA,EAAS,eACT7T,EAAQo5C,GAAEE,mBACV,KACR,OACiBW,EAAQ/lC,IA3OV,KA4OJhI,GACH2H,EAAS,aACT7T,EAAQo5C,GAAEU,IACVG,EAAQ,GAKTxqC,EAAQ,EAIV,GAAIA,EAAQ,EAGXkrC,EAAWlrC,EAAQ,GAAKvD,OAClB,GAAI2uC,EAAgB,EAAG,CAG7B,MAAMS,EAAc,IAAIr0C,WAAW0zC,EAAWr9B,OAAQq9B,EAAWt7B,WAAYs7B,EAAWj9B,YACxF7J,EAAS,aAAc,EAAGgnC,EAAeS,GACzCT,EAAgB,EAChBK,EAAK,cAIL5uC,GACN,CAEK,MACD,KAAK8sC,GAAEU,IACN,MACD,QACC,MAAM,IAAIr4C,MAAM,6BAA6BzB,KAIhDo7C,EAAa,iBACbA,EAAa,iBACbA,EAAa,cAGb/8C,KAAKoR,MAAQA,EACbpR,KAAK2B,MAAQA,EACb3B,KAAK47C,MAAQA,CACf,CAEC,GAAAp8B,GACC,GAAKxf,KAAK2B,QAAUo5C,GAAEE,oBAAqC,IAAfj7C,KAAKoR,OAC/CpR,KAAK2B,QAAUo5C,GAAES,WAAax7C,KAAKoR,QAAUpR,KAAKswC,SAAS9kC,OAC5DxL,KAAKm8C,iBACC,GAAIn8C,KAAK2B,QAAUo5C,GAAEU,IAC3B,MAAM,IAAIr4C,MAAM,mDAEnB,kDAmBO6J,eAA0BmjC,EAAMe,GACtC,IAAK,aAAaxD,KAAKwD,GACtB,MAAM,IAAIp7B,UAAU,mBAGrB,MAAMsoB,EAAI8S,EAAG+L,MAAM,mCAEnB,IAAK7e,EACJ,MAAM,IAAItoB,UAAU,wDAGrB,MAAMonC,EAAS,IAAIxB,GAAgBtd,EAAE,IAAMA,EAAE,IAE7C,IAAI+e,EACAC,EACAC,EACAC,EACAhK,EACAiK,EACJ,MAAMC,EAAc,GACdvM,EAAW,IAAIpC,GAEfoN,EAAaG,IAClBiB,GAAczP,EAAQE,OAAOsO,EAAM,CAACrkC,QAAQ,KAGvC0lC,EAAerB,IACpBoB,EAAYryC,KAAKixC,IAGZsB,EAAuB,KAC5B,MAAMC,EAAO,IAAIrP,GAAKkP,EAAaD,EAAU,CAACl3C,KAAMitC,IACpDrC,EAASjC,OAAOsO,EAAWK,IAGtBC,EAAwB,KAC7B3M,EAASjC,OAAOsO,EAAWD,IAGtBzP,EAAU,IAAIC,YAAY,SAChCD,EAAQE,SAERoP,EAAOlB,YAAc,WACpBkB,EAAOjB,WAAaA,EACpBiB,EAAOhB,UAAY0B,EAEnBT,EAAc,GACdC,EAAc,GACdC,EAAa,GACbC,EAAY,GACZhK,EAAc,GACdiK,EAAW,KACXC,EAAYjyC,OAAS,CACvB,EAEC2xC,EAAOrB,cAAgB,SAAUO,GAChCe,GAAevP,EAAQE,OAAOsO,EAAM,CAACrkC,QAAQ,GAC/C,EAECmlC,EAAOnB,cAAgB,SAAUK,GAChCgB,GAAexP,EAAQE,OAAOsO,EAAM,CAACrkC,QAAQ,GAC/C,EAECmlC,EAAOtB,YAAc,WAIpB,GAHAwB,GAAexP,EAAQE,SACvBqP,EAAcA,EAAYna,cAEN,wBAAhBma,EAAuC,CAE1C,MAAM/e,EAAIgf,EAAYH,MAAM,qDAExB7e,IACHkf,EAAYlf,EAAE,IAAMA,EAAE,IAAM,IAG7Bmf,EA3FH,SAAmBH,GAElB,MAAMhf,EAAIgf,EAAYH,MAAM,8DAC5B,IAAK7e,EACJ,OAGD,MAAM6e,EAAQ7e,EAAE,IAAMA,EAAE,IAAM,GAC9B,IAAImf,EAAWN,EAAM3+B,MAAM2+B,EAAMpZ,YAAY,MAAQ,GAKrD,OAJA0Z,EAAWA,EAAS/V,QAAQ,OAAQ,KACpC+V,EAAWA,EAAS/V,QAAQ,cAAe,CAACpJ,EAAG55B,IACvCqb,OAAOmmB,aAAaxhC,IAErB+4C,CACR,CA6EcM,CAAUT,GAEjBG,IACHL,EAAOjB,WAAawB,EACpBP,EAAOhB,UAAYwB,EAEvB,KAA6B,iBAAhBP,IACV7J,EAAc8J,GAGfA,EAAc,GACdD,EAAc,EAChB,EAEC,UAAW,MAAMhiC,KAASg1B,EACzB+M,EAAOnzB,MAAM5O,GAKd,OAFA+hC,EAAO39B,MAEA0xB,CACR","x_google_ignoreList":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}