{"version":3,"file":"index.esm.js","sources":["../../src/utils/event-emitter.ts","../../src/core/wallet.ts","../../src/providers/custom-social-login.ts","../../src/connectors/rainbow-kit.ts","../../src/connectors/wagmi.ts","../../src/utils/platform-adapters.ts","../../src/nextjs/index.ts","../../node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","../../node_modules/fetch-blob/streams.cjs","../../node_modules/fetch-blob/index.js","../../node_modules/fetch-blob/file.js","../../node_modules/formdata-polyfill/esm.min.js","../../node_modules/node-fetch/src/errors/base.js","../../node_modules/node-fetch/src/errors/fetch-error.js","../../node_modules/node-fetch/src/utils/is.js","../../node_modules/node-fetch/src/body.js","../../node_modules/node-fetch/src/headers.js","../../node_modules/node-fetch/src/utils/is-redirect.js","../../node_modules/node-fetch/src/response.js","../../node_modules/node-fetch/src/utils/referrer.js","../../node_modules/node-fetch/src/request.js","../../node_modules/node-fetch/src/utils/get-search.js","../../node_modules/node-fetch/src/errors/abort-error.js","../../node_modules/node-domexception/index.js","../../node_modules/fetch-blob/from.js","../../node_modules/node-fetch/src/index.js","../../node_modules/data-uri-to-buffer/dist/index.js","../../node_modules/node-fetch/src/utils/multipart-parser.js"],"sourcesContent":[null,null,null,null,null,null,null,"/**\n * @license\n * web-streams-polyfill v3.3.3\n * Copyright 2024 Mattias Buelens, Diwank Singh Tomer and other contributors.\n * This code is released under the MIT license.\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n})(this, (function (exports) { 'use strict';\n\n    function noop() {\n        return undefined;\n    }\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n    function setFunctionName(fn, name) {\n        try {\n            Object.defineProperty(fn, 'name', {\n                value: name,\n                configurable: true\n            });\n        }\n        catch (_a) {\n            // This property is non-configurable in older browsers, so ignore if this throws.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n        }\n    }\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    // https://webidl.spec.whatwg.org/#a-new-promise\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-resolved-with\n    function promiseResolvedWith(value) {\n        return newPromise(resolve => resolve(value));\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-rejected-with\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    // Bluebird logs a warning when a promise is created within a fulfillment handler, but then isn't returned\n    // from that handler. To prevent this, return null instead of void from all handlers.\n    // http://bluebirdjs.com/docs/warning-explanations.html#warning-a-promise-was-created-in-a-handler-but-was-not-returned-from-it\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    let _queueMicrotask = callback => {\n        if (typeof queueMicrotask === 'function') {\n            _queueMicrotask = queueMicrotask;\n        }\n        else {\n            const resolvedPromise = promiseResolvedWith(undefined);\n            _queueMicrotask = cb => PerformPromiseThen(resolvedPromise, cb);\n        }\n        return _queueMicrotask(callback);\n    };\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    const AbortSteps = Symbol('[[AbortSteps]]');\n    const ErrorSteps = Symbol('[[ErrorSteps]]');\n    const CancelSteps = Symbol('[[CancelSteps]]');\n    const PullSteps = Symbol('[[PullSteps]]');\n    const ReleaseSteps = Symbol('[[ReleaseSteps]]');\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        const stream = reader._ownerReadableStream;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        stream._readableStreamController[ReleaseSteps]();\n        stream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamDefaultReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamDefaultReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamDefaultReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    function ReadableStreamDefaultReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n    }\n    function ReadableStreamDefaultReaderErrorReadRequests(reader, e) {\n        const readRequests = reader._readRequests;\n        reader._readRequests = new SimpleQueue();\n        readRequests.forEach(readRequest => {\n            readRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    _queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    var _a, _b, _c;\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    let TransferArrayBuffer = (O) => {\n        if (typeof O.transfer === 'function') {\n            TransferArrayBuffer = buffer => buffer.transfer();\n        }\n        else if (typeof structuredClone === 'function') {\n            TransferArrayBuffer = buffer => structuredClone(buffer, { transfer: [buffer] });\n        }\n        else {\n            // Not implemented correctly\n            TransferArrayBuffer = buffer => buffer;\n        }\n        return TransferArrayBuffer(O);\n    };\n    let IsDetachedBuffer = (O) => {\n        if (typeof O.detached === 'boolean') {\n            IsDetachedBuffer = buffer => buffer.detached;\n        }\n        else {\n            // Not implemented correctly\n            IsDetachedBuffer = buffer => buffer.byteLength === 0;\n        }\n        return IsDetachedBuffer(O);\n    };\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n    function GetMethod(receiver, prop) {\n        const func = receiver[prop];\n        if (func === undefined || func === null) {\n            return undefined;\n        }\n        if (typeof func !== 'function') {\n            throw new TypeError(`${String(prop)} is not a function`);\n        }\n        return func;\n    }\n    function CreateAsyncFromSyncIterator(syncIteratorRecord) {\n        // Instead of re-implementing CreateAsyncFromSyncIterator and %AsyncFromSyncIteratorPrototype%,\n        // we use yield* inside an async generator function to achieve the same result.\n        // Wrap the sync iterator inside a sync iterable, so we can use it with yield*.\n        const syncIterable = {\n            [Symbol.iterator]: () => syncIteratorRecord.iterator\n        };\n        // Create an async generator function and immediately invoke it.\n        const asyncIterator = (async function* () {\n            return yield* syncIterable;\n        }());\n        // Return as an async iterator record.\n        const nextMethod = asyncIterator.next;\n        return { iterator: asyncIterator, nextMethod, done: false };\n    }\n    // Aligns with core-js/modules/es.symbol.async-iterator.js\n    const SymbolAsyncIterator = (_c = (_a = Symbol.asyncIterator) !== null && _a !== void 0 ? _a : (_b = Symbol.for) === null || _b === void 0 ? void 0 : _b.call(Symbol, 'Symbol.asyncIterator')) !== null && _c !== void 0 ? _c : '@@asyncIterator';\n    function GetIterator(obj, hint = 'sync', method) {\n        if (method === undefined) {\n            if (hint === 'async') {\n                method = GetMethod(obj, SymbolAsyncIterator);\n                if (method === undefined) {\n                    const syncMethod = GetMethod(obj, Symbol.iterator);\n                    const syncIteratorRecord = GetIterator(obj, 'sync', syncMethod);\n                    return CreateAsyncFromSyncIterator(syncIteratorRecord);\n                }\n            }\n            else {\n                method = GetMethod(obj, Symbol.iterator);\n            }\n        }\n        if (method === undefined) {\n            throw new TypeError('The object is not iterable');\n        }\n        const iterator = reflectCall(method, obj, []);\n        if (!typeIsObject(iterator)) {\n            throw new TypeError('The iterator method must return an object');\n        }\n        const nextMethod = iterator.next;\n        return { iterator, nextMethod, done: false };\n    }\n    function IteratorNext(iteratorRecord) {\n        const result = reflectCall(iteratorRecord.nextMethod, iteratorRecord.iterator, []);\n        if (!typeIsObject(result)) {\n            throw new TypeError('The iterator.next() method must return an object');\n        }\n        return result;\n    }\n    function IteratorComplete(iterResult) {\n        return Boolean(iterResult.done);\n    }\n    function IteratorValue(iterResult) {\n        return iterResult.value;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    function isDataViewConstructor(ctor) {\n        return ctor === DataView;\n    }\n    function isDataView(view) {\n        return isDataViewConstructor(view.constructor);\n    }\n    function arrayBufferViewElementSize(ctor) {\n        if (isDataViewConstructor(ctor)) {\n            return 1;\n        }\n        return ctor.BYTES_PER_ELEMENT;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) {\n                throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n            }\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n            }\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respond, 'respond');\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respondWithNewView, 'respondWithNewView');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                ReadableByteStreamControllerFillReadRequestFromQueue(this, readRequest);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    minimumFill: 1,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            if (this._pendingPullIntos.length > 0) {\n                const firstPullInto = this._pendingPullIntos.peek();\n                firstPullInto.readerType = 'none';\n                this._pendingPullIntos = new SimpleQueue();\n                this._pendingPullIntos.push(firstPullInto);\n            }\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableByteStreamController.prototype.close, 'close');\n    setFunctionName(ReadableByteStreamController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableByteStreamController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        let clonedChunk;\n        try {\n            clonedChunk = ArrayBufferSlice(buffer, byteOffset, byteOffset + byteLength);\n        }\n        catch (cloneE) {\n            ReadableByteStreamControllerError(controller, cloneE);\n            throw cloneE;\n        }\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, clonedChunk, 0, byteLength);\n    }\n    function ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstDescriptor) {\n        if (firstDescriptor.bytesFilled > 0) {\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, firstDescriptor.buffer, firstDescriptor.byteOffset, firstDescriptor.bytesFilled);\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        const remainderBytes = maxBytesFilled % pullIntoDescriptor.elementSize;\n        const maxAlignedBytes = maxBytesFilled - remainderBytes;\n        // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n        // of the queue, so the underlying source can keep filling it.\n        if (maxAlignedBytes >= pullIntoDescriptor.minimumFill) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller) {\n        const reader = controller._controlledReadableByteStream._reader;\n        while (reader._readRequests.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const readRequest = reader._readRequests.shift();\n            ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest);\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, min, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        const ctor = view.constructor;\n        const elementSize = arrayBufferViewElementSize(ctor);\n        const { byteOffset, byteLength } = view;\n        const minimumFill = min * elementSize;\n        let buffer;\n        try {\n            buffer = TransferArrayBuffer(view.buffer);\n        }\n        catch (e) {\n            readIntoRequest._errorSteps(e);\n            return;\n        }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset,\n            byteLength,\n            bytesFilled: 0,\n            minimumFill,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        if (firstDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n        }\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, pullIntoDescriptor);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n            return;\n        }\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill) {\n            // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n            // of the queue, so the underlying source can keep filling it.\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, pullIntoDescriptor.buffer, end - remainderSize, remainderSize);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const { buffer, byteOffset, byteLength } = chunk;\n        if (IsDetachedBuffer(buffer)) {\n            throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n        }\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n                throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk');\n            }\n            ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n            if (firstPendingPullInto.readerType === 'none') {\n                ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstPendingPullInto);\n            }\n        }\n        if (ReadableStreamHasDefaultReader(stream)) {\n            ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest) {\n        const entry = controller._queue.shift();\n        controller._queueTotalSize -= entry.byteLength;\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n        readRequest._chunkSteps(view);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n    function convertByobReadOptions(options, context) {\n        var _a;\n        assertDictionary(options, context);\n        const min = (_a = options === null || options === void 0 ? void 0 : options.min) !== null && _a !== void 0 ? _a : 1;\n        return {\n            min: convertUnsignedLongLongWithEnforceRange(min, `${context} has member 'min' that`)\n        };\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        read(view, rawOptions = {}) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n            }\n            let options;\n            try {\n                options = convertByobReadOptions(rawOptions, 'options');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const min = options.min;\n            if (min === 0) {\n                return promiseRejectedWith(new TypeError('options.min must be greater than 0'));\n            }\n            if (!isDataView(view)) {\n                if (min > view.length) {\n                    return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s length'));\n                }\n            }\n            else if (min > view.byteLength) {\n                return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s byteLength'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, min, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamBYOBReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamBYOBReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamBYOBReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, min, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, min, readIntoRequest);\n        }\n    }\n    function ReadableStreamBYOBReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n    }\n    function ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e) {\n        const readIntoRequests = reader._readIntoRequests;\n        reader._readIntoRequests = new SimpleQueue();\n        readIntoRequests.forEach(readIntoRequest => {\n            readIntoRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(WritableStream.prototype.abort, 'abort');\n    setFunctionName(WritableStream.prototype.close, 'close');\n    setFunctionName(WritableStream.prototype.getWriter, 'getWriter');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort(reason);\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    setFunctionName(WritableStreamDefaultWriter.prototype.abort, 'abort');\n    setFunctionName(WritableStreamDefaultWriter.prototype.close, 'close');\n    setFunctionName(WritableStreamDefaultWriter.prototype.releaseLock, 'releaseLock');\n    setFunctionName(WritableStreamDefaultWriter.prototype.write, 'write');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n            return null;\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let writeAlgorithm;\n        let closeAlgorithm;\n        let abortAlgorithm;\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        else {\n            writeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        else {\n            closeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        else {\n            abortAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n            return null;\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    function getGlobals() {\n        if (typeof globalThis !== 'undefined') {\n            return globalThis;\n        }\n        else if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        if (ctor.name !== 'DOMException') {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    /**\n     * Support:\n     * - Web browsers\n     * - Node 18 and higher (https://github.com/nodejs/node/commit/e4b1fb5e6422c1ff151234bb9de792d45dd88d87)\n     */\n    function getFromGlobal() {\n        const ctor = globals === null || globals === void 0 ? void 0 : globals.DOMException;\n        return isDOMExceptionConstructor(ctor) ? ctor : undefined;\n    }\n    /**\n     * Support:\n     * - All platforms\n     */\n    function createPolyfill() {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        setFunctionName(ctor, 'DOMException');\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-redeclare\n    const DOMException = getFromGlobal() || createPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = signal.reason !== undefined ? signal.reason : new DOMException('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n                return null;\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                    return null;\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n                return null;\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            // Do nothing.\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultController.prototype.close, 'close');\n    setFunctionName(ReadableStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableStreamDefaultController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n            return null;\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return null;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n                return null;\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, 1, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function isReadableStreamLike(stream) {\n        return typeIsObject(stream) && typeof stream.getReader !== 'undefined';\n    }\n\n    function ReadableStreamFrom(source) {\n        if (isReadableStreamLike(source)) {\n            return ReadableStreamFromDefaultReader(source.getReader());\n        }\n        return ReadableStreamFromIterable(source);\n    }\n    function ReadableStreamFromIterable(asyncIterable) {\n        let stream;\n        const iteratorRecord = GetIterator(asyncIterable, 'async');\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let nextResult;\n            try {\n                nextResult = IteratorNext(iteratorRecord);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const nextPromise = promiseResolvedWith(nextResult);\n            return transformPromiseWith(nextPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.next() method must fulfill with an object');\n                }\n                const done = IteratorComplete(iterResult);\n                if (done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = IteratorValue(iterResult);\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            const iterator = iteratorRecord.iterator;\n            let returnMethod;\n            try {\n                returnMethod = GetMethod(iterator, 'return');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (returnMethod === undefined) {\n                return promiseResolvedWith(undefined);\n            }\n            let returnResult;\n            try {\n                returnResult = reflectCall(returnMethod, iterator, [reason]);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const returnPromise = promiseResolvedWith(returnResult);\n            return transformPromiseWith(returnPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.return() method must fulfill with an object');\n                }\n                return undefined;\n            });\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n    function ReadableStreamFromDefaultReader(reader) {\n        let stream;\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let readPromise;\n            try {\n                readPromise = reader.read();\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            return transformPromiseWith(readPromise, readResult => {\n                if (!typeIsObject(readResult)) {\n                    throw new TypeError('The promise returned by the reader.read() method must fulfill with an object');\n                }\n                if (readResult.done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = readResult.value;\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            try {\n                return promiseResolvedWith(reader.cancel(reason));\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n        [SymbolAsyncIterator](options) {\n            // Stub implementation, overridden below\n            return this.values(options);\n        }\n        /**\n         * Creates a new ReadableStream wrapping the provided iterable or async iterable.\n         *\n         * This can be used to adapt various kinds of objects into a readable stream,\n         * such as an array, an async generator, or a Node.js readable stream.\n         */\n        static from(asyncIterable) {\n            return ReadableStreamFrom(asyncIterable);\n        }\n    }\n    Object.defineProperties(ReadableStream, {\n        from: { enumerable: true }\n    });\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(ReadableStream.from, 'from');\n    setFunctionName(ReadableStream.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStream.prototype.getReader, 'getReader');\n    setFunctionName(ReadableStream.prototype.pipeThrough, 'pipeThrough');\n    setFunctionName(ReadableStream.prototype.pipeTo, 'pipeTo');\n    setFunctionName(ReadableStream.prototype.tee, 'tee');\n    setFunctionName(ReadableStream.prototype.values, 'values');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    Object.defineProperty(ReadableStream.prototype, SymbolAsyncIterator, {\n        value: ReadableStream.prototype.values,\n        writable: true,\n        configurable: true\n    });\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            const readIntoRequests = reader._readIntoRequests;\n            reader._readIntoRequests = new SimpleQueue();\n            readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            const readRequests = reader._readRequests;\n            reader._readRequests = new SimpleQueue();\n            readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n        }\n        else {\n            ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    setFunctionName(byteLengthSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    setFunctionName(countSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            cancel: cancel === undefined ?\n                undefined :\n                convertTransformerCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n    function convertTransformerCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            return TransformStreamDefaultSourceCancelAlgorithm(stream, reason);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        TransformStreamUnblockWrite(stream);\n    }\n    function TransformStreamUnblockWrite(stream) {\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(TransformStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(TransformStreamDefaultController.prototype.error, 'error');\n    setFunctionName(TransformStreamDefaultController.prototype.terminate, 'terminate');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._finishPromise = undefined;\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm;\n        let flushAlgorithm;\n        let cancelAlgorithm;\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        else {\n            transformAlgorithm = chunk => {\n                try {\n                    TransformStreamDefaultControllerEnqueue(controller, chunk);\n                    return promiseResolvedWith(undefined);\n                }\n                catch (transformResultE) {\n                    return promiseRejectedWith(transformResultE);\n                }\n            };\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        else {\n            flushAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (transformer.cancel !== undefined) {\n            cancelAlgorithm = reason => transformer.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _cancelAlgorithm calls readable.cancel() internally,\n        // we don't run the _cancelAlgorithm again.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerError(readable._readableStreamController, reason);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls readable.cancel() internally,\n        // we don't also run the _cancelAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(flushPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerClose(readable._readableStreamController);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    function TransformStreamDefaultSourceCancelAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._writable cannot change after construction, so caching it across a call to user code is safe.\n        const writable = stream._writable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls writable.abort() or\n        // writable.cancel() internally, we don't run the _cancelAlgorithm again, or also run the\n        // _flushAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (writable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, writable._storedError);\n            }\n            else {\n                WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, reason);\n                TransformStreamUnblockWrite(stream);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, r);\n            TransformStreamUnblockWrite(stream);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    function defaultControllerFinishPromiseResolve(controller) {\n        if (controller._finishPromise_resolve === undefined) {\n            return;\n        }\n        controller._finishPromise_resolve();\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function defaultControllerFinishPromiseReject(controller, reason) {\n        if (controller._finishPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(controller._finishPromise);\n        controller._finishPromise_reject(reason);\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n}));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n"],"names":["EventEmitter","constructor","this","events","Map","on","event","listener","has","set","Set","get","add","off","listeners","delete","size","emit","data","forEach","error","console","removeAllListeners","clear","DSportsWallet","config","adapter","super","connectors","state","isConnecting","isReconnecting","isDisconnected","initialize","lastConnector","storage","getItem","reconnect","warn","addConnector","connector","id","handleConnect","handleDisconnect","handleChange","handleError","removeConnector","getConnectors","Array","from","values","getConnector","connect","connectorId","Error","pendingConnector","currentConnector","setItem","createAccount","undefined","disconnect","removeItem","switchChain","chainId","getState","getAccount","account","isConnected","isAuthorized","getChainId","address","chain","walletError","name","message","code","details","CustomSocialLoginProvider","login","provider","authResult","platform","loginReactNative","loginWeb","walletData","generateWalletFromSocial","result","user","token","expiresAt","walletAddress","privateKey","storeLoginResult","authUrl","buildAuthUrl","Promise","resolve","reject","popup","window","open","messageHandler","origin","location","type","removeEventListener","close","payload","addEventListener","checkClosed","setInterval","closed","clearInterval","providers","redirectUri","params","URLSearchParams","client_id","clientId","redirect_uri","response_type","scope","google","facebook","twitter","discord","github","apple","email","sms","generateState","toString","Math","random","substring","socialData","appSecret","TextEncoder","encode","hashBuffer","crypto","sha256","Uint8Array","map","b","padStart","join","ethers","Wallet","logout","clearStoredData","getStoredUser","userStr","JSON","parse","getWalletFromSocial","socialResult","stringify","handleOAuthCallback","url","urlParams","split","parent","postMessage","avatar","Date","now","OAuthCallbackPage","DSportsRainbowKitConnector","ready","icon","eventEmitter","customSocialLoginProvider","socialLogin","connectWithSocialLogin","storedAccount","localStorage","storedChainId","parseInt","connectorData","generateMockAddress","chains","getProvider","request","async","args","method","repeat","handler","removeListener","getSigner","getAddress","signMessage","signTransaction","transaction","find","c","promptSocialProvider","generateAddressFromSocialLogin","hash","i","length","charCodeAt","abs","randomBytes","getRandomValues","DSportsWagmiConnector","getNetwork","sendTransaction","wait","blockHash","blockNumber","transactionHash","status","nextjsPlatformAdapter","key","value","generateRandomBytes","array","floor","subtle","digest","require","createHash","update","network","fetch","options","default","then","index","createDSportsWallet","appName","metadata","appUrl","appIcon","icons","appDescription","description","projectId","theme","wallet","socialProvider","rainbowKitConnector","wagmiConnector","createDSportsRainbowKitConnectorForNextjs","iconUrl","iconBackground","createConnector","mobile","getUri","createDSportsWagmiConnectorForNextjs","dsportsWagmiConnectorForNextjs","connectConfig","accounts","getAccounts","nativeCurrency","symbol","decimals","rpcUrls","http","public","onAccountsChanged","onChainChanged","onConnect","onDisconnect","useDSportsWallet","setState","useState","useEffect","handleStateChange","bind","useSocialLogin","isLoading","setIsLoading","setUser","setError","err","withDSportsWallet","Component","walletOptions","props","React","createElement","mainnet","blockExplorers","goerli","testnet","sepolia","exports","noop","typeIsObject","x","rethrowAssertionErrorRejection","setFunctionName","fn","Object","defineProperty","configurable","_a","originalPromise","originalPromiseThen","prototype","originalPromiseReject","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","_queueMicrotask","callback","queueMicrotask","resolvedPromise","cb","reflectCall","F","V","TypeError","Function","apply","promiseCall","QUEUE_MAX_ARRAY_SIZE","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","push","element","oldBack","newBack","shift","oldFront","newFront","oldCursor","newCursor","elements","node","peek","front","cursor","AbortSteps","Symbol","ErrorSteps","CancelSteps","PullSteps","ReleaseSteps","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","_readableStreamController","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","defaultReaderClosedPromiseResolve","NumberIsFinite","Number","isFinite","MathTrunc","trunc","v","ceil","isDictionary","assertDictionary","obj","context","assertFunction","isObject","assertObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","integerPart","convertUnsignedLongLongWithEnforceRange","lowerBound","upperBound","MAX_SAFE_INTEGER","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","_errorSteps","e","ReadableStreamDefaultReaderRead","releaseLock","ReadableStreamDefaultReaderRelease","hasOwnProperty","_disturbed","ReadableStreamDefaultReaderErrorReadRequests","readRequests","defineProperties","enumerable","toStringTag","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","return","AcquireReadableStreamAsyncIterator","impl","iterator","create","setPrototypeOf","NumberIsNaN","isNaN","_b","_c","CreateArrayFromList","slice","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","TransferArrayBuffer","O","transfer","buffer","structuredClone","IsDetachedBuffer","detached","byteLength","ArrayBufferSlice","begin","end","ArrayBuffer","GetMethod","receiver","prop","func","String","CreateAsyncFromSyncIterator","syncIteratorRecord","syncIterable","asyncIterator","nextMethod","SymbolAsyncIterator","for","GetIterator","hint","IteratorNext","iteratorRecord","IteratorComplete","iterResult","Boolean","IteratorValue","IsNonNegativeNumber","CloneAsUint8Array","byteOffset","DequeueValue","container","pair","_queue","_queueTotalSize","EnqueueValueWithSize","Infinity","RangeError","PeekQueueValue","ResetQueue","isDataViewConstructor","ctor","DataView","isDataView","view","arrayBufferViewElementSize","BYTES_PER_ELEMENT","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","ReadableByteStreamControllerFillReadRequestFromQueue","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","minimumFill","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","firstPullInto","controller","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerEnqueueClonedChunkToQueue","clonedChunk","cloneE","ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue","firstDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","maxBytesToCopy","min","maxBytesFilled","totalBytesToCopyRemaining","maxAlignedBytes","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerProcessReadRequestsUsingQueue","ReadableByteStreamControllerPullInto","readIntoRequest","ReadableStreamAddReadIntoRequest","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerRespondInReadableState","remainderSize","ReadableByteStreamControllerRespondInternal","_started","firstPendingPullInto","transferredBuffer","ReadableStreamError","entry","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","SetUpReadableByteStreamControllerFromUnderlyingSource","underlyingByteSource","start","pull","convertReaderOptions","mode","convertReadableStreamReaderMode","convertByobReadOptions","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","_readIntoRequests","IsReadableStreamBYOBReader","byobReaderBrandCheckException","rawOptions","ReadableStreamBYOBReaderRead","ReadableStreamBYOBReaderRelease","ReadableStreamBYOBReaderErrorReadIntoRequests","readIntoRequests","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSink","original","abort","write","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","isAbortSignal","aborted","supportsAbortController","AbortController","createAbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","InitializeWritableStream","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","CreateWritableStream","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","WritableStreamDefaultController","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerClose","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","closeSentinel","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","_controlledWritableStream","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","_strategySizeAlgorithm","_writeAlgorithm","_closeAlgorithm","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerAdvanceQueueIfNeeded","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","_readyPromise_resolve","_readyPromise_reject","getGlobals","globalThis","self","global","globals","isDOMExceptionConstructor","getFromGlobal","DOMException","createPolyfill","captureStackTrace","writable","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","all","action","pipeLoop","resolveLoop","rejectLoop","pipeStep","resolveRead","rejectRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamDefaultControllerHasBackpressure","SetUpReadableStreamDefaultController","SetUpReadableStreamDefaultControllerFromUnderlyingSource","underlyingSource","ReadableStreamTee","cloneForBranch2","ReadableByteStreamTee","ReadableStreamDefaultTee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgain","canceled1","canceled2","cancelPromise","chunk1","chunk2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","CreateReadableStream","readAgainForBranch1","readAgainForBranch2","forwardReaderError","thisReader","pullWithDefaultReader","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","otherCanceled","CreateReadableByteStream","isReadableStreamLike","getReader","ReadableStreamFrom","ReadableStreamFromDefaultReader","ReadableStreamFromIterable","asyncIterable","nextResult","returnMethod","returnResult","readPromise","readResult","convertUnderlyingDefaultOrByteSource","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertIteratorOptions","convertPipeOptions","assertAbortSignal","convertReadableWritablePair","readable","ReadableStream","rawUnderlyingSource","InitializeReadableStream","streamBrandCheckException$1","pipeThrough","rawTransform","transform","pipeTo","destination","tee","convertQueuingStrategyInit","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformer","flush","readableType","writableType","convertTransformerCancelCallback","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","_transformStreamController","IsTransformStream","streamBrandCheckException","_readable","_writable","startPromise","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamDefaultSourceCancelAlgorithm","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorWritableAndUnblockWrite","TransformStreamDefaultControllerClearAlgorithms","TransformStreamUnblockWrite","TransformStreamDefaultController","IsTransformStreamDefaultController","defaultControllerBrandCheckException","_controlledTransformStream","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","terminate","TransformStreamDefaultControllerTerminate","SetUpTransformStreamDefaultController","transformAlgorithm","flushAlgorithm","_transformAlgorithm","_flushAlgorithm","_finishPromise","_finishPromise_resolve","_finishPromise_reject","transformResultE","readableController","TransformStreamDefaultControllerPerformTransform","defaultControllerFinishPromiseReject","defaultControllerFinishPromiseResolve","flushPromise","factory","process","emitWarning","assign","require$$2","Blob","blob","ctrl","arrayBuffer","toIterator","parts","clone","part","_Blob","endings","blobParts","encoder","test","text","decoder","TextDecoder","str","decode","offset","it","relativeStart","max","relativeEnd","span","added","subarray","toLowerCase","hasInstance","object","File","lastModified","fileBits","fileName","arguments","t","h","m","f","a","replace","FormData","d","entries","o","some","append","filter","l","getAll","keys","FetchBaseError","FetchError","systemError","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","Stream","INTERNALS","Body","body","boundary","Buffer","isBuffer","types","isAnyArrayBuffer","B","C","p","formDataToBlob","Readable","disturbed","error_","bodyUsed","consumeBody","formData","ct","headers","startsWith","parameters","toFormData","multipartParser","buf","json","alloc","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","concat","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","validateHeaderValue","Headers","raw","isBoxedPrimitive","Proxy","target","Reflect","thisArg","reduce","property","redirectStatus","isRedirect","Response","contentType","statusText","counter","ok","redirected","redirect","URL","response","stripURLForUseAsAReferrer","originOnly","protocol","username","password","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","endsWith","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","input","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","follow","compress","agent","insecureHTTPParser","referrerPolicy","formatUrl","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","determineRequestsReferrer","lastOffset","href","getSearch","path","AbortError","MessageChannel","port","port1","ab","nodeDomexception","stat","fs","supportedSchemas","options_","uri","firstComma","indexOf","meta","charset","base64","typeFull","encoding","unescape","dataUriToBuffer","send","https","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","compare","prependListener","fixResponseChunkedTransferBadEnding","version","s","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","orig","hostname","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","parseReferrerPolicyFromHeader","once","pump","responseOptions","statusMessage","codings","zlibOptions","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","writeToStream","catch","S","START_BOUNDARY","HEADER_FIELD_START","HEADER_FIELD","HEADER_VALUE_START","HEADER_VALUE","HEADER_VALUE_ALMOST_DONE","HEADERS_ALMOST_DONE","PART_DATA_START","PART_DATA","END","lower","MultipartParser","flags","onHeaderEnd","onHeaderField","onHeadersEnd","onHeaderValue","onPartBegin","onPartData","onPartEnd","boundaryChars","ui8a","lookbehind","length_","previousIndex","boundaryLength","boundaryEnd","bufferLength","cl","mark","callbackSymbol","dataCallback","markSymbol","_lookbehind","match","parser","headerField","headerValue","entryValue","entryName","filename","entryChunks","appendToFile","appendFileToFormData","file","appendEntryToFormData","lastIndexOf","fromCharCode","_fileName"],"mappings":"4bAAaA,EAAb,WAAAC,GACUC,KAAAC,OAAsC,IAAIC,IAElD,EAAAC,CAAsBC,EAAUC,GACzBL,KAAKC,OAAOK,IAAIF,IACnBJ,KAAKC,OAAOM,IAAIH,EAAO,IAAII,KAE7BR,KAAKC,OAAOQ,IAAIL,GAAQM,IAAIL,GAG9B,GAAAM,CAAuBP,EAAUC,GAC/B,MAAMO,EAAYZ,KAAKC,OAAOQ,IAAIL,GAC9BQ,IACFA,EAAUC,OAAOR,GACM,IAAnBO,EAAUE,MACZd,KAAKC,OAAOY,OAAOT,IAKzB,IAAAW,CAAwBX,EAAUY,GAChC,MAAMJ,EAAYZ,KAAKC,OAAOQ,IAAIL,GAC9BQ,GACFA,EAAUK,QAAQZ,IAChB,IACEA,EAASW,GACT,MAAOE,GACPC,QAAQD,MAAM,2BAA4BA,MAMlD,kBAAAE,CAAsChB,GAChCA,EACFJ,KAAKC,OAAOY,OAAOT,GAEnBJ,KAAKC,OAAOoB,SC1BZ,MAAOC,UAAsBxB,EAOjC,WAAAC,CAAYwB,EAAsBC,GAChCC,QALMzB,KAAA0B,WAA2C,IAAIxB,IAMrDF,KAAKuB,OAASA,EACdvB,KAAKwB,QAAUA,EACfxB,KAAK2B,MAAQ,CACXC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,GAGlB9B,KAAK+B,aAGC,gBAAMA,GAEZ,MAAMC,QAAsBhC,KAAKwB,QAAQS,QAAQC,QAAQ,4BACzD,GAAIF,EAAe,CACjBhC,KAAK2B,MAAME,gBAAiB,EAC5B,UACQ7B,KAAKmC,UAAUH,GACrB,MAAOd,GACPC,QAAQiB,KAAK,0CAA2ClB,GAE1DlB,KAAK2B,MAAME,gBAAiB,GAIzB,YAAAQ,CAAaC,GAClBtC,KAAK0B,WAAWnB,IAAI+B,EAAUC,GAAID,GAGlCA,EAAUnC,GAAG,UAAYa,IACvBhB,KAAKwC,cAAcF,EAAWtB,KAGhCsB,EAAUnC,GAAG,aAAc,KACzBH,KAAKyC,qBAGPH,EAAUnC,GAAG,SAAWa,IACtBhB,KAAK0C,aAAa1B,KAGpBsB,EAAUnC,GAAG,QAAUe,IACrBlB,KAAK2C,YAAYzB,KAId,eAAA0B,CAAgBL,GACrBvC,KAAK0B,WAAWb,OAAO0B,GAGlB,aAAAM,GACL,OAAOC,MAAMC,KAAK/C,KAAK0B,WAAWsB,UAG7B,YAAAC,CAAaV,GAClB,OAAOvC,KAAK0B,WAAWjB,IAAI8B,GAGtB,aAAMW,CAAQC,EAAqB5B,GACxC,MAAMe,EAAYtC,KAAK0B,WAAWjB,IAAI0C,GACtC,IAAKb,EACH,MAAM,IAAIc,MAAM,aAAaD,eAG/BnD,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,iBAAmBF,EAE9B,IACE,MAAMnC,QAAasB,EAAUY,QAAQ3B,GAMrC,OALAvB,KAAKsD,iBAAmBhB,QAGlBtC,KAAKwB,QAAQS,QAAQsB,QAAQ,2BAA4BJ,GAExDnD,KAAKwD,cAAcxC,GAC1B,MAAOE,GAGP,MAFAlB,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,sBAAmBI,EACxBvC,GAIH,gBAAMwC,GACP1D,KAAKsD,yBACDtD,KAAKsD,iBAAiBI,aAC5B1D,KAAKsD,sBAAmBG,SAGpBzD,KAAKwB,QAAQS,QAAQ0B,WAAW,4BACtC3D,KAAKyC,mBAGA,iBAAMmB,CAAYC,GACvB,IAAK7D,KAAKsD,iBACR,MAAM,IAAIF,MAAM,gCAGZpD,KAAKsD,iBAAiBM,YAAYC,GAGnC,QAAAC,GACL,MAAO,IAAK9D,KAAK2B,OAGZ,UAAAoC,GACL,OAAO/D,KAAK2B,MAAMqC,QAGb,WAAAC,GACL,QAASjE,KAAK2B,MAAMqC,SAASC,YAGvB,eAAM9B,CAAUgB,GACtB,MAAMb,EAAYtC,KAAK0B,WAAWjB,IAAI0C,GACtC,GAAKb,EAIL,IAEE,SAD2BA,EAAU4B,eACnB,CAChB,MAAMF,QAAgB1B,EAAUyB,aAC1BF,QAAgBvB,EAAU6B,aAEhCnE,KAAKsD,iBAAmBhB,EACxBtC,KAAK2B,MAAMqC,QAAU,CACnBI,QAASJ,EACTH,UACAI,aAAa,EACb3B,UAAWa,GAEbnD,KAAK2B,MAAMG,gBAAiB,EAE5B9B,KAAKe,KAAK,UAAWf,KAAK2B,MAAMqC,UAElC,MAAO9C,KAKH,aAAAsB,CAAcF,EAA4BtB,GAChDhB,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAM0B,sBAAmBI,EAC9BzD,KAAK2B,MAAMG,gBAAiB,EAE5B9B,KAAK2B,MAAMqC,QAAUhE,KAAKwD,cAAcxC,GACxChB,KAAKe,KAAK,UAAWf,KAAK2B,MAAMqC,SAG1B,gBAAAvB,GACNzC,KAAK2B,MAAMqC,aAAUP,EACrBzD,KAAK2B,MAAMC,cAAe,EAC1B5B,KAAK2B,MAAME,gBAAiB,EAC5B7B,KAAK2B,MAAMG,gBAAiB,EAC5B9B,KAAK2B,MAAM0B,sBAAmBI,EAC9BzD,KAAK2B,MAAMT,WAAQuC,EAEnBzD,KAAKe,KAAK,cAGJ,YAAA2B,CAAa1B,GACfA,EAAKgD,SAAWhE,KAAK2B,MAAMqC,UAC7BhE,KAAK2B,MAAMqC,QAAQI,QAAUpD,EAAKgD,QAClChE,KAAKe,KAAK,kBAAmB,CAACC,EAAKgD,WAGjChD,EAAKqD,OAASrE,KAAK2B,MAAMqC,UAC3BhE,KAAK2B,MAAMqC,QAAQH,QAAU7C,EAAKqD,MAAM9B,GACxCvC,KAAKe,KAAK,eAAgBC,EAAKqD,MAAM9B,KAIjC,WAAAI,CAAYzB,GAClB,MAAMoD,EAA2B,CAC/BC,KAAMrD,EAAMqD,KACZC,QAAStD,EAAMsD,QACfC,KAAM,eACNC,QAASxD,GAGXlB,KAAK2B,MAAMT,MAAQoD,EACnBtE,KAAKe,KAAK,QAASuD,GAGb,aAAAd,CAAcxC,GACpB,MAAO,CACLoD,QAASpD,EAAKgD,SAAW,GACzBH,QAAS7C,EAAKqD,OAAO9B,IAAM,EAC3B0B,aAAa,EACb3B,UAAWtC,KAAKsD,kBAAkBf,KCjMlC,MAAOoC,UAAkC7E,EAK7C,WAAAC,CAAYwB,EAAiCC,GAC3CC,QACAzB,KAAKuB,OAASA,EACdvB,KAAKwB,QAAUA,EAGV,WAAMoD,CAAMC,GACjB7E,KAAKe,KAAK,aAAc,CAAE8D,aAE1B,IACE,IAAIC,EAGFA,EAD4B,iBAA1B9E,KAAKwB,QAAQuD,eACI/E,KAAKgF,iBAAiBH,SAEtB7E,KAAKiF,SAASJ,GAInC,MAAMK,QAAmBlF,KAAKmF,yBAAyBL,GAEjDM,EAA4B,CAChCP,WACAQ,KAAMP,EAAWO,KACjBC,MAAOR,EAAWQ,MAClBC,UAAWT,EAAWS,UACtBC,cAAeN,EAAWd,QAC1BqB,WAAYP,EAAWO,YAOzB,aAHMzF,KAAK0F,iBAAiBN,GAC5BpF,KAAKe,KAAK,eAAgBqE,GAEnBA,EACP,MAAOlE,GAEP,MADAlB,KAAKe,KAAK,aAAcG,GAClBA,GAIF,cAAM+D,CAASJ,GACrB,MAAMc,EAAU3F,KAAK4F,aAAaf,GAElC,OAAO,IAAIgB,QAAQ,CAACC,EAASC,KAQ3B,GANA/F,KAAKgG,MAAQC,OAAOC,KAClBP,EACA,gBACA,2DACGlC,GAEAzD,KAAKgG,MAER,YADAD,EAAO,IAAI3C,MAAM,+BAKnB,MAAM+C,EAAkB/F,IAClBA,EAAMgG,SAAWH,OAAOI,SAASD,SAEb,kBAApBhG,EAAMY,KAAKsF,MACbL,OAAOM,oBAAoB,UAAWJ,GACtCnG,KAAKgG,OAAOQ,QACZV,EAAQ1F,EAAMY,KAAKyF,UACU,gBAApBrG,EAAMY,KAAKsF,OACpBL,OAAOM,oBAAoB,UAAWJ,GACtCnG,KAAKgG,OAAOQ,QACZT,EAAO,IAAI3C,MAAMhD,EAAMY,KAAKE,WAIhC+E,OAAOS,iBAAiB,UAAWP,GAGnC,MAAMQ,EAAcC,YAAY,KAC1B5G,KAAKgG,OAAOa,SACdC,cAAcH,GACdV,OAAOM,oBAAoB,UAAWJ,GACtCJ,EAAO,IAAI3C,MAAM,6BAElB,OAIC,sBAAM4B,CAAiBH,GACb7E,KAAK4F,aAAaf,GAUlC,IAEE,GAAsB,oBAAXoB,QAAiD,mBAAhBA,OAAOC,KACjD,aAAalG,KAAKiF,SAASJ,GAI7B,MAAM,IAAIzB,MAAM,2FAChB,MAAOlC,GACP,MAAM,IAAIkC,MAAM,8BAA+BlC,EAAgBsD,YAI3D,YAAAoB,CAAaf,GACnB,MAAMtD,EAASvB,KAAKuB,OAAOwF,UAAUlC,GACrC,IAAKtD,EACH,MAAM,IAAI6B,MAAM,YAAYyB,oBAG9B,MAsBMmC,EAAchH,KAAKuB,OAAOyF,aAAe,GAAGf,OAAOI,SAASD,uBAE5Da,EAAS,IAAIC,gBAAgB,CACjCC,UAAW5F,EAAO6F,SAClBC,aAAcL,EACdM,cAAe,OACfC,MAjBa,CACbC,OAAQ,uBACRC,SAAU,uBACVC,QAAS,wBACTC,QAAS,iBACTC,OAAQ,aACRC,MAAO,aACPC,MAAO,GACPC,IAAK,IASSlD,GACdlD,MAAO3B,KAAKgI,kBAGd,MAAO,GAhCU,CACfR,OAAQ,4CACRC,SAAU,8CACVC,QAAS,yCACTC,QAAS,2CACTC,OAAQ,2CACRC,MAAO,2CACPC,MAAO,GACPC,IAAK,IAwBYlD,MAAaoC,EAAOgB,aAGjC,aAAAD,GACN,OAAOE,KAAKC,SAASF,SAAS,IAAIG,UAAU,EAAG,IACxCF,KAAKC,SAASF,SAAS,IAAIG,UAAU,EAAG,IAGzC,8BAAMjD,CAAyBL,GAErC,MAAMuD,EAAa,GAAGvD,EAAWO,KAAK9C,MAAMuC,EAAWO,KAAKyC,SAAS9H,KAAKuB,OAAO+G,WAAa,2BAIxFtH,GADU,IAAIuH,aACCC,OAAOH,GAGtBI,QAAmBzI,KAAKwB,QAAQkH,OAAOC,OAAO3H,GAC9CyE,EAAa,KAAO3C,MAAMC,KAAK,IAAI6F,WAAWH,IACjDI,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,IAKR,MAAO,CACL5E,QAHa,IAAI6E,EAAOC,OAAOzD,GAGfrB,QAChBqB,WAAYA,GAIT,YAAM0D,GACX,UACQnJ,KAAKoJ,kBACXpJ,KAAKe,KAAK,UACV,MAAOG,GAEP,MADAC,QAAQD,MAAM,iBAAkBA,GAC1BA,GAIH,mBAAMmI,GACX,MAAM/D,QAActF,KAAKwB,QAAQS,QAAQC,QAAQ,wBAC3CoH,QAAgBtJ,KAAKwB,QAAQS,QAAQC,QAAQ,uBAEnD,IAAKoD,IAAUgE,EACb,OAAO,KAGT,IACE,MAAMjE,EAAOkE,KAAKC,MAAMF,GACxB,MAAO,CACLzE,SAAUQ,EAAKR,SACfQ,KAAMA,EAAKA,KACXC,QACAC,UAAWF,EAAKE,UAChBC,cAAeH,EAAKG,cACpBC,WAAYJ,EAAKI,YAEnB,MACA,OAAO,MAIJ,yBAAMgE,CAAoBC,GAC/B,GAAIA,EAAajE,WACf,OAAO,IAAIwD,EAAOC,OAAOQ,EAAajE,YAIxC,MAAMP,QAAmBlF,KAAKmF,yBAAyBuE,GACvD,OAAO,IAAIT,EAAOC,OAAOhE,EAAWO,YAG9B,sBAAMC,CAAiBN,SACvBpF,KAAKwB,QAAQS,QAAQsB,QAAQ,uBAAwB6B,EAAOE,aAC5DtF,KAAKwB,QAAQS,QAAQsB,QAAQ,sBAAuBgG,KAAKI,UAAU,CACvE9E,SAAUO,EAAOP,SACjBQ,KAAMD,EAAOC,KACbE,UAAWH,EAAOG,UAClBC,cAAeJ,EAAOI,cACtBC,WAAYL,EAAOK,cAIf,qBAAM2D,SACNpJ,KAAKwB,QAAQS,QAAQ0B,WAAW,8BAChC3D,KAAKwB,QAAQS,QAAQ0B,WAAW,uBAIjC,0BAAOiG,CAAoBC,GAChC,MAAMC,EAAY,IAAI5C,gBAAgB2C,EAAIE,MAAM,KAAK,IAC/CtF,EAAOqF,EAAUrJ,IAAI,QACrBS,EAAQ4I,EAAUrJ,IAAI,SACtBkB,EAAQmI,EAAUrJ,IAAI,SAExBS,EACF+E,OAAO+D,OAAOC,YAAY,CACxB3D,KAAM,cACNpF,MAAOA,GACN+E,OAAOI,SAASD,QAIjB3B,GAGFwB,OAAO+D,OAAOC,YAAY,CACxB3D,KAAM,gBACNG,QAAS,CACPhC,OACA9C,QACA0D,KAAM,CACJ9C,GAAI,eACJuF,MAAO,mBACPvD,KAAM,YACN2F,OAAQ,kCAEV5E,MAAO,oBACPC,UAAW4E,KAAKC,MAAQ,OAEzBnE,OAAOI,SAASD,SAMlB,MAAMiE,EAAoB,g+CCxRpBC,EAoBX,WAAAvK,CAAYwB,GAnBIvB,KAAAuC,GAAK,iBACLvC,KAAAuE,KAAO,kBACPvE,KAAAuK,OAAQ,EACRvK,KAAAwK,KAAO,yaAMfxK,KAAAiE,aAAc,EAEdjE,KAAAyK,aAAe,IAAI3K,EASzBE,KAAKuB,OAASA,EACdvB,KAAK0K,0BAA4BnJ,EAAOmJ,0BAG1C,EAAAvK,CAAoCC,EAAUC,GAC5CL,KAAKyK,aAAatK,GAAGC,EAAOC,GAG9B,GAAAM,CAAqCP,EAAUC,GAC7CL,KAAKyK,aAAa9J,IAAIP,EAAOC,GAG/B,aAAM6C,CAAQ3B,GACZ,IACE,GAAIA,GAAQoJ,aAAe3K,KAAK0K,0BAC9B,aAAa1K,KAAK4K,yBAIpB,MAAMC,EAAgBC,aAAa5I,QAAQ,0BACrC6I,EAAgBD,aAAa5I,QAAQ,0BAE3C,GAAI2I,GAAiBE,EAAe,CAClC/K,KAAKgE,QAAU6G,EACf7K,KAAK6D,QAAUmH,SAASD,GACxB/K,KAAKiE,aAAc,EAEnB,MAAMgH,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EAITjL,KAAKgE,QAAUhE,KAAKkL,sBACpBlL,KAAK6D,QAAUtC,GAAQsC,SAAW7D,KAAKuB,OAAO4J,OAAO,IAAI5I,IAAM,EAC/DvC,KAAKiE,aAAc,EAGnB6G,aAAavH,QAAQ,yBAA0BvD,KAAKgE,SACpD8G,aAAavH,QAAQ,yBAA0BvD,KAAK6D,QAAQoE,YAE5D,MAAMgD,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EACP,MAAO/J,GAEP,MADAlB,KAAKyK,aAAa1J,KAAK,QAASG,GAC1BA,GAIV,gBAAMwC,GACJ,IACE1D,KAAKgE,aAAUP,EACfzD,KAAK6D,aAAUJ,EACfzD,KAAKiE,aAAc,EACnBjE,KAAK6E,cAAWpB,EAGhBqH,aAAanH,WAAW,0BACxBmH,aAAanH,WAAW,0BAExB3D,KAAKyK,aAAa1J,KAAK,cACvB,MAAOG,GAEP,MADAlB,KAAKyK,aAAa1J,KAAK,QAASG,GAC1BA,GAIV,gBAAM6C,GACJ,IAAK/D,KAAKgE,QACR,MAAM,IAAIZ,MAAM,wBAElB,OAAOpD,KAAKgE,QAGd,gBAAMG,GACJ,IAAKnE,KAAK6D,QACR,MAAM,IAAIT,MAAM,sBAElB,OAAOpD,KAAK6D,QAGd,iBAAMuH,GA0BJ,OAzBKpL,KAAK6E,WAER7E,KAAK6E,SAAW,CACdwG,QAASC,MAAOC,IACd,OAAQA,EAAKC,QACX,IAAK,sBACH,MAAO,CAACxL,KAAKgE,SACf,IAAK,eACH,OAAOhE,KAAKgE,QAAU,CAAChE,KAAKgE,SAAW,GACzC,IAAK,cACH,MAAO,KAAKhE,KAAK6D,SAASoE,SAAS,MACrC,IAAK,gBACH,MAAO,KAAK,IAAIwD,OAAO,OACzB,QACE,MAAM,IAAIrI,MAAM,UAAUmI,EAAKC,0BAGrCrL,GAAI,CAACC,EAAesL,KAClB1L,KAAKG,GAAGC,EAAcsL,IAExBC,eAAgB,CAACvL,EAAesL,KAC9B1L,KAAKW,IAAIP,EAAcsL,MAItB1L,KAAK6E,SAGd,eAAM+G,GACJ,MAAM/G,QAAiB7E,KAAKoL,cAC5B,MAAO,CACLS,WAAY,IAAM7L,KAAK+D,aACvB+H,YAActH,GAAoBK,EAASwG,QAAQ,CACjDG,OAAQ,gBACRvE,OAAQ,CAACzC,EAASxE,KAAKgE,WAEzB+H,gBAAkBC,GAETnG,QAAQC,QAAQ,KAAK,IAAI2F,OAAO,SAK7C,kBAAMvH,GAEJ,QADsB4G,aAAa5I,QAAQ,0BAI7C,iBAAM0B,CAAYC,GAEhB,IADc7D,KAAKuB,OAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,GAElD,MAAM,IAAIT,MAAM,SAASS,oBAG3B7D,KAAK6D,QAAUA,EACfiH,aAAavH,QAAQ,yBAA0BM,EAAQoE,YAEvDjI,KAAKyK,aAAa1J,KAAK,SAAU,CAC/BiD,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIsB,GACbgB,SAAU7E,KAAK6E,WAIX,4BAAM+F,GACZ,IAAK5K,KAAK0K,0BACR,MAAM,IAAItH,MAAM,+CAIlB,IAAIsG,QAAqB1J,KAAK0K,0BAA0BrB,gBAExD,IAAKK,GAAgBA,EAAanE,UAAY4E,KAAKC,MAAO,CAExD,MAAMvF,QAAiB7E,KAAKmM,uBAC5BzC,QAAqB1J,KAAK0K,0BAA0B9F,MAAMC,GAI5D7E,KAAKgE,QAAU0F,EAAalE,eAAiBxF,KAAKoM,+BAA+B1C,GACjF1J,KAAK6D,QAAU7D,KAAKuB,OAAO4J,OAAO,IAAI5I,IAAM,EAC5CvC,KAAKiE,aAAc,EAGnB6G,aAAavH,QAAQ,yBAA0BvD,KAAKgE,SACpD8G,aAAavH,QAAQ,yBAA0BvD,KAAK6D,QAAQoE,YAE5D,MAAMgD,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EAGD,0BAAMkB,GAGZ,MAAO,SAGD,8BAAAC,CAA+B1C,GAErC,MAAM1I,EAAO,GAAG0I,EAAa7E,YAAY6E,EAAarE,KAAK9C,KAC3D,IAAI8J,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAItL,EAAKuL,OAAQD,IAAK,CAEpCD,GAASA,GAAQ,GAAKA,EADTrL,EAAKwL,WAAWF,GAE7BD,GAAcA,EAKhB,MAAO,KADKnE,KAAKuE,IAAIJ,GAAMpE,SAAS,IAAIc,SAAS,EAAG,OAClC,IAAI0C,OAAO,MAGvB,mBAAAP,GAEN,MAAMwB,EAAc,IAAI9D,WAAW,IAEnC,OADAF,OAAOiE,gBAAgBD,GAChB,KAAO5J,MAAMC,KAAK2J,GACtB7D,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,WC9OC4D,EAoBX,WAAA7M,CAAYwB,GAnBIvB,KAAAuC,GAAK,iBACLvC,KAAAuE,KAAO,kBACPvE,KAAAuK,OAAQ,EACRvK,KAAAwK,KAAO,yaAMfxK,KAAAiE,aAAc,EAEdjE,KAAAyK,aAAe,IAAI3K,EASzBE,KAAKuB,OAASA,EACdvB,KAAK0K,0BAA4BnJ,EAAOmJ,0BAG1C,EAAAvK,CAAoCC,EAAUC,GAC5CL,KAAKyK,aAAatK,GAAGC,EAAOC,GAG9B,GAAAM,CAAqCP,EAAUC,GAC7CL,KAAKyK,aAAa9J,IAAIP,EAAOC,GAG/B,aAAM6C,CAAQ3B,GACZ,IACE,GAAIA,GAAQoJ,aAAe3K,KAAK0K,0BAC9B,aAAa1K,KAAK4K,yBAIpB,MAAMC,EAAgBC,aAAa5I,QAAQ,yBACrC6I,EAAgBD,aAAa5I,QAAQ,yBAE3C,GAAI2I,GAAiBE,EAAe,CAClC/K,KAAKgE,QAAU6G,EACf7K,KAAK6D,QAAUmH,SAASD,GACxB/K,KAAKiE,aAAc,EAEnB,MAAMgH,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EAITjL,KAAKgE,QAAUhE,KAAKkL,sBACpBlL,KAAK6D,QAAUtC,GAAQsC,SAAW7D,KAAKuB,OAAO4J,OAAO,IAAI5I,IAAM,EAC/DvC,KAAKiE,aAAc,EAGnB6G,aAAavH,QAAQ,wBAAyBvD,KAAKgE,SACnD8G,aAAavH,QAAQ,wBAAyBvD,KAAK6D,QAAQoE,YAE3D,MAAMgD,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EACP,MAAO/J,GAEP,MADAlB,KAAKyK,aAAa1J,KAAK,QAASG,GAC1BA,GAIV,gBAAMwC,GACJ,IACE1D,KAAKgE,aAAUP,EACfzD,KAAK6D,aAAUJ,EACfzD,KAAKiE,aAAc,EACnBjE,KAAK6E,cAAWpB,EAGhBqH,aAAanH,WAAW,yBACxBmH,aAAanH,WAAW,yBAExB3D,KAAKyK,aAAa1J,KAAK,cACvB,MAAOG,GAEP,MADAlB,KAAKyK,aAAa1J,KAAK,QAASG,GAC1BA,GAIV,gBAAM6C,GACJ,IAAK/D,KAAKgE,QACR,MAAM,IAAIZ,MAAM,wBAElB,OAAOpD,KAAKgE,QAGd,gBAAMG,GACJ,IAAKnE,KAAK6D,QACR,MAAM,IAAIT,MAAM,sBAElB,OAAOpD,KAAK6D,QAGd,iBAAMuH,GAoCJ,OAnCKpL,KAAK6E,WAER7E,KAAK6E,SAAW,CACdwG,QAASC,MAAOC,IACd,OAAQA,EAAKC,QACX,IAAK,sBACH,MAAO,CAACxL,KAAKgE,SACf,IAAK,eACH,OAAOhE,KAAKgE,QAAU,CAAChE,KAAKgE,SAAW,GACzC,IAAK,cACH,MAAO,KAAKhE,KAAK6D,SAASoE,SAAS,MACrC,IAAK,iBACH,MAAO,qBACT,IAAK,sBACH,MAAO,KAAK,IAAIwD,OAAO,MACzB,IAAK,gBAEL,IAAK,uBACH,MAAO,KAAK,IAAIA,OAAO,OACzB,QACE,MAAM,IAAIrI,MAAM,UAAUmI,EAAKC,0BAGrCrL,GAAI,CAACC,EAAesL,KAClB1L,KAAKG,GAAGC,EAAcsL,IAExBC,eAAgB,CAACvL,EAAesL,KAC9B1L,KAAKW,IAAIP,EAAcsL,IAGzBzH,YAAa,IAAMjE,KAAKiE,YACxB4I,WAAY,KAAA,CAAShJ,QAAS7D,KAAK6D,UACnC+H,UAAW,IAAM5L,KAAK4L,cAGnB5L,KAAK6E,SAGd,eAAM+G,GACJ,MAAM/G,QAAiB7E,KAAKoL,cAC5B,MAAO,CACLS,WAAY,IAAM7L,KAAK+D,aACvBI,WAAY,IAAMnE,KAAKmE,aACvB2H,YAActH,GAAoBK,EAASwG,QAAQ,CACjDG,OAAQ,gBACRvE,OAAQ,CAACzC,EAASxE,KAAKgE,WAEzB+H,gBAAkBC,GACTnG,QAAQC,QAAQ,KAAK,IAAI2F,OAAO,QAEzCqB,gBAAkBd,GACTnG,QAAQC,QAAQ,CACrBuG,KAAM,KAAK,IAAIZ,OAAO,MACtBsB,KAAM,IAAMlH,QAAQC,QAAQ,CAC1BkH,UAAW,KAAK,IAAIvB,OAAO,MAC3BwB,YAAa,MACbC,gBAAiB,KAAK,IAAIzB,OAAO,MACjC0B,OAAQ,OAOlB,kBAAMjJ,GAEJ,QADsB4G,aAAa5I,QAAQ,yBAI7C,iBAAM0B,CAAYC,GAEhB,IADc7D,KAAKuB,OAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,GAElD,MAAM,IAAIT,MAAM,SAASS,oBAG3B7D,KAAK6D,QAAUA,EACfiH,aAAavH,QAAQ,wBAAyBM,EAAQoE,YAEtDjI,KAAKyK,aAAa1J,KAAK,SAAU,CAC/BiD,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIsB,GACbgB,SAAU7E,KAAK6E,WAIX,4BAAM+F,GACZ,IAAK5K,KAAK0K,0BACR,MAAM,IAAItH,MAAM,+CAIlB,IAAIsG,QAAqB1J,KAAK0K,0BAA0BrB,gBAExD,IAAKK,GAAgBA,EAAanE,UAAY4E,KAAKC,MAAO,CAExD,MAAMvF,QAAiB7E,KAAKmM,uBAC5BzC,QAAqB1J,KAAK0K,0BAA0B9F,MAAMC,GAI5D7E,KAAKgE,QAAU0F,EAAalE,eAAiBxF,KAAKoM,+BAA+B1C,GACjF1J,KAAK6D,QAAU7D,KAAKuB,OAAO4J,OAAO,IAAI5I,IAAM,EAC5CvC,KAAKiE,aAAc,EAGnB6G,aAAavH,QAAQ,wBAAyBvD,KAAKgE,SACnD8G,aAAavH,QAAQ,wBAAyBvD,KAAK6D,QAAQoE,YAE3D,MAAMgD,EAA+B,CACnCjH,QAAShE,KAAKgE,QACdK,MAAO,CAAE9B,GAAIvC,KAAK6D,SAClBgB,SAAU7E,KAAK6E,UAIjB,OADA7E,KAAKyK,aAAa1J,KAAK,UAAWkK,GAC3BA,EAGD,0BAAMkB,GAGZ,MAAO,SAGD,8BAAAC,CAA+B1C,GAErC,MAAM1I,EAAO,GAAG0I,EAAa7E,YAAY6E,EAAarE,KAAK9C,WAC3D,IAAI8J,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAItL,EAAKuL,OAAQD,IAAK,CAEpCD,GAASA,GAAQ,GAAKA,EADTrL,EAAKwL,WAAWF,GAE7BD,GAAcA,EAKhB,MAAO,KADKnE,KAAKuE,IAAIJ,GAAMpE,SAAS,IAAIc,SAAS,EAAG,OAClC,IAAI0C,OAAO,MAGvB,mBAAAP,GAEN,MAAMwB,EAAc,IAAI9D,WAAW,IAEnC,OADAF,OAAOiE,gBAAgBD,GAChB,KAAO5J,MAAMC,KAAK2J,GACtB7D,IAAIC,GAAKA,EAAEb,SAAS,IAAIc,SAAS,EAAG,MACpCC,KAAK,KCpOL,MAAMoE,EAAyC,CACpDrI,SAAU,SACV9C,QAAS,CACPC,QAASoJ,MAAO+B,IACd,IACE,MAAsB,oBAAXpH,OACF6E,aAAa5I,QAAQmL,GAEvB,KACP,MACA,OAAO,OAGX9J,QAAS+H,MAAO+B,EAAaC,KAC3B,IACwB,oBAAXrH,QACT6E,aAAavH,QAAQ8J,EAAKC,GAE5B,SAIJ3J,WAAY2H,MAAO+B,IACjB,IACwB,oBAAXpH,QACT6E,aAAanH,WAAW0J,GAE1B,UAKN3E,OAAQ,CACN6E,oBAAsBzM,IACpB,MAAM0M,EAAQ,IAAI5E,WAAW9H,GAC7B,GAAsB,oBAAXmF,QAA0BA,OAAOyC,OAC1CA,OAAOiE,gBAAgBa,QAGvB,IAAK,IAAIlB,EAAI,EAAGA,EAAIxL,EAAMwL,IACxBkB,EAAMlB,GAAKpE,KAAKuF,MAAsB,IAAhBvF,KAAKC,UAG/B,OAAOqF,GAET7E,OAAQ2C,MAAOtK,IACb,GAAsB,oBAAXiF,QAA0BA,OAAOyC,QAAUzC,OAAOyC,OAAOgF,OAAQ,CAC1E,MAAMjF,QAAmBC,OAAOgF,OAAOC,OAAO,UAAW3M,GACzD,OAAO,IAAI4H,WAAWH,GACjB,CAEL,MACM4D,EADSuB,QAAQ,UACHC,WAAW,UAE/B,OADAxB,EAAKyB,OAAO9M,GACL,IAAI4H,WAAWyD,EAAKsB,aAIjCI,QAAS,CACPC,MAAO1C,MAAOzB,EAAaoE,KACzB,GAAsB,oBAAXhI,OACT,OAAO+H,MAAMnE,EAAKoE,GACb,CAEL,MAAQC,QAASF,SAAgBnI,QAAAC,UAAAqI,KAAA,WAAA,OAAAC,EAAA,GACjC,OAAOJ,EAAMnE,EAAKoE,OCjGpB,SAAUI,EAAoBJ,GAClC,MAAM1M,EAAuB,CAC3B+M,QAASL,EAAQM,UAAUhK,MAAQ,eACnCiK,OAAQP,EAAQM,UAAU1E,IAC1B4E,QAASR,EAAQM,UAAUG,QAAQ,GACnCC,eAAgBV,EAAQM,UAAUK,YAClCC,UAAWZ,EAAQY,UACnB1D,OAAQ8C,EAAQ9C,OAChBR,YAAasD,EAAQtD,YACrBmE,MAAOb,EAAQa,OAGXC,EAAS,IAAIzN,EAAcC,EAAQ6L,GAGzC,GAAIa,EAAQtD,YAAa,CACvB,MAAMqE,EAAiB,IAAIrK,EAA0BsJ,EAAQtD,YAAayC,GAGpE6B,EAAsB,IAAI3E,EAA2B,CACzDa,OAAQ8C,EAAQ9C,OAChB0D,UAAWZ,EAAQY,UACnBP,QAAS/M,EAAO+M,QAChBG,QAASlN,EAAOkN,QAChBE,eAAgBpN,EAAOoN,eACvBH,OAAQjN,EAAOiN,OACf7D,YAAasD,EAAQtD,YACrBD,0BAA2BsE,IAGvBE,EAAiB,IAAItC,EAAsB,CAC/CzB,OAAQ8C,EAAQ9C,OAChB0D,UAAWZ,EAAQY,UACnBN,SAAUN,EAAQM,SAClB5D,YAAasD,EAAQtD,YACrBD,0BAA2BsE,IAG7BD,EAAO1M,aAAa4M,GACpBF,EAAO1M,aAAa6M,OACf,CAEL,MAAMD,EAAsB,IAAI3E,EAA2B,CACzDa,OAAQ8C,EAAQ9C,OAChB0D,UAAWZ,EAAQY,UACnBP,QAAS/M,EAAO+M,QAChBG,QAASlN,EAAOkN,QAChBE,eAAgBpN,EAAOoN,eACvBH,OAAQjN,EAAOiN,SAGXU,EAAiB,IAAItC,EAAsB,CAC/CzB,OAAQ8C,EAAQ9C,OAChB0D,UAAWZ,EAAQY,UACnBN,SAAUN,EAAQM,WAGpBQ,EAAO1M,aAAa4M,GACpBF,EAAO1M,aAAa6M,GAGtB,OAAOH,CACT,CAGM,SAAUI,EAA0ClB,GACxD,MAAMe,EAAiBf,EAAQtD,YAC7B,IAAIhG,EAA0BsJ,EAAQtD,YAAayC,QACnD3J,EAEF,OH8K+ClC,EG9KP,IACnC0M,EACHvD,0BAA2BsE,GH6KtB,KAAA,CACLzM,GAAI,iBACJgC,KAAM,kBACN6K,QAAS,yaACTC,eAAgB,UAChBC,gBAAiB,KAGR,CACLhN,UAHgB,IAAIgI,EAA2B/I,GAI/CgO,OAAQ,CACNC,OAAQlE,SAEC,gCAdb,IAA2C/J,CG1KjD,CAGM,SAAUkO,EAAqCxB,GACnD,MAAMe,EAAiBf,EAAQtD,YAC7B,IAAIhG,EAA0BsJ,EAAQtD,YAAayC,QACnD3J,EAEF,OFuL0ClC,EEvLP,IAC9B0M,EACHvD,0BAA2BsE,GFsLtB,IAAIpC,EAAsBrL,GAD7B,IAAsCA,CEnL5C,CAGM,SAAUmO,EAA+BzB,GAC7C,MAAMe,EAAiBf,EAAQtD,YAC7B,IAAIhG,EAA0BsJ,EAAQtD,YAAayC,QACnD3J,EAEF,OFgLoClC,EEhLP,IACxB0M,EACHvD,0BAA2BsE,GF+KtB,KAAA,CACLzM,GAAI,iBACJgC,KAAM,kBACN+B,KAAM,iBACNkE,KAAM,yaACDtH,QAASoI,MAAOqE,IAClB,MAAMrN,EAAY,IAAIsK,EAAsBrL,GACtCP,QAAasB,EAAUY,QAAQyM,GACrC,MAAO,CACLC,SAAU,CAAC5O,EAAKgD,SAChBH,QAAS7C,EAAKqD,OAAO9B,IAAM,IAGhCmB,WAAY4H,YAGZuE,YAAavE,UACX,MAAMhJ,EAAY,IAAIsK,EAAsBrL,GAE5C,MAAO,OADee,EAAUyB,eAGlCI,WAAYmH,UACV,MAAMhJ,EAAY,IAAIsK,EAAsBrL,GAC5C,aAAae,EAAU6B,cAEzBiH,YAAaE,UACX,MAAMhJ,EAAY,IAAIsK,EAAsBrL,GAC5C,aAAae,EAAU8I,eAEzBlH,aAAcoH,UACZ,MAAMhJ,EAAY,IAAIsK,EAAsBrL,GAC5C,aAAae,EAAU4B,gBAEzBN,YAAa0H,MAAOzH,IAClB,MAAMvB,EAAY,IAAIsK,EAAsBrL,GAE5C,aADMe,EAAUsB,YAAYC,GACrB,CACLtB,GAAIsB,EACJU,KAAMhD,EAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,IAAUU,MAAQ,UACzDwJ,QAASxM,EAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,IAAUkK,SAAW,UAC/D+B,eAAgBvO,EAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,IAAUiM,gBAAkB,CAC3EvL,KAAM,QACNwL,OAAQ,MACRC,SAAU,IAEZC,QAAS1O,EAAO4J,OAAOc,KAAKC,GAAKA,EAAE3J,KAAOsB,IAAUoM,SAAW,CAC7D/B,QAAS,CAAEgC,KAAM,CAAC,4BAClBC,OAAQ,CAAED,KAAM,CAAC,+BAIvBE,kBAAoBR,MAGpBS,eAAiBxM,MAGjByM,UAAYtP,MAGZuP,aAAc,SA7DZ,IAAgChP,CE5KtC,CAGM,SAAUiP,EAAiBzB,GAC/B,MAAOpN,EAAO8O,GAAYC,EAAS3B,EAAOjL,YAkB1C,OAhBA6M,EAAU,KACR,MAAMC,EAAoB,KACxBH,EAAS1B,EAAOjL,aASlB,OANAiL,EAAO5O,GAAG,UAAWyQ,GACrB7B,EAAO5O,GAAG,aAAcyQ,GACxB7B,EAAO5O,GAAG,kBAAmByQ,GAC7B7B,EAAO5O,GAAG,eAAgByQ,GAC1B7B,EAAO5O,GAAG,QAASyQ,GAEZ,KACL7B,EAAO3N,uBAER,CAAC2N,IAEG,IACFpN,EACHuB,QAAS6L,EAAO7L,QAAQ2N,KAAK9B,GAC7BrL,WAAYqL,EAAOrL,WAAWmN,KAAK9B,GACnCnL,YAAamL,EAAOnL,YAAYiN,KAAK9B,GACrC9K,YAAa8K,EAAO9K,YAAY4M,KAAK9B,GAEzC,CAGM,SAAU+B,EAAe9B,GAC7B,MAAO+B,EAAWC,GAAgBN,GAAS,IACpCrL,EAAM4L,GAAWP,EAAS,OAC1BxP,EAAOgQ,GAAYR,EAAuB,MAEjDC,EAAU,KAER3B,EAAe3F,gBAAgB8E,KAAK/I,IAC9BA,GAAUA,EAAOG,UAAY4E,KAAKC,OACpC6G,EAAQ7L,MAGX,CAAC4J,IA8BJ,MAAO,CACL3J,OACA0L,YACA7P,QACA0D,MAhCY0G,MAAOzG,IACnBmM,GAAa,GACbE,EAAS,MAET,IACE,MAAM9L,QAAe4J,EAAepK,MAAMC,GAE1C,OADAoM,EAAQ7L,GACDA,EACP,MAAO+L,GAEP,MADAD,EAASC,GACHA,UAENH,GAAa,KAqBf7H,OAjBamC,UACb0F,GAAa,GACb,UACQhC,EAAe7F,SACrB8H,EAAQ,MACR,MAAOE,GACPD,EAASC,WAETH,GAAa,KAWnB,CAGM,SAAUI,EACdC,EACAC,GAEA,OAAO,SAA0BC,GAC/B,MAAMxC,EAASV,EAAoBiD,GACnC,OAAOE,EAAMC,cAAcJ,EAAW,IAAKE,EAAOxC,UACpD,CACF,CAWO,MAAM2C,EAAiB,CAC5BnP,GAAI,EACJgC,KAAM,WACNwJ,QAAS,YACT+B,eAAgB,CAAEvL,KAAM,QAASwL,OAAQ,MAAOC,SAAU,IAC1DC,QAAS,CACP/B,QAAS,CAAEgC,KAAM,CAAC,8CAClBC,OAAQ,CAAED,KAAM,CAAC,+CAEnByB,eAAgB,CACdzD,QAAS,CAAE3J,KAAM,YAAasF,IAAK,0BAI1B+H,EAAgB,CAC3BrP,GAAI,EACJgC,KAAM,SACNwJ,QAAS,SACT+B,eAAgB,CAAEvL,KAAM,eAAgBwL,OAAQ,MAAOC,SAAU,IACjEC,QAAS,CACP/B,QAAS,CAAEgC,KAAM,CAAC,6CAClBC,OAAQ,CAAED,KAAM,CAAC,8CAEnByB,eAAgB,CACdzD,QAAS,CAAE3J,KAAM,YAAasF,IAAK,gCAErCgI,SAAS,GAGEC,EAAiB,CAC5BvP,GAAI,SACJgC,KAAM,UACNwJ,QAAS,UACT+B,eAAgB,CAAEvL,KAAM,gBAAiBwL,OAAQ,MAAOC,SAAU,IAClEC,QAAS,CACP/B,QAAS,CAAEgC,KAAM,CAAC,8CAClBC,OAAQ,CAAED,KAAM,CAAC,+CAEnByB,eAAgB,CACdzD,QAAS,CAAE3J,KAAM,YAAasF,IAAK,iCAErCgI,SAAS,4MCtPJ,SAAaE,GAEhB,SAASC,IAEb,CAEI,SAASC,EAAaC,GAClB,MAAqB,iBAANA,GAAwB,OAANA,GAA4B,mBAANA,CAC/D,CACI,MAAMC,EAAiCH,EACvC,SAASI,EAAgBC,EAAI9N,GACzB,IACI+N,OAAOC,eAAeF,EAAI,OAAQ,CAC9B/E,MAAO/I,EACPiO,cAAc,GAE9B,CACQ,MAAOC,GAGf,CACA,CAEI,MAAMC,EAAkB7M,QAClB8M,EAAsB9M,QAAQ+M,UAAUzE,KACxC0E,EAAwBhN,QAAQE,OAAO8K,KAAK6B,GAElD,SAASI,EAAWC,GAChB,OAAO,IAAIL,EAAgBK,EACnC,CAEI,SAASC,EAAoB1F,GACzB,OAAOwF,EAAWhN,GAAWA,EAAQwH,GAC7C,CAEI,SAAS2F,EAAoBC,GACzB,OAAOL,EAAsBK,EACrC,CACI,SAASC,EAAmBC,EAASC,EAAaC,GAG9C,OAAOX,EAAoBY,KAAKH,EAASC,EAAaC,EAC9D,CAII,SAASE,EAAYJ,EAASC,EAAaC,GACvCH,EAAmBA,EAAmBC,EAASC,EAAaC,QAAa7P,EAAW0O,EAC5F,CACI,SAASsB,EAAgBL,EAASC,GAC9BG,EAAYJ,EAASC,EAC7B,CACI,SAASK,EAAcN,EAASE,GAC5BE,EAAYJ,OAAS3P,EAAW6P,EACxC,CACI,SAASK,EAAqBP,EAASQ,EAAoBC,GACvD,OAAOV,EAAmBC,EAASQ,EAAoBC,EAC/D,CACI,SAASC,EAA0BV,GAC/BD,EAAmBC,OAAS3P,EAAW0O,EAC/C,CACI,IAAI4B,EAAkBC,IAClB,GAA8B,mBAAnBC,eACPF,EAAkBE,mBAEjB,CACD,MAAMC,EAAkBlB,OAAoBvP,GAC5CsQ,EAAkBI,GAAMhB,EAAmBe,EAAiBC,EACxE,CACQ,OAAOJ,EAAgBC,IAE3B,SAASI,EAAYC,EAAGC,EAAG/I,GACvB,GAAiB,mBAAN8I,EACP,MAAM,IAAIE,UAAU,8BAExB,OAAOC,SAAS5B,UAAU6B,MAAMlB,KAAKc,EAAGC,EAAG/I,EACnD,CACI,SAASmJ,EAAYL,EAAGC,EAAG/I,GACvB,IACI,OAAOyH,EAAoBoB,EAAYC,EAAGC,EAAG/I,GACzD,CACQ,MAAO+B,GACH,OAAO2F,EAAoB3F,EACvC,CACA,CAII,MAAMqH,EAAuB,MAO7B,MAAMC,EACF,WAAA7U,GACIC,KAAK6U,QAAU,EACf7U,KAAK8U,MAAQ,EAEb9U,KAAK+U,OAAS,CACVC,UAAW,GACXC,WAAOxR,GAEXzD,KAAKkV,MAAQlV,KAAK+U,OAIlB/U,KAAK6U,QAAU,EAEf7U,KAAK8U,MAAQ,CACzB,CACQ,UAAIvI,GACA,OAAOvM,KAAK8U,KACxB,CAKQ,IAAAK,CAAKC,GACD,MAAMC,EAAUrV,KAAKkV,MACrB,IAAII,EAAUD,EACVA,EAAQL,UAAUzI,SAAWoI,EAAuB,IACpDW,EAAU,CACNN,UAAW,GACXC,WAAOxR,IAKf4R,EAAQL,UAAUG,KAAKC,GACnBE,IAAYD,IACZrV,KAAKkV,MAAQI,EACbD,EAAQJ,MAAQK,KAElBtV,KAAK8U,KACnB,CAGQ,KAAAS,GACI,MAAMC,EAAWxV,KAAK+U,OACtB,IAAIU,EAAWD,EACf,MAAME,EAAY1V,KAAK6U,QACvB,IAAIc,EAAYD,EAAY,EAC5B,MAAME,EAAWJ,EAASR,UACpBI,EAAUQ,EAASF,GAazB,OAZIC,IAAchB,IACdc,EAAWD,EAASP,MACpBU,EAAY,KAGd3V,KAAK8U,MACP9U,KAAK6U,QAAUc,EACXH,IAAaC,IACbzV,KAAK+U,OAASU,GAGlBG,EAASF,QAAajS,EACf2R,CACnB,CASQ,OAAAnU,CAAQ+S,GACJ,IAAI1H,EAAItM,KAAK6U,QACTgB,EAAO7V,KAAK+U,OACZa,EAAWC,EAAKb,UACpB,OAAO1I,IAAMsJ,EAASrJ,aAAyB9I,IAAfoS,EAAKZ,OAC7B3I,IAAMsJ,EAASrJ,SACfsJ,EAAOA,EAAKZ,MACZW,EAAWC,EAAKb,UAChB1I,EAAI,EACoB,IAApBsJ,EAASrJ,UAIjByH,EAAS4B,EAAStJ,MAChBA,CAElB,CAGQ,IAAAwJ,GACI,MAAMC,EAAQ/V,KAAK+U,OACbiB,EAAShW,KAAK6U,QACpB,OAAOkB,EAAMf,UAAUgB,EACnC,EAGI,MAAMC,EAAaC,OAAO,kBACpBC,EAAaD,OAAO,kBACpBE,EAAcF,OAAO,mBACrBG,EAAYH,OAAO,iBACnBI,EAAeJ,OAAO,oBAE5B,SAASK,EAAsCC,EAAQC,GACnDD,EAAOE,qBAAuBD,EAC9BA,EAAOE,QAAUH,EACK,aAAlBC,EAAOG,OACPC,EAAqCL,GAEd,WAAlBC,EAAOG,OACZE,EAA+CN,GAG/CO,EAA+CP,EAAQC,EAAOO,aAE1E,CAGI,SAASC,EAAkCT,EAAQtD,GAE/C,OAAOgE,GADQV,EAAOE,qBACcxD,EAC5C,CACI,SAASiE,EAAmCX,GACxC,MAAMC,EAASD,EAAOE,qBACA,aAAlBD,EAAOG,OACPQ,EAAiCZ,EAAQ,IAAIjC,UAAU,qFAGvD8C,EAA0Cb,EAAQ,IAAIjC,UAAU,qFAEpEkC,EAAOa,0BAA0BhB,KACjCG,EAAOE,aAAUlT,EACjB+S,EAAOE,0BAAuBjT,CACtC,CAEI,SAAS8T,EAAoBhT,GACzB,OAAO,IAAIgQ,UAAU,UAAYhQ,EAAO,oCAChD,CAEI,SAASsS,EAAqCL,GAC1CA,EAAOgB,eAAiB1E,EAAW,CAAChN,EAASC,KACzCyQ,EAAOiB,uBAAyB3R,EAChC0Q,EAAOkB,sBAAwB3R,GAE3C,CACI,SAASgR,EAA+CP,EAAQtD,GAC5D2D,EAAqCL,GACrCY,EAAiCZ,EAAQtD,EACjD,CACI,SAAS4D,EAA+CN,GACpDK,EAAqCL,GACrCmB,EAAkCnB,EAC1C,CACI,SAASY,EAAiCZ,EAAQtD,QACTzP,IAAjC+S,EAAOkB,wBAGX5D,EAA0B0C,EAAOgB,gBACjChB,EAAOkB,sBAAsBxE,GAC7BsD,EAAOiB,4BAAyBhU,EAChC+S,EAAOkB,2BAAwBjU,EACvC,CACI,SAAS4T,EAA0Cb,EAAQtD,GACvD6D,EAA+CP,EAAQtD,EAC/D,CACI,SAASyE,EAAkCnB,QACD/S,IAAlC+S,EAAOiB,yBAGXjB,EAAOiB,4BAAuBhU,GAC9B+S,EAAOiB,4BAAyBhU,EAChC+S,EAAOkB,2BAAwBjU,EACvC,CAII,MAAMmU,EAAiBC,OAAOC,UAAY,SAAU5F,GAChD,MAAoB,iBAANA,GAAkB4F,SAAS5F,IAKvC6F,EAAY7P,KAAK8P,OAAS,SAAUC,GACtC,OAAOA,EAAI,EAAI/P,KAAKgQ,KAAKD,GAAK/P,KAAKuF,MAAMwK,IAI7C,SAASE,EAAajG,GAClB,MAAoB,iBAANA,GAA+B,mBAANA,CAC/C,CACI,SAASkG,EAAiBC,EAAKC,GAC3B,QAAY7U,IAAR4U,IAAsBF,EAAaE,GACnC,MAAM,IAAI9D,UAAU,GAAG+D,sBAEnC,CAEI,SAASC,EAAerG,EAAGoG,GACvB,GAAiB,mBAANpG,EACP,MAAM,IAAIqC,UAAU,GAAG+D,uBAEnC,CAEI,SAASE,EAAStG,GACd,MAAqB,iBAANA,GAAwB,OAANA,GAA4B,mBAANA,CAC/D,CACI,SAASuG,EAAavG,EAAGoG,GACrB,IAAKE,EAAStG,GACV,MAAM,IAAIqC,UAAU,GAAG+D,sBAEnC,CACI,SAASI,EAAuBxG,EAAGyG,EAAUL,GACzC,QAAU7U,IAANyO,EACA,MAAM,IAAIqC,UAAU,aAAaoE,qBAA4BL,MAEzE,CACI,SAASM,EAAoB1G,EAAG2G,EAAOP,GACnC,QAAU7U,IAANyO,EACA,MAAM,IAAIqC,UAAU,GAAGsE,qBAAyBP,MAE5D,CAEI,SAASQ,EAA0BxL,GAC/B,OAAOuK,OAAOvK,EACtB,CACI,SAASyL,EAAmB7G,GACxB,OAAa,IAANA,EAAU,EAAIA,CAC7B,CACI,SAAS8G,EAAY9G,GACjB,OAAO6G,EAAmBhB,EAAU7F,GAC5C,CAEI,SAAS+G,EAAwC3L,EAAOgL,GACpD,MAAMY,EAAa,EACbC,EAAatB,OAAOuB,iBAC1B,IAAIlH,EAAI2F,OAAOvK,GAEf,GADA4E,EAAI6G,EAAmB7G,IAClB0F,EAAe1F,GAChB,MAAM,IAAIqC,UAAU,GAAG+D,4BAG3B,GADApG,EAAI8G,EAAY9G,GACZA,EAAIgH,GAAchH,EAAIiH,EACtB,MAAM,IAAI5E,UAAU,GAAG+D,sCAA4CY,QAAiBC,gBAExF,OAAKvB,EAAe1F,IAAY,IAANA,EAOnBA,EANI,CAOnB,CAEI,SAASmH,EAAqBnH,EAAGoG,GAC7B,IAAKgB,GAAiBpH,GAClB,MAAM,IAAIqC,UAAU,GAAG+D,6BAEnC,CAGI,SAASiB,EAAmC9C,GACxC,OAAO,IAAI+C,GAA4B/C,EAC/C,CAEI,SAASgD,EAA6BhD,EAAQiD,GAC1CjD,EAAOE,QAAQgD,cAAcxE,KAAKuE,EAC1C,CACI,SAASE,GAAiCnD,EAAQoD,EAAOC,GACrD,MACMJ,EADSjD,EAAOE,QACKgD,cAAcpE,QACrCuE,EACAJ,EAAYK,cAGZL,EAAYM,YAAYH,EAEpC,CACI,SAASI,GAAiCxD,GACtC,OAAOA,EAAOE,QAAQgD,cAAcpN,MAC5C,CACI,SAAS2N,GAA+BzD,GACpC,MAAMD,EAASC,EAAOE,QACtB,YAAelT,IAAX+S,KAGC2D,GAA8B3D,EAI3C,CAMI,MAAMgD,GACF,WAAAzZ,CAAY0W,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,+BAClC4C,EAAqB5C,EAAQ,mBACzB2D,GAAuB3D,GACvB,MAAM,IAAIlC,UAAU,+EAExBgC,EAAsCvW,KAAMyW,GAC5CzW,KAAK2Z,cAAgB,IAAI/E,CACrC,CAKQ,UAAI/N,GACA,OAAKsT,GAA8Bna,MAG5BA,KAAKwX,eAFDvE,EAAoBoH,GAAiC,UAG5E,CAIQ,MAAAC,CAAOpH,OAASzP,GACZ,OAAK0W,GAA8Bna,WAGDyD,IAA9BzD,KAAK0W,qBACEzD,EAAoBsE,EAAoB,WAE5CN,EAAkCjX,KAAMkT,GALpCD,EAAoBoH,GAAiC,UAM5E,CAMQ,IAAAE,GACI,IAAKJ,GAA8Bna,MAC/B,OAAOiT,EAAoBoH,GAAiC,SAEhE,QAAkC5W,IAA9BzD,KAAK0W,qBACL,OAAOzD,EAAoBsE,EAAoB,cAEnD,IAAIiD,EACAC,EACJ,MAAMrH,EAAUN,EAAW,CAAChN,EAASC,KACjCyU,EAAiB1U,EACjB2U,EAAgB1U,IAEd2T,EAAc,CAChBM,YAAaH,GAASW,EAAe,CAAElN,MAAOuM,EAAOC,MAAM,IAC3DC,YAAa,IAAMS,EAAe,CAAElN,WAAO7J,EAAWqW,MAAM,IAC5DY,YAAaC,GAAKF,EAAcE,IAGpC,OADAC,GAAgC5a,KAAM0Z,GAC/BtG,CACnB,CAUQ,WAAAyH,GACI,IAAKV,GAA8Bna,MAC/B,MAAMqa,GAAiC,oBAET5W,IAA9BzD,KAAK0W,sBAGToE,GAAmC9a,KAC/C,EAkBI,SAASma,GAA8BjI,GACnC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,kBAGtCA,aAAasH,EAC5B,CACI,SAASoB,GAAgCpE,EAAQkD,GAC7C,MAAMjD,EAASD,EAAOE,qBACtBD,EAAOuE,YAAa,EACE,WAAlBvE,EAAOG,OACP8C,EAAYK,cAEW,YAAlBtD,EAAOG,OACZ8C,EAAYgB,YAAYjE,EAAOO,cAG/BP,EAAOa,0BAA0BjB,GAAWqD,EAExD,CACI,SAASoB,GAAmCtE,GACxCW,EAAmCX,GAEnCyE,GAA6CzE,EADnC,IAAIjC,UAAU,uBAEhC,CACI,SAAS0G,GAA6CzE,EAAQmE,GAC1D,MAAMO,EAAe1E,EAAOmD,cAC5BnD,EAAOmD,cAAgB,IAAI/E,EAC3BsG,EAAaja,QAAQyY,IACjBA,EAAYgB,YAAYC,IAEpC,CAEI,SAASN,GAAiC9V,GACtC,OAAO,IAAIgQ,UAAU,yCAAyChQ,sDACtE,CArDI+N,OAAO6I,iBAAiB3B,GAA4B5G,UAAW,CAC3D0H,OAAQ,CAAEc,YAAY,GACtBb,KAAM,CAAEa,YAAY,GACpBP,YAAa,CAAEO,YAAY,GAC3BvU,OAAQ,CAAEuU,YAAY,KAE1BhJ,EAAgBoH,GAA4B5G,UAAU0H,OAAQ,UAC9DlI,EAAgBoH,GAA4B5G,UAAU2H,KAAM,QAC5DnI,EAAgBoH,GAA4B5G,UAAUiI,YAAa,eACjC,iBAAvB3E,OAAOmF,aACd/I,OAAOC,eAAeiH,GAA4B5G,UAAWsD,OAAOmF,YAAa,CAC7E/N,MAAO,8BACPkF,cAAc,IA6CtB,MAAM8I,GAAyBhJ,OAAOiJ,eAAejJ,OAAOiJ,eAAejQ,kBAAmB,GAAKsH,WAGnG,MAAM4I,GACF,WAAAzb,CAAYyW,EAAQiF,GAChBzb,KAAK0b,qBAAkBjY,EACvBzD,KAAK2b,aAAc,EACnB3b,KAAK2W,QAAUH,EACfxW,KAAK4b,eAAiBH,CAClC,CACQ,IAAAI,GACI,MAAMC,EAAY,IAAM9b,KAAK+b,aAI7B,OAHA/b,KAAK0b,gBAAkB1b,KAAK0b,gBACxB/H,EAAqB3T,KAAK0b,gBAAiBI,EAAWA,GACtDA,IACG9b,KAAK0b,eACxB,CACQ,OAAOpO,GACH,MAAM0O,EAAc,IAAMhc,KAAKic,aAAa3O,GAC5C,OAAOtN,KAAK0b,gBACR/H,EAAqB3T,KAAK0b,gBAAiBM,EAAaA,GACxDA,GAChB,CACQ,UAAAD,GACI,GAAI/b,KAAK2b,YACL,OAAO9V,QAAQC,QAAQ,CAAEwH,WAAO7J,EAAWqW,MAAM,IAErD,MAAMtD,EAASxW,KAAK2W,QACpB,IAAI6D,EACAC,EACJ,MAAMrH,EAAUN,EAAW,CAAChN,EAASC,KACjCyU,EAAiB1U,EACjB2U,EAAgB1U,IAuBpB,OADA6U,GAAgCpE,EApBZ,CAChBwD,YAAaH,IACT7Z,KAAK0b,qBAAkBjY,EAGvBsQ,EAAgB,IAAMyG,EAAe,CAAElN,MAAOuM,EAAOC,MAAM,MAE/DC,YAAa,KACT/Z,KAAK0b,qBAAkBjY,EACvBzD,KAAK2b,aAAc,EACnBxE,EAAmCX,GACnCgE,EAAe,CAAElN,WAAO7J,EAAWqW,MAAM,KAE7CY,YAAaxH,IACTlT,KAAK0b,qBAAkBjY,EACvBzD,KAAK2b,aAAc,EACnBxE,EAAmCX,GACnCiE,EAAcvH,MAIfE,CACnB,CACQ,YAAA6I,CAAa3O,GACT,GAAItN,KAAK2b,YACL,OAAO9V,QAAQC,QAAQ,CAAEwH,QAAOwM,MAAM,IAE1C9Z,KAAK2b,aAAc,EACnB,MAAMnF,EAASxW,KAAK2W,QACpB,IAAK3W,KAAK4b,eAAgB,CACtB,MAAMxW,EAAS6R,EAAkCT,EAAQlJ,GAEzD,OADA6J,EAAmCX,GAC5B7C,EAAqBvO,EAAQ,KAAA,CAASkI,QAAOwM,MAAM,IAC1E,CAEY,OADA3C,EAAmCX,GAC5BxD,EAAoB,CAAE1F,QAAOwM,MAAM,GACtD,EAEI,MAAMoC,GAAuC,CACzC,IAAAL,GACI,OAAKM,GAA8Bnc,MAG5BA,KAAKoc,mBAAmBP,OAFpB5I,EAAoBoJ,GAAuC,UAI1E,OAAO/O,GACH,OAAK6O,GAA8Bnc,MAG5BA,KAAKoc,mBAAmBE,OAAOhP,GAF3B2F,EAAoBoJ,GAAuC,UAGlF,GAII,SAASE,GAAmC9F,EAAQgF,GAChD,MAAMjF,EAAS+C,EAAmC9C,GAC5C+F,EAAO,IAAIhB,GAAgChF,EAAQiF,GACnDgB,EAAWnK,OAAOoK,OAAOR,IAE/B,OADAO,EAASL,mBAAqBI,EACvBC,CACf,CACI,SAASN,GAA8BjK,GACnC,IAAKD,EAAaC,GACd,OAAO,EAEX,IAAKI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,sBACzC,OAAO,EAEX,IAEI,OAAOA,EAAEkK,8BACLZ,EAChB,CACQ,MAAO/I,GACH,OAAO,CACnB,CACA,CAEI,SAAS4J,GAAuC9X,GAC5C,OAAO,IAAIgQ,UAAU,+BAA+BhQ,qDAC5D,CA5BI+N,OAAOqK,eAAeT,GAAsCZ,IAgC5D,MAAMsB,GAAc/E,OAAOgF,OAAS,SAAU3K,GAE1C,OAAOA,GAAMA,GAGjB,IAAIO,GAAIqK,GAAIC,GACZ,SAASC,GAAoBpH,GAGzB,OAAOA,EAASqH,OACxB,CACI,SAASC,GAAmBC,EAAMC,EAAYC,EAAKC,EAAWC,GAC1D,IAAI3U,WAAWuU,GAAM5c,IAAI,IAAIqI,WAAWyU,EAAKC,EAAWC,GAAIH,EACpE,CACI,IAAII,GAAuBC,IAEnBD,GADsB,mBAAfC,EAAEC,SACaC,GAAUA,EAAOD,WAEP,mBAApBE,gBACUD,GAAUC,gBAAgBD,EAAQ,CAAED,SAAU,CAACC,KAI/CA,GAAUA,EAE7BH,GAAoBC,IAE3BI,GAAoBJ,IAEhBI,GADsB,kBAAfJ,EAAEK,SACUH,GAAUA,EAAOG,SAIjBH,GAAgC,IAAtBA,EAAOI,WAEjCF,GAAiBJ,IAE5B,SAASO,GAAiBL,EAAQM,EAAOC,GAGrC,GAAIP,EAAOV,MACP,OAAOU,EAAOV,MAAMgB,EAAOC,GAE/B,MAAM3R,EAAS2R,EAAMD,EACfhB,EAAQ,IAAIkB,YAAY5R,GAE9B,OADA2Q,GAAmBD,EAAO,EAAGU,EAAQM,EAAO1R,GACrC0Q,CACf,CACI,SAASmB,GAAUC,EAAUC,GACzB,MAAMC,EAAOF,EAASC,GACtB,GAAIC,QAAJ,CAGA,GAAoB,mBAATA,EACP,MAAM,IAAIhK,UAAU,GAAGiK,OAAOF,wBAElC,OAAOC,CAJf,CAKA,CACI,SAASE,GAA4BC,GAIjC,MAAMC,EAAe,CACjB,CAACzI,OAAOuG,UAAW,IAAMiC,EAAmBjC,UAG1CmC,EAAiBtT,kBACnB,aAAcqT,CAC1B,CAF2B,GAKnB,MAAO,CAAElC,SAAUmC,EAAeC,WADfD,EAAc/C,KACa/B,MAAM,EAC5D,CAEI,MAAMgF,GAA6L,QAAtK/B,GAAqC,QAA/BtK,GAAKyD,OAAO0I,qBAAkC,IAAPnM,GAAgBA,GAA2B,QAArBqK,GAAK5G,OAAO6I,WAAwB,IAAPjC,QAAgB,EAASA,GAAGvJ,KAAK2C,OAAQ,+BAA4C,IAAP6G,GAAgBA,GAAK,kBAChO,SAASiC,GAAY3G,EAAK4G,EAAO,OAAQzT,GACrC,QAAe/H,IAAX+H,EACA,GAAa,UAATyT,GAEA,QAAexb,KADf+H,EAAS4S,GAAU/F,EAAKyG,KAIpB,OAAOL,GADoBO,GAAY3G,EAAK,OADzB+F,GAAU/F,EAAKnC,OAAOuG,iBAM7CjR,EAAS4S,GAAU/F,EAAKnC,OAAOuG,UAGvC,QAAehZ,IAAX+H,EACA,MAAM,IAAI+I,UAAU,8BAExB,MAAMkI,EAAWrI,EAAY5I,EAAQ6M,EAAK,IAC1C,IAAKpG,EAAawK,GACd,MAAM,IAAIlI,UAAU,6CAGxB,MAAO,CAAEkI,WAAUoC,WADApC,EAASZ,KACG/B,MAAM,EAC7C,CACI,SAASoF,GAAaC,GAClB,MAAM/Z,EAASgP,EAAY+K,EAAeN,WAAYM,EAAe1C,SAAU,IAC/E,IAAKxK,EAAa7M,GACd,MAAM,IAAImP,UAAU,oDAExB,OAAOnP,CACf,CACI,SAASga,GAAiBC,GACtB,OAAOC,QAAQD,EAAWvF,KAClC,CACI,SAASyF,GAAcF,GACnB,OAAOA,EAAW/R,KAC1B,CAEI,SAASkS,GAAoBvH,GACzB,QAAiB,iBAANA,GAGP2E,GAAY3E,IAGZA,EAAI,EAIhB,CACI,SAASwH,GAAkBhC,GACvB,MAAME,EAASK,GAAiBP,EAAEE,OAAQF,EAAEiC,WAAYjC,EAAEiC,WAAajC,EAAEM,YACzE,OAAO,IAAInV,WAAW+U,EAC9B,CAEI,SAASgC,GAAaC,GAClB,MAAMC,EAAOD,EAAUE,OAAOvK,QAK9B,OAJAqK,EAAUG,iBAAmBF,EAAK/e,KAC9B8e,EAAUG,gBAAkB,IAC5BH,EAAUG,gBAAkB,GAEzBF,EAAKvS,KACpB,CACI,SAAS0S,GAAqBJ,EAAWtS,EAAOxM,GAC5C,IAAK0e,GAAoB1e,IAASA,IAASmf,IACvC,MAAM,IAAIC,WAAW,wDAEzBN,EAAUE,OAAO3K,KAAK,CAAE7H,QAAOxM,SAC/B8e,EAAUG,iBAAmBjf,CACrC,CACI,SAASqf,GAAeP,GAEpB,OADaA,EAAUE,OAAOhK,OAClBxI,KACpB,CACI,SAAS8S,GAAWR,GAChBA,EAAUE,OAAS,IAAIlL,EACvBgL,EAAUG,gBAAkB,CACpC,CAEI,SAASM,GAAsBC,GAC3B,OAAOA,IAASC,QACxB,CACI,SAASC,GAAWC,GAChB,OAAOJ,GAAsBI,EAAK1gB,YAC1C,CACI,SAAS2gB,GAA2BJ,GAChC,OAAID,GAAsBC,GACf,EAEJA,EAAKK,iBACpB,CAOI,MAAMC,GACF,WAAA7gB,GACI,MAAM,IAAIwU,UAAU,sBAChC,CAIQ,QAAIkM,GACA,IAAKI,GAA4B7gB,MAC7B,MAAM8gB,GAA+B,QAEzC,OAAO9gB,KAAK+gB,KACxB,CACQ,OAAAC,CAAQC,GACJ,IAAKJ,GAA4B7gB,MAC7B,MAAM8gB,GAA+B,WAIzC,GAFApI,EAAuBuI,EAAc,EAAG,WACxCA,EAAehI,EAAwCgI,EAAc,wBAChBxd,IAAjDzD,KAAKkhB,wCACL,MAAM,IAAI3M,UAAU,0CAExB,GAAIsJ,GAAiB7d,KAAK+gB,MAAMpD,QAC5B,MAAM,IAAIpJ,UAAU,mFAExB4M,GAAoCnhB,KAAKkhB,wCAAyCD,EAC9F,CACQ,kBAAAG,CAAmBX,GACf,IAAKI,GAA4B7gB,MAC7B,MAAM8gB,GAA+B,sBAGzC,GADApI,EAAuB+H,EAAM,EAAG,uBAC3BtC,YAAYkD,OAAOZ,GACpB,MAAM,IAAIlM,UAAU,gDAExB,QAAqD9Q,IAAjDzD,KAAKkhB,wCACL,MAAM,IAAI3M,UAAU,0CAExB,GAAIsJ,GAAiB4C,EAAK9C,QACtB,MAAM,IAAIpJ,UAAU,iFAExB+M,GAA+CthB,KAAKkhB,wCAAyCT,EACzG,EAEInO,OAAO6I,iBAAiByF,GAA0BhO,UAAW,CACzDoO,QAAS,CAAE5F,YAAY,GACvBgG,mBAAoB,CAAEhG,YAAY,GAClCqF,KAAM,CAAErF,YAAY,KAExBhJ,EAAgBwO,GAA0BhO,UAAUoO,QAAS,WAC7D5O,EAAgBwO,GAA0BhO,UAAUwO,mBAAoB,sBACtC,iBAAvBlL,OAAOmF,aACd/I,OAAOC,eAAeqO,GAA0BhO,UAAWsD,OAAOmF,YAAa,CAC3E/N,MAAO,4BACPkF,cAAc,IAQtB,MAAM+O,GACF,WAAAxhB,GACI,MAAM,IAAIwU,UAAU,sBAChC,CAIQ,eAAIiN,GACA,IAAKC,GAA+BzhB,MAChC,MAAM0hB,GAAwC,eAElD,OAAOC,GAA2C3hB,KAC9D,CAKQ,eAAI4hB,GACA,IAAKH,GAA+BzhB,MAChC,MAAM0hB,GAAwC,eAElD,OAAOG,GAA2C7hB,KAC9D,CAKQ,KAAAwG,GACI,IAAKib,GAA+BzhB,MAChC,MAAM0hB,GAAwC,SAElD,GAAI1hB,KAAK8hB,gBACL,MAAM,IAAIvN,UAAU,8DAExB,MAAM5S,EAAQ3B,KAAK+hB,8BAA8BnL,OACjD,GAAc,aAAVjV,EACA,MAAM,IAAI4S,UAAU,kBAAkB5S,8DAE1CqgB,GAAkChiB,KAC9C,CACQ,OAAAiiB,CAAQpI,GACJ,IAAK4H,GAA+BzhB,MAChC,MAAM0hB,GAAwC,WAGlD,GADAhJ,EAAuBmB,EAAO,EAAG,YAC5BsE,YAAYkD,OAAOxH,GACpB,MAAM,IAAItF,UAAU,sCAExB,GAAyB,IAArBsF,EAAMkE,WACN,MAAM,IAAIxJ,UAAU,uCAExB,GAAgC,IAA5BsF,EAAM8D,OAAOI,WACb,MAAM,IAAIxJ,UAAU,gDAExB,GAAIvU,KAAK8hB,gBACL,MAAM,IAAIvN,UAAU,gCAExB,MAAM5S,EAAQ3B,KAAK+hB,8BAA8BnL,OACjD,GAAc,aAAVjV,EACA,MAAM,IAAI4S,UAAU,kBAAkB5S,mEAE1CugB,GAAoCliB,KAAM6Z,EACtD,CAIQ,KAAA3Y,CAAMyZ,OAAIlX,GACN,IAAKge,GAA+BzhB,MAChC,MAAM0hB,GAAwC,SAElDS,GAAkCniB,KAAM2a,EACpD,CAEQ,CAACvE,GAAalD,GACVkP,GAAkDpiB,MAClDogB,GAAWpgB,MACX,MAAMoF,EAASpF,KAAKqiB,iBAAiBnP,GAErC,OADAoP,GAA4CtiB,MACrCoF,CACnB,CAEQ,CAACiR,GAAWqD,GACR,MAAMjD,EAASzW,KAAK+hB,8BACpB,GAAI/hB,KAAK+f,gBAAkB,EAEvB,YADAwC,GAAqDviB,KAAM0Z,GAG/D,MAAM8I,EAAwBxiB,KAAKyiB,uBACnC,QAA8Bhf,IAA1B+e,EAAqC,CACrC,IAAI7E,EACJ,IACIA,EAAS,IAAIQ,YAAYqE,EAC7C,CACgB,MAAOE,GAEH,YADAhJ,EAAYgB,YAAYgI,EAE5C,CACgB,MAAMC,EAAqB,CACvBhF,SACAiF,iBAAkBJ,EAClB9C,WAAY,EACZ3B,WAAYyE,EACZK,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,gBAAiBpa,WACjBqa,WAAY,WAEhBjjB,KAAKkjB,kBAAkB/N,KAAKwN,EAC5C,CACYlJ,EAA6BhD,EAAQiD,GACrCyJ,GAA6CnjB,KACzD,CAEQ,CAACsW,KACG,GAAItW,KAAKkjB,kBAAkB3W,OAAS,EAAG,CACnC,MAAM6W,EAAgBpjB,KAAKkjB,kBAAkBpN,OAC7CsN,EAAcH,WAAa,OAC3BjjB,KAAKkjB,kBAAoB,IAAItO,EAC7B5U,KAAKkjB,kBAAkB/N,KAAKiO,EAC5C,CACA,EAmBI,SAAS3B,GAA+BvP,GACpC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,kCAGtCA,aAAaqP,EAC5B,CACI,SAASV,GAA4B3O,GACjC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,4CAGtCA,aAAa0O,EAC5B,CACI,SAASuC,GAA6CE,GAC/BC,GAA2CD,KAI1DA,EAAWE,SACXF,EAAWG,YAAa,GAG5BH,EAAWE,UAAW,EAGtB/P,EADoB6P,EAAWI,iBACN,KACrBJ,EAAWE,UAAW,EAClBF,EAAWG,aACXH,EAAWG,YAAa,EACxBL,GAA6CE,IAE1C,MACR1I,IACCwH,GAAkCkB,EAAY1I,GACvC,QAEnB,CACI,SAASyH,GAAkDiB,GACvDK,GAAkDL,GAClDA,EAAWH,kBAAoB,IAAItO,CAC3C,CACI,SAAS+O,GAAqDlN,EAAQkM,GAClE,IAAI7I,GAAO,EACW,WAAlBrD,EAAOG,SACPkD,GAAO,GAEX,MAAM8J,EAAaC,GAAsDlB,GACnC,YAAlCA,EAAmBM,WACnBrJ,GAAiCnD,EAAQmN,EAAY9J,GAGrDgK,GAAqCrN,EAAQmN,EAAY9J,EAErE,CACI,SAAS+J,GAAsDlB,GAC3D,MAAME,EAAcF,EAAmBE,YACjCE,EAAcJ,EAAmBI,YACvC,OAAO,IAAIJ,EAAmBK,gBAAgBL,EAAmBhF,OAAQgF,EAAmBjD,WAAYmD,EAAcE,EAC9H,CACI,SAASgB,GAAgDV,EAAY1F,EAAQ+B,EAAY3B,GACrFsF,EAAWvD,OAAO3K,KAAK,CAAEwI,SAAQ+B,aAAY3B,eAC7CsF,EAAWtD,iBAAmBhC,CACtC,CACI,SAASiG,GAAsDX,EAAY1F,EAAQ+B,EAAY3B,GAC3F,IAAIkG,EACJ,IACIA,EAAcjG,GAAiBL,EAAQ+B,EAAYA,EAAa3B,EAC5E,CACQ,MAAOmG,GAEH,MADA/B,GAAkCkB,EAAYa,GACxCA,CAClB,CACQH,GAAgDV,EAAYY,EAAa,EAAGlG,EACpF,CACI,SAASoG,GAA2Dd,EAAYe,GACxEA,EAAgBvB,YAAc,GAC9BmB,GAAsDX,EAAYe,EAAgBzG,OAAQyG,EAAgB1E,WAAY0E,EAAgBvB,aAE1IwB,GAAiDhB,EACzD,CACI,SAASiB,GAA4DjB,EAAYV,GAC7E,MAAM4B,EAAiBrc,KAAKsc,IAAInB,EAAWtD,gBAAiB4C,EAAmB5E,WAAa4E,EAAmBE,aACzG4B,EAAiB9B,EAAmBE,YAAc0B,EACxD,IAAIG,EAA4BH,EAC5Bha,GAAQ,EACZ,MACMoa,EAAkBF,EADDA,EAAiB9B,EAAmBI,YAIvD4B,GAAmBhC,EAAmBG,cACtC4B,EAA4BC,EAAkBhC,EAAmBE,YACjEtY,GAAQ,GAEZ,MAAMqa,EAAQvB,EAAWvD,OACzB,KAAO4E,EAA4B,GAAG,CAClC,MAAMG,EAAcD,EAAM9O,OACpBgP,EAAc5c,KAAKsc,IAAIE,EAA2BG,EAAY9G,YAC9DgH,EAAYpC,EAAmBjD,WAAaiD,EAAmBE,YACrE3F,GAAmByF,EAAmBhF,OAAQoH,EAAWF,EAAYlH,OAAQkH,EAAYnF,WAAYoF,GACjGD,EAAY9G,aAAe+G,EAC3BF,EAAMrP,SAGNsP,EAAYnF,YAAcoF,EAC1BD,EAAY9G,YAAc+G,GAE9BzB,EAAWtD,iBAAmB+E,EAC9BE,GAAuD3B,EAAYyB,EAAanC,GAChF+B,GAA6BI,CACzC,CACQ,OAAOva,CACf,CACI,SAASya,GAAuD3B,EAAYviB,EAAM6hB,GAC9EA,EAAmBE,aAAe/hB,CAC1C,CACI,SAASmkB,GAA6C5B,GACf,IAA/BA,EAAWtD,iBAAyBsD,EAAWvB,iBAC/CQ,GAA4Ce,GAC5C6B,GAAoB7B,EAAWtB,gCAG/BoB,GAA6CE,EAEzD,CACI,SAASK,GAAkDL,GACvB,OAA5BA,EAAW8B,eAGf9B,EAAW8B,aAAajE,6CAA0Czd,EAClE4f,EAAW8B,aAAapE,MAAQ,KAChCsC,EAAW8B,aAAe,KAClC,CACI,SAASC,GAAiE/B,GACtE,KAAOA,EAAWH,kBAAkB3W,OAAS,GAAG,CAC5C,GAAmC,IAA/B8W,EAAWtD,gBACX,OAEJ,MAAM4C,EAAqBU,EAAWH,kBAAkBpN,OACpDwO,GAA4DjB,EAAYV,KACxE0B,GAAiDhB,GACjDM,GAAqDN,EAAWtB,8BAA+BY,GAE/G,CACA,CACI,SAAS0C,GAA0DhC,GAC/D,MAAM7M,EAAS6M,EAAWtB,8BAA8BpL,QACxD,KAAOH,EAAOmD,cAAcpN,OAAS,GAAG,CACpC,GAAmC,IAA/B8W,EAAWtD,gBACX,OAGJwC,GAAqDc,EADjC7M,EAAOmD,cAAcpE,QAErD,CACA,CACI,SAAS+P,GAAqCjC,EAAY5C,EAAM+D,EAAKe,GACjE,MAAM9O,EAAS4M,EAAWtB,8BACpBzB,EAAOG,EAAK1gB,YACZgjB,EAAcrC,GAA2BJ,IACzCZ,WAAEA,EAAU3B,WAAEA,GAAe0C,EAC7BqC,EAAc0B,EAAMzB,EAC1B,IAAIpF,EACJ,IACIA,EAASH,GAAoBiD,EAAK9C,OAC9C,CACQ,MAAOhD,GAEH,YADA4K,EAAgB7K,YAAYC,EAExC,CACQ,MAAMgI,EAAqB,CACvBhF,SACAiF,iBAAkBjF,EAAOI,WACzB2B,aACA3B,aACA8E,YAAa,EACbC,cACAC,cACAC,gBAAiB1C,EACjB2C,WAAY,QAEhB,GAAII,EAAWH,kBAAkB3W,OAAS,EAMtC,OALA8W,EAAWH,kBAAkB/N,KAAKwN,QAIlC6C,GAAiC/O,EAAQ8O,GAG7C,GAAsB,WAAlB9O,EAAOG,OAAqB,CAC5B,MAAM6O,EAAY,IAAInF,EAAKqC,EAAmBhF,OAAQgF,EAAmBjD,WAAY,GAErF,YADA6F,EAAgBxL,YAAY0L,EAExC,CACQ,GAAIpC,EAAWtD,gBAAkB,EAAG,CAChC,GAAIuE,GAA4DjB,EAAYV,GAAqB,CAC7F,MAAMiB,EAAaC,GAAsDlB,GAGzE,OAFAsC,GAA6C5B,QAC7CkC,EAAgBvL,YAAY4J,EAE5C,CACY,GAAIP,EAAWvB,gBAAiB,CAC5B,MAAMnH,EAAI,IAAIpG,UAAU,2DAGxB,OAFA4N,GAAkCkB,EAAY1I,QAC9C4K,EAAgB7K,YAAYC,EAE5C,CACA,CACQ0I,EAAWH,kBAAkB/N,KAAKwN,GAClC6C,GAAiC/O,EAAQ8O,GACzCpC,GAA6CE,EACrD,CACI,SAASqC,GAAiDrC,EAAYe,GAC/B,SAA/BA,EAAgBnB,YAChBoB,GAAiDhB,GAErD,MAAM5M,EAAS4M,EAAWtB,8BAC1B,GAAI4D,GAA4BlP,GAC5B,KAAOmP,GAAqCnP,GAAU,GAElDkN,GAAqDlN,EAD1B4N,GAAiDhB,GAI5F,CACI,SAASwC,GAAmDxC,EAAYpC,EAAc0B,GAElF,GADAqC,GAAuD3B,EAAYpC,EAAc0B,GAC3C,SAAlCA,EAAmBM,WAGnB,OAFAkB,GAA2Dd,EAAYV,QACvEyC,GAAiE/B,GAGrE,GAAIV,EAAmBE,YAAcF,EAAmBG,YAGpD,OAEJuB,GAAiDhB,GACjD,MAAMyC,EAAgBnD,EAAmBE,YAAcF,EAAmBI,YAC1E,GAAI+C,EAAgB,EAAG,CACnB,MAAM5H,EAAMyE,EAAmBjD,WAAaiD,EAAmBE,YAC/DmB,GAAsDX,EAAYV,EAAmBhF,OAAQO,EAAM4H,EAAeA,EAC9H,CACQnD,EAAmBE,aAAeiD,EAClCnC,GAAqDN,EAAWtB,8BAA+BY,GAC/FyC,GAAiE/B,EACzE,CACI,SAAS0C,GAA4C1C,EAAYpC,GAC7D,MAAMmD,EAAkBf,EAAWH,kBAAkBpN,OACrD4N,GAAkDL,GAEpC,WADAA,EAAWtB,8BAA8BnL,OAEnD8O,GAAiDrC,EAAYe,GAG7DyB,GAAmDxC,EAAYpC,EAAcmD,GAEjFjB,GAA6CE,EACrD,CACI,SAASgB,GAAiDhB,GAEtD,OADmBA,EAAWH,kBAAkB3N,OAExD,CACI,SAAS+N,GAA2CD,GAChD,MAAM5M,EAAS4M,EAAWtB,8BAC1B,MAAsB,aAAlBtL,EAAOG,SAGPyM,EAAWvB,mBAGVuB,EAAW2C,cAGZ9L,GAA+BzD,IAAWwD,GAAiCxD,GAAU,OAGrFkP,GAA4BlP,IAAWmP,GAAqCnP,GAAU,IAGtEoL,GAA2CwB,GAC7C,EAI1B,CACI,SAASf,GAA4Ce,GACjDA,EAAWI,oBAAiBhgB,EAC5B4f,EAAWhB,sBAAmB5e,CACtC,CAEI,SAASue,GAAkCqB,GACvC,MAAM5M,EAAS4M,EAAWtB,8BAC1B,IAAIsB,EAAWvB,iBAAqC,aAAlBrL,EAAOG,OAGzC,GAAIyM,EAAWtD,gBAAkB,EAC7BsD,EAAWvB,iBAAkB,MADjC,CAIA,GAAIuB,EAAWH,kBAAkB3W,OAAS,EAAG,CACzC,MAAM0Z,EAAuB5C,EAAWH,kBAAkBpN,OAC1D,GAAImQ,EAAqBpD,YAAcoD,EAAqBlD,cAAgB,EAAG,CAC3E,MAAMpI,EAAI,IAAIpG,UAAU,2DAExB,MADA4N,GAAkCkB,EAAY1I,GACxCA,CACtB,CACA,CACQ2H,GAA4Ce,GAC5C6B,GAAoBzO,EAV5B,CAWA,CACI,SAASyL,GAAoCmB,EAAYxJ,GACrD,MAAMpD,EAAS4M,EAAWtB,8BAC1B,GAAIsB,EAAWvB,iBAAqC,aAAlBrL,EAAOG,OACrC,OAEJ,MAAM+G,OAAEA,EAAM+B,WAAEA,EAAU3B,WAAEA,GAAelE,EAC3C,GAAIgE,GAAiBF,GACjB,MAAM,IAAIpJ,UAAU,wDAExB,MAAM2R,EAAoB1I,GAAoBG,GAC9C,GAAI0F,EAAWH,kBAAkB3W,OAAS,EAAG,CACzC,MAAM0Z,EAAuB5C,EAAWH,kBAAkBpN,OAC1D,GAAI+H,GAAiBoI,EAAqBtI,QACtC,MAAM,IAAIpJ,UAAU,8FAExBmP,GAAkDL,GAClD4C,EAAqBtI,OAASH,GAAoByI,EAAqBtI,QAC/B,SAApCsI,EAAqBhD,YACrBkB,GAA2Dd,EAAY4C,EAEvF,CACY/L,GAA+BzD,IAC/B4O,GAA0DhC,GACT,IAA7CpJ,GAAiCxD,GACjCsN,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,IAGvFsF,EAAWH,kBAAkB3W,OAAS,GACtC8X,GAAiDhB,GAGrDzJ,GAAiCnD,EADT,IAAI7N,WAAWsd,EAAmBxG,EAAY3B,IACZ,KAGzD4H,GAA4BlP,IAEjCsN,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,GAC3FqH,GAAiE/B,IAGjEU,GAAgDV,EAAY6C,EAAmBxG,EAAY3B,GAE/FoF,GAA6CE,EACrD,CACI,SAASlB,GAAkCkB,EAAY1I,GACnD,MAAMlE,EAAS4M,EAAWtB,8BACJ,aAAlBtL,EAAOG,SAGXwL,GAAkDiB,GAClDjD,GAAWiD,GACXf,GAA4Ce,GAC5C8C,GAAoB1P,EAAQkE,GACpC,CACI,SAAS4H,GAAqDc,EAAY3J,GACtE,MAAM0M,EAAQ/C,EAAWvD,OAAOvK,QAChC8N,EAAWtD,iBAAmBqG,EAAMrI,WACpCkH,GAA6C5B,GAC7C,MAAM5C,EAAO,IAAI7X,WAAWwd,EAAMzI,OAAQyI,EAAM1G,WAAY0G,EAAMrI,YAClErE,EAAYM,YAAYyG,EAChC,CACI,SAASkB,GAA2C0B,GAChD,GAAgC,OAA5BA,EAAW8B,cAAyB9B,EAAWH,kBAAkB3W,OAAS,EAAG,CAC7E,MAAM6X,EAAkBf,EAAWH,kBAAkBpN,OAC/C2K,EAAO,IAAI7X,WAAWwb,EAAgBzG,OAAQyG,EAAgB1E,WAAa0E,EAAgBvB,YAAauB,EAAgBrG,WAAaqG,EAAgBvB,aACrJrB,EAAclP,OAAOoK,OAAOkE,GAA0BhO,WAC5DyT,GAA+B7E,EAAa6B,EAAY5C,GACxD4C,EAAW8B,aAAe3D,CACtC,CACQ,OAAO6B,EAAW8B,YAC1B,CACI,SAAStD,GAA2CwB,GAChD,MAAM1hB,EAAQ0hB,EAAWtB,8BAA8BnL,OACvD,MAAc,YAAVjV,EACO,KAEG,WAAVA,EACO,EAEJ0hB,EAAWiD,aAAejD,EAAWtD,eACpD,CACI,SAASoB,GAAoCkC,EAAYpC,GACrD,MAAMmD,EAAkBf,EAAWH,kBAAkBpN,OAErD,GAAc,WADAuN,EAAWtB,8BAA8BnL,QAEnD,GAAqB,IAAjBqK,EACA,MAAM,IAAI1M,UAAU,wEAGvB,CACD,GAAqB,IAAjB0M,EACA,MAAM,IAAI1M,UAAU,mFAExB,GAAI6P,EAAgBvB,YAAc5B,EAAemD,EAAgBrG,WAC7D,MAAM,IAAImC,WAAW,4BAErC,CACQkE,EAAgBzG,OAASH,GAAoB4G,EAAgBzG,QAC7DoI,GAA4C1C,EAAYpC,EAChE,CACI,SAASK,GAA+C+B,EAAY5C,GAChE,MAAM2D,EAAkBf,EAAWH,kBAAkBpN,OAErD,GAAc,WADAuN,EAAWtB,8BAA8BnL,QAEnD,GAAwB,IAApB6J,EAAK1C,WACL,MAAM,IAAIxJ,UAAU,yFAIxB,GAAwB,IAApBkM,EAAK1C,WACL,MAAM,IAAIxJ,UAAU,mGAG5B,GAAI6P,EAAgB1E,WAAa0E,EAAgBvB,cAAgBpC,EAAKf,WAClE,MAAM,IAAIQ,WAAW,2DAEzB,GAAIkE,EAAgBxB,mBAAqBnC,EAAK9C,OAAOI,WACjD,MAAM,IAAImC,WAAW,8DAEzB,GAAIkE,EAAgBvB,YAAcpC,EAAK1C,WAAaqG,EAAgBrG,WAChE,MAAM,IAAImC,WAAW,2DAEzB,MAAMqG,EAAiB9F,EAAK1C,WAC5BqG,EAAgBzG,OAASH,GAAoBiD,EAAK9C,QAClDoI,GAA4C1C,EAAYkD,EAChE,CACI,SAASC,GAAkC/P,EAAQ4M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAepE,GAC1Ha,EAAWtB,8BAAgCtL,EAC3C4M,EAAWG,YAAa,EACxBH,EAAWE,UAAW,EACtBF,EAAW8B,aAAe,KAE1B9B,EAAWvD,OAASuD,EAAWtD,qBAAkBtc,EACjD2c,GAAWiD,GACXA,EAAWvB,iBAAkB,EAC7BuB,EAAW2C,UAAW,EACtB3C,EAAWiD,aAAeM,EAC1BvD,EAAWI,eAAiBiD,EAC5BrD,EAAWhB,iBAAmBsE,EAC9BtD,EAAWZ,uBAAyBD,EACpCa,EAAWH,kBAAoB,IAAItO,EACnC6B,EAAOa,0BAA4B+L,EAEnC7P,EAAYR,EADQyT,KAC0B,KAC1CpD,EAAW2C,UAAW,EACtB7C,GAA6CE,GACtC,MACRwD,IACC1E,GAAkCkB,EAAYwD,GACvC,MAEnB,CACI,SAASC,GAAsDrQ,EAAQsQ,EAAsBH,GACzF,MAAMvD,EAAa/Q,OAAOoK,OAAO6E,GAA6B3O,WAC9D,IAAI6T,EACAC,EACAC,EAEAF,OAD+BhjB,IAA/BsjB,EAAqBC,MACJ,IAAMD,EAAqBC,MAAM3D,GAGjC,OAGjBqD,OAD8BjjB,IAA9BsjB,EAAqBE,KACL,IAAMF,EAAqBE,KAAK5D,GAGhC,IAAMrQ,OAAoBvP,GAG1CkjB,OADgCljB,IAAhCsjB,EAAqBzM,OACHpH,GAAU6T,EAAqBzM,OAAOpH,GAGtC,IAAMF,OAAoBvP,GAEhD,MAAM+e,EAAwBuE,EAAqBvE,sBACnD,GAA8B,IAA1BA,EACA,MAAM,IAAIjO,UAAU,gDAExBiS,GAAkC/P,EAAQ4M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAepE,EAC7H,CACI,SAAS6D,GAA+Bhb,EAASgY,EAAY5C,GACzDpV,EAAQ6V,wCAA0CmC,EAClDhY,EAAQ0V,MAAQN,CACxB,CAEI,SAASK,GAA+Bvc,GACpC,OAAO,IAAIgQ,UAAU,uCAAuChQ,oDACpE,CAEI,SAASmd,GAAwCnd,GAC7C,OAAO,IAAIgQ,UAAU,0CAA0ChQ,uDACvE,CAEI,SAAS2iB,GAAqBjZ,EAASqK,GACnCF,EAAiBnK,EAASqK,GAC1B,MAAM6O,EAAOlZ,aAAyC,EAASA,EAAQkZ,KACvE,MAAO,CACHA,UAAe1jB,IAAT0jB,OAAqB1jB,EAAY2jB,GAAgCD,EAAM,GAAG7O,4BAE5F,CACI,SAAS8O,GAAgCD,EAAM7O,GAE3C,GAAa,SADb6O,EAAO,GAAGA,KAEN,MAAM,IAAI5S,UAAU,GAAG+D,MAAY6O,oEAEvC,OAAOA,CACf,CACI,SAASE,GAAuBpZ,EAASqK,GACrC,IAAI7F,EAGJ,OAFA2F,EAAiBnK,EAASqK,GAEnB,CACHkM,IAAKvL,EAF4E,QAAxExG,EAAKxE,aAAyC,EAASA,EAAQuW,WAAwB,IAAP/R,EAAgBA,EAAK,EAE5D,GAAG6F,2BAEjE,CAGI,SAASgP,GAAgC7Q,GACrC,OAAO,IAAI8Q,GAAyB9Q,EAC5C,CAEI,SAAS+O,GAAiC/O,EAAQ8O,GAC9C9O,EAAOE,QAAQ6Q,kBAAkBrS,KAAKoQ,EAC9C,CACI,SAASzB,GAAqCrN,EAAQoD,EAAOC,GACzD,MACMyL,EADS9O,EAAOE,QACS6Q,kBAAkBjS,QAC7CuE,EACAyL,EAAgBxL,YAAYF,GAG5B0L,EAAgBvL,YAAYH,EAExC,CACI,SAAS+L,GAAqCnP,GAC1C,OAAOA,EAAOE,QAAQ6Q,kBAAkBjb,MAChD,CACI,SAASoZ,GAA4BlP,GACjC,MAAMD,EAASC,EAAOE,QACtB,YAAelT,IAAX+S,KAGCiR,GAA2BjR,EAIxC,CAjkBIlE,OAAO6I,iBAAiBoG,GAA6B3O,UAAW,CAC5DpM,MAAO,CAAE4U,YAAY,GACrB6G,QAAS,CAAE7G,YAAY,GACvBla,MAAO,CAAEka,YAAY,GACrBoG,YAAa,CAAEpG,YAAY,GAC3BwG,YAAa,CAAExG,YAAY,KAE/BhJ,EAAgBmP,GAA6B3O,UAAUpM,MAAO,SAC9D4L,EAAgBmP,GAA6B3O,UAAUqP,QAAS,WAChE7P,EAAgBmP,GAA6B3O,UAAU1R,MAAO,SAC5B,iBAAvBgV,OAAOmF,aACd/I,OAAOC,eAAegP,GAA6B3O,UAAWsD,OAAOmF,YAAa,CAC9E/N,MAAO,+BACPkF,cAAc,IA0jBtB,MAAM+U,GACF,WAAAxnB,CAAY0W,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,4BAClC4C,EAAqB5C,EAAQ,mBACzB2D,GAAuB3D,GACvB,MAAM,IAAIlC,UAAU,+EAExB,IAAKkN,GAA+BhL,EAAOa,2BACvC,MAAM,IAAI/C,UAAU,+FAGxBgC,EAAsCvW,KAAMyW,GAC5CzW,KAAKwnB,kBAAoB,IAAI5S,CACzC,CAKQ,UAAI/N,GACA,OAAK4gB,GAA2BznB,MAGzBA,KAAKwX,eAFDvE,EAAoByU,GAA8B,UAGzE,CAIQ,MAAApN,CAAOpH,OAASzP,GACZ,OAAKgkB,GAA2BznB,WAGEyD,IAA9BzD,KAAK0W,qBACEzD,EAAoBsE,EAAoB,WAE5CN,EAAkCjX,KAAMkT,GALpCD,EAAoByU,GAA8B,UAMzE,CACQ,IAAAnN,CAAKkG,EAAMkH,EAAa,IACpB,IAAKF,GAA2BznB,MAC5B,OAAOiT,EAAoByU,GAA8B,SAE7D,IAAKvJ,YAAYkD,OAAOZ,GACpB,OAAOxN,EAAoB,IAAIsB,UAAU,sCAE7C,GAAwB,IAApBkM,EAAK1C,WACL,OAAO9K,EAAoB,IAAIsB,UAAU,uCAE7C,GAA+B,IAA3BkM,EAAK9C,OAAOI,WACZ,OAAO9K,EAAoB,IAAIsB,UAAU,gDAE7C,GAAIsJ,GAAiB4C,EAAK9C,QACtB,OAAO1K,EAAoB,IAAIsB,UAAU,oCAE7C,IAAItG,EACJ,IACIA,EAAUoZ,GAAuBM,EAAY,UAC7D,CACY,MAAOhN,GACH,OAAO1H,EAAoB0H,EAC3C,CACY,MAAM6J,EAAMvW,EAAQuW,IACpB,GAAY,IAARA,EACA,OAAOvR,EAAoB,IAAIsB,UAAU,uCAE7C,GAAKiM,GAAWC,IAKX,GAAI+D,EAAM/D,EAAK1C,WAChB,OAAO9K,EAAoB,IAAIiN,WAAW,qEAL1C,GAAIsE,EAAM/D,EAAKlU,OACX,OAAO0G,EAAoB,IAAIiN,WAAW,4DAMlD,QAAkCzc,IAA9BzD,KAAK0W,qBACL,OAAOzD,EAAoBsE,EAAoB,cAEnD,IAAIiD,EACAC,EACJ,MAAMrH,EAAUN,EAAW,CAAChN,EAASC,KACjCyU,EAAiB1U,EACjB2U,EAAgB1U,IAEdwf,EAAkB,CACpBvL,YAAaH,GAASW,EAAe,CAAElN,MAAOuM,EAAOC,MAAM,IAC3DC,YAAaF,GAASW,EAAe,CAAElN,MAAOuM,EAAOC,MAAM,IAC3DY,YAAaC,GAAKF,EAAcE,IAGpC,OADAiN,GAA6B5nB,KAAMygB,EAAM+D,EAAKe,GACvCnS,CACnB,CAUQ,WAAAyH,GACI,IAAK4M,GAA2BznB,MAC5B,MAAM0nB,GAA8B,oBAENjkB,IAA9BzD,KAAK0W,sBAGTmR,GAAgC7nB,KAC5C,EAkBI,SAASynB,GAA2BvV,GAChC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,sBAGtCA,aAAaqV,EAC5B,CACI,SAASK,GAA6BpR,EAAQiK,EAAM+D,EAAKe,GACrD,MAAM9O,EAASD,EAAOE,qBACtBD,EAAOuE,YAAa,EACE,YAAlBvE,EAAOG,OACP2O,EAAgB7K,YAAYjE,EAAOO,cAGnCsO,GAAqC7O,EAAOa,0BAA2BmJ,EAAM+D,EAAKe,EAE9F,CACI,SAASsC,GAAgCrR,GACrCW,EAAmCX,GAEnCsR,GAA8CtR,EADpC,IAAIjC,UAAU,uBAEhC,CACI,SAASuT,GAA8CtR,EAAQmE,GAC3D,MAAMoN,EAAmBvR,EAAOgR,kBAChChR,EAAOgR,kBAAoB,IAAI5S,EAC/BmT,EAAiB9mB,QAAQskB,IACrBA,EAAgB7K,YAAYC,IAExC,CAEI,SAAS+M,GAA8BnjB,GACnC,OAAO,IAAIgQ,UAAU,sCAAsChQ,mDACnE,CAEI,SAASyjB,GAAqBC,EAAUC,GACpC,MAAMtB,cAAEA,GAAkBqB,EAC1B,QAAsBxkB,IAAlBmjB,EACA,OAAOsB,EAEX,GAAItL,GAAYgK,IAAkBA,EAAgB,EAC9C,MAAM,IAAI1G,WAAW,yBAEzB,OAAO0G,CACf,CACI,SAASuB,GAAqBF,GAC1B,MAAMnnB,KAAEA,GAASmnB,EACjB,OAAKnnB,GACM,KAAM,EAGzB,CAEI,SAASsnB,GAAuBC,EAAM/P,GAClCF,EAAiBiQ,EAAM/P,GACvB,MAAMsO,EAAgByB,aAAmC,EAASA,EAAKzB,cACjE9lB,EAAOunB,aAAmC,EAASA,EAAKvnB,KAC9D,MAAO,CACH8lB,mBAAiCnjB,IAAlBmjB,OAA8BnjB,EAAYqV,EAA0B8N,GACnF9lB,UAAe2C,IAAT3C,OAAqB2C,EAAY6kB,GAA2BxnB,EAAM,GAAGwX,4BAEvF,CACI,SAASgQ,GAA2BjW,EAAIiG,GAEpC,OADAC,EAAelG,EAAIiG,GACZuB,GAASf,EAA0BzG,EAAGwH,GACrD,CAEI,SAAS0O,GAAsBC,EAAUlQ,GACrCF,EAAiBoQ,EAAUlQ,GAC3B,MAAMmQ,EAAQD,aAA2C,EAASA,EAASC,MACrEjiB,EAAQgiB,aAA2C,EAASA,EAAShiB,MACrEwgB,EAAQwB,aAA2C,EAASA,EAASxB,MACrE1gB,EAAOkiB,aAA2C,EAASA,EAASliB,KACpEoiB,EAAQF,aAA2C,EAASA,EAASE,MAC3E,MAAO,CACHD,WAAiBhlB,IAAVglB,OACHhlB,EACAklB,GAAmCF,EAAOD,EAAU,GAAGlQ,6BAC3D9R,WAAiB/C,IAAV+C,OACH/C,EACAmlB,GAAmCpiB,EAAOgiB,EAAU,GAAGlQ,6BAC3D0O,WAAiBvjB,IAAVujB,OACHvjB,EACAolB,GAAmC7B,EAAOwB,EAAU,GAAGlQ,6BAC3DoQ,WAAiBjlB,IAAVilB,OACHjlB,EACAqlB,GAAmCJ,EAAOF,EAAU,GAAGlQ,6BAC3DhS,OAEZ,CACI,SAASqiB,GAAmCtW,EAAImW,EAAUlQ,GAEtD,OADAC,EAAelG,EAAIiG,GACXpF,GAAWwB,EAAYrC,EAAImW,EAAU,CAACtV,GACtD,CACI,SAAS0V,GAAmCvW,EAAImW,EAAUlQ,GAEtD,OADAC,EAAelG,EAAIiG,GACZ,IAAM5D,EAAYrC,EAAImW,EAAU,GAC/C,CACI,SAASK,GAAmCxW,EAAImW,EAAUlQ,GAEtD,OADAC,EAAelG,EAAIiG,GACX+K,GAAejP,EAAY/B,EAAImW,EAAU,CAACnF,GAC1D,CACI,SAASyF,GAAmCzW,EAAImW,EAAUlQ,GAEtD,OADAC,EAAelG,EAAIiG,GACZ,CAACuB,EAAOwJ,IAAe3O,EAAYrC,EAAImW,EAAU,CAAC3O,EAAOwJ,GACxE,CAEI,SAAS0F,GAAqB7W,EAAGoG,GAC7B,IAAK0Q,GAAiB9W,GAClB,MAAM,IAAIqC,UAAU,GAAG+D,6BAEnC,CAEI,SAAS2Q,GAAc3b,GACnB,GAAqB,iBAAVA,GAAgC,OAAVA,EAC7B,OAAO,EAEX,IACI,MAAgC,kBAAlBA,EAAM4b,OAChC,CACQ,MAAOzW,GAEH,OAAO,CACnB,CACA,CA7IIH,OAAO6I,iBAAiBoM,GAAyB3U,UAAW,CACxD0H,OAAQ,CAAEc,YAAY,GACtBb,KAAM,CAAEa,YAAY,GACpBP,YAAa,CAAEO,YAAY,GAC3BvU,OAAQ,CAAEuU,YAAY,KAE1BhJ,EAAgBmV,GAAyB3U,UAAU0H,OAAQ,UAC3DlI,EAAgBmV,GAAyB3U,UAAU2H,KAAM,QACzDnI,EAAgBmV,GAAyB3U,UAAUiI,YAAa,eAC9B,iBAAvB3E,OAAOmF,aACd/I,OAAOC,eAAegV,GAAyB3U,UAAWsD,OAAOmF,YAAa,CAC1E/N,MAAO,2BACPkF,cAAc,IAkItB,MAAM2W,GAAqD,mBAApBC,gBAMvC,SAASC,KACL,GAAIF,GACA,OAAO,IAAIC,eAGvB,CAOI,MAAME,GACF,WAAAvpB,CAAYwpB,EAAoB,GAAIC,EAAc,CAAA,QACpB/lB,IAAtB8lB,EACAA,EAAoB,KAGpB9Q,EAAa8Q,EAAmB,mBAEpC,MAAMtB,EAAWG,GAAuBoB,EAAa,oBAC/CC,EAAiBlB,GAAsBgB,EAAmB,mBAGhE,GAFAG,GAAyB1pB,WAEZyD,IADAgmB,EAAenjB,KAExB,MAAM,IAAI4Z,WAAW,6BAEzB,MAAMyJ,EAAgBxB,GAAqBF,GAE3C2B,GAAuD5pB,KAAMypB,EADvCzB,GAAqBC,EAAU,GACuC0B,EACxG,CAIQ,UAAIE,GACA,IAAKb,GAAiBhpB,MAClB,MAAM8pB,GAA4B,UAEtC,OAAOC,GAAuB/pB,KAC1C,CAUQ,KAAAyoB,CAAMvV,OAASzP,GACX,OAAKulB,GAAiBhpB,MAGlB+pB,GAAuB/pB,MAChBiT,EAAoB,IAAIsB,UAAU,oDAEtCyV,GAAoBhqB,KAAMkT,GALtBD,EAAoB6W,GAA4B,SAMvE,CASQ,KAAAtjB,GACI,OAAKwiB,GAAiBhpB,MAGlB+pB,GAAuB/pB,MAChBiT,EAAoB,IAAIsB,UAAU,oDAEzC0V,GAAoCjqB,MAC7BiT,EAAoB,IAAIsB,UAAU,2CAEtC2V,GAAoBlqB,MARhBiT,EAAoB6W,GAA4B,SASvE,CASQ,SAAAK,GACI,IAAKnB,GAAiBhpB,MAClB,MAAM8pB,GAA4B,aAEtC,OAAOM,GAAmCpqB,KACtD,EAkBI,SAASoqB,GAAmC3T,GACxC,OAAO,IAAI4T,GAA4B5T,EAC/C,CAEI,SAAS6T,GAAqB7D,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAgB,EAAG+C,EAAgB,IAAM,GACnI,MAAMlT,EAASnE,OAAOoK,OAAO4M,GAAe1W,WAI5C,OAHA8W,GAAyBjT,GAEzBiU,GAAqCjU,EADlBnE,OAAOoK,OAAOiO,GAAgC/X,WACR6T,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,GACjIlT,CACf,CACI,SAASiT,GAAyBjT,GAC9BA,EAAOG,OAAS,WAGhBH,EAAOO,kBAAevT,EACtBgT,EAAOmU,aAAUnnB,EAGjBgT,EAAOoU,+BAA4BpnB,EAGnCgT,EAAOqU,eAAiB,IAAIlW,EAG5B6B,EAAOsU,2BAAwBtnB,EAG/BgT,EAAOuU,mBAAgBvnB,EAGvBgT,EAAOwU,2BAAwBxnB,EAE/BgT,EAAOyU,0BAAuBznB,EAE9BgT,EAAO0U,eAAgB,CAC/B,CACI,SAASnC,GAAiB9W,GACtB,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,8BAGtCA,aAAaoX,EAC5B,CACI,SAASS,GAAuBtT,GAC5B,YAAuBhT,IAAnBgT,EAAOmU,OAInB,CACI,SAASZ,GAAoBvT,EAAQvD,GACjC,IAAIT,EACJ,GAAsB,WAAlBgE,EAAOG,QAAyC,YAAlBH,EAAOG,OACrC,OAAO5D,OAAoBvP,GAE/BgT,EAAOoU,0BAA0BO,aAAelY,EACa,QAA5DT,EAAKgE,EAAOoU,0BAA0BQ,wBAAqC,IAAP5Y,GAAyBA,EAAGgW,MAAMvV,GAIvG,MAAMvR,EAAQ8U,EAAOG,OACrB,GAAc,WAAVjV,GAAgC,YAAVA,EACtB,OAAOqR,OAAoBvP,GAE/B,QAAoCA,IAAhCgT,EAAOyU,qBACP,OAAOzU,EAAOyU,qBAAqBI,SAEvC,IAAIC,GAAqB,EACX,aAAV5pB,IACA4pB,GAAqB,EAErBrY,OAASzP,GAEb,MAAM2P,EAAUN,EAAW,CAAChN,EAASC,KACjC0Q,EAAOyU,qBAAuB,CAC1BI,cAAU7nB,EACV+nB,SAAU1lB,EACV2lB,QAAS1lB,EACT2lB,QAASxY,EACTyY,oBAAqBJ,KAO7B,OAJA9U,EAAOyU,qBAAqBI,SAAWlY,EAClCmY,GACDK,GAA4BnV,EAAQvD,GAEjCE,CACf,CACI,SAAS8W,GAAoBzT,GACzB,MAAM9U,EAAQ8U,EAAOG,OACrB,GAAc,WAAVjV,GAAgC,YAAVA,EACtB,OAAOsR,EAAoB,IAAIsB,UAAU,kBAAkB5S,+DAE/D,MAAMyR,EAAUN,EAAW,CAAChN,EAASC,KACjC,MAAM8lB,EAAe,CACjBL,SAAU1lB,EACV2lB,QAAS1lB,GAEb0Q,EAAOuU,cAAgBa,IAErBC,EAASrV,EAAOmU,QAKtB,YAJennB,IAAXqoB,GAAwBrV,EAAO0U,eAA2B,aAAVxpB,GAChDoqB,GAAiCD,GAErCE,GAAqCvV,EAAOoU,2BACrCzX,CACf,CAEI,SAAS6Y,GAA8BxV,GAQnC,OAPgB3D,EAAW,CAAChN,EAASC,KACjC,MAAMmmB,EAAe,CACjBV,SAAU1lB,EACV2lB,QAAS1lB,GAEb0Q,EAAOqU,eAAe3V,KAAK+W,IAGvC,CACI,SAASC,GAAgC1V,EAAQvV,GAE/B,aADAuV,EAAOG,OAKrBwV,GAA6B3V,GAHzBmV,GAA4BnV,EAAQvV,EAIhD,CACI,SAAS0qB,GAA4BnV,EAAQvD,GACzC,MAAMmQ,EAAa5M,EAAOoU,0BAC1BpU,EAAOG,OAAS,WAChBH,EAAOO,aAAe9D,EACtB,MAAM4Y,EAASrV,EAAOmU,aACPnnB,IAAXqoB,GACAO,GAAsDP,EAAQ5Y,IAE7DoZ,GAAyC7V,IAAW4M,EAAW2C,UAChEoG,GAA6B3V,EAEzC,CACI,SAAS2V,GAA6B3V,GAClCA,EAAOG,OAAS,UAChBH,EAAOoU,0BAA0B1U,KACjC,MAAMoW,EAAc9V,EAAOO,aAK3B,GAJAP,EAAOqU,eAAe7pB,QAAQirB,IAC1BA,EAAaT,QAAQc,KAEzB9V,EAAOqU,eAAiB,IAAIlW,OACQnR,IAAhCgT,EAAOyU,qBAEP,YADAsB,GAAkD/V,GAGtD,MAAMgW,EAAehW,EAAOyU,qBAE5B,GADAzU,EAAOyU,0BAAuBznB,EAC1BgpB,EAAad,oBAGb,OAFAc,EAAahB,QAAQc,QACrBC,GAAkD/V,GAItDjD,EADgBiD,EAAOoU,0BAA0B5U,GAAYwW,EAAaf,SACrD,KACjBe,EAAajB,WACbgB,GAAkD/V,GAC3C,MACPvD,IACAuZ,EAAahB,QAAQvY,GACrBsZ,GAAkD/V,GAC3C,MAEnB,CACI,SAASiW,GAAkCjW,GACvCA,EAAOsU,sBAAsBS,cAAS/nB,GACtCgT,EAAOsU,2BAAwBtnB,CACvC,CACI,SAASkpB,GAA2ClW,EAAQvV,GACxDuV,EAAOsU,sBAAsBU,QAAQvqB,GACrCuV,EAAOsU,2BAAwBtnB,EAC/B0oB,GAAgC1V,EAAQvV,EAChD,CACI,SAAS0rB,GAAkCnW,GACvCA,EAAOwU,sBAAsBO,cAAS/nB,GACtCgT,EAAOwU,2BAAwBxnB,EAEjB,aADAgT,EAAOG,SAGjBH,EAAOO,kBAAevT,OACcA,IAAhCgT,EAAOyU,uBACPzU,EAAOyU,qBAAqBM,WAC5B/U,EAAOyU,0BAAuBznB,IAGtCgT,EAAOG,OAAS,SAChB,MAAMkV,EAASrV,EAAOmU,aACPnnB,IAAXqoB,GACAe,GAAkCf,EAE9C,CACI,SAASgB,GAA2CrW,EAAQvV,GACxDuV,EAAOwU,sBAAsBQ,QAAQvqB,GACrCuV,EAAOwU,2BAAwBxnB,OAEKA,IAAhCgT,EAAOyU,uBACPzU,EAAOyU,qBAAqBO,QAAQvqB,GACpCuV,EAAOyU,0BAAuBznB,GAElC0oB,GAAgC1V,EAAQvV,EAChD,CAEI,SAAS+oB,GAAoCxT,GACzC,YAA6BhT,IAAzBgT,EAAOuU,oBAAgEvnB,IAAjCgT,EAAOwU,qBAIzD,CACI,SAASqB,GAAyC7V,GAC9C,YAAqChT,IAAjCgT,EAAOsU,4BAAwEtnB,IAAjCgT,EAAOwU,qBAIjE,CACI,SAAS8B,GAAuCtW,GAC5CA,EAAOwU,sBAAwBxU,EAAOuU,cACtCvU,EAAOuU,mBAAgBvnB,CAC/B,CACI,SAASupB,GAA4CvW,GACjDA,EAAOsU,sBAAwBtU,EAAOqU,eAAevV,OAC7D,CACI,SAASiX,GAAkD/V,QAC1BhT,IAAzBgT,EAAOuU,gBACPvU,EAAOuU,cAAcS,QAAQhV,EAAOO,cACpCP,EAAOuU,mBAAgBvnB,GAE3B,MAAMqoB,EAASrV,EAAOmU,aACPnnB,IAAXqoB,GACAmB,GAAiCnB,EAAQrV,EAAOO,aAE5D,CACI,SAASkW,GAAiCzW,EAAQ0W,GAC9C,MAAMrB,EAASrV,EAAOmU,aACPnnB,IAAXqoB,GAAwBqB,IAAiB1W,EAAO0U,gBAC5CgC,EACAC,GAA+BtB,GAG/BC,GAAiCD,IAGzCrV,EAAO0U,cAAgBgC,CAC/B,CAxQI7a,OAAO6I,iBAAiBmO,GAAe1W,UAAW,CAC9C6V,MAAO,CAAErN,YAAY,GACrB5U,MAAO,CAAE4U,YAAY,GACrB+O,UAAW,CAAE/O,YAAY,GACzByO,OAAQ,CAAEzO,YAAY,KAE1BhJ,EAAgBkX,GAAe1W,UAAU6V,MAAO,SAChDrW,EAAgBkX,GAAe1W,UAAUpM,MAAO,SAChD4L,EAAgBkX,GAAe1W,UAAUuX,UAAW,aAClB,iBAAvBjU,OAAOmF,aACd/I,OAAOC,eAAe+W,GAAe1W,UAAWsD,OAAOmF,YAAa,CAChE/N,MAAO,iBACPkF,cAAc,IAkQtB,MAAM6X,GACF,WAAAtqB,CAAY0W,GAGR,GAFAiC,EAAuBjC,EAAQ,EAAG,+BAClCsS,GAAqBtS,EAAQ,mBACzBsT,GAAuBtT,GACvB,MAAM,IAAIlC,UAAU,+EAExBvU,KAAKqtB,qBAAuB5W,EAC5BA,EAAOmU,QAAU5qB,KACjB,MAAM2B,EAAQ8U,EAAOG,OACrB,GAAc,aAAVjV,GACKsoB,GAAoCxT,IAAWA,EAAO0U,cACvDmC,GAAoCttB,MAGpCutB,GAA8CvtB,MAElDwtB,GAAqCxtB,WAEpC,GAAc,aAAV2B,EACL8rB,GAA8CztB,KAAMyW,EAAOO,cAC3DwW,GAAqCxtB,WAEpC,GAAc,WAAV2B,EACL4rB,GAA8CvtB,MAC9C0tB,GAA+C1tB,UAE9C,CACD,MAAMusB,EAAc9V,EAAOO,aAC3ByW,GAA8CztB,KAAMusB,GACpDoB,GAA+C3tB,KAAMusB,EACrE,CACA,CAKQ,UAAI1lB,GACA,OAAK+mB,GAA8B5tB,MAG5BA,KAAKwX,eAFDvE,EAAoB4a,GAAiC,UAG5E,CASQ,eAAIjM,GACA,IAAKgM,GAA8B5tB,MAC/B,MAAM6tB,GAAiC,eAE3C,QAAkCpqB,IAA9BzD,KAAKqtB,qBACL,MAAMS,GAA2B,eAErC,OAAOC,GAA0C/tB,KAC7D,CASQ,SAAIuK,GACA,OAAKqjB,GAA8B5tB,MAG5BA,KAAKguB,cAFD/a,EAAoB4a,GAAiC,SAG5E,CAIQ,KAAApF,CAAMvV,OAASzP,GACX,OAAKmqB,GAA8B5tB,WAGDyD,IAA9BzD,KAAKqtB,qBACEpa,EAAoB6a,GAA2B,UAEnDG,GAAiCjuB,KAAMkT,GALnCD,EAAoB4a,GAAiC,SAM5E,CAIQ,KAAArnB,GACI,IAAKonB,GAA8B5tB,MAC/B,OAAOiT,EAAoB4a,GAAiC,UAEhE,MAAMpX,EAASzW,KAAKqtB,qBACpB,YAAe5pB,IAAXgT,EACOxD,EAAoB6a,GAA2B,UAEtD7D,GAAoCxT,GAC7BxD,EAAoB,IAAIsB,UAAU,2CAEtC2Z,GAAiCluB,KACpD,CAWQ,WAAA6a,GACI,IAAK+S,GAA8B5tB,MAC/B,MAAM6tB,GAAiC,oBAG5BpqB,IADAzD,KAAKqtB,sBAIpBc,GAAmCnuB,KAC/C,CACQ,KAAA0oB,CAAM7O,OAAQpW,GACV,OAAKmqB,GAA8B5tB,WAGDyD,IAA9BzD,KAAKqtB,qBACEpa,EAAoB6a,GAA2B,aAEnDM,GAAiCpuB,KAAM6Z,GALnC5G,EAAoB4a,GAAiC,SAM5E,EAsBI,SAASD,GAA8B1b,GACnC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,yBAGtCA,aAAamY,EAC5B,CAEI,SAAS4D,GAAiCnC,EAAQ5Y,GAE9C,OAAO8W,GADQ8B,EAAOuB,qBACana,EAC3C,CACI,SAASgb,GAAiCpC,GAEtC,OAAO5B,GADQ4B,EAAOuB,qBAE9B,CACI,SAASgB,GAAqDvC,GAC1D,MAAMrV,EAASqV,EAAOuB,qBAChB1rB,EAAQ8U,EAAOG,OACrB,OAAIqT,GAAoCxT,IAAqB,WAAV9U,EACxCqR,OAAoBvP,GAEjB,YAAV9B,EACOsR,EAAoBwD,EAAOO,cAE/BkX,GAAiCpC,EAChD,CACI,SAASwC,GAAuDxC,EAAQ5qB,GACjC,YAA/B4qB,EAAOyC,oBACPtB,GAAiCnB,EAAQ5qB,GAGzCstB,GAA0C1C,EAAQ5qB,EAE9D,CACI,SAASmrB,GAAsDP,EAAQ5qB,GACjC,YAA9B4qB,EAAO2C,mBACPC,GAAgC5C,EAAQ5qB,GAGxCytB,GAAyC7C,EAAQ5qB,EAE7D,CACI,SAAS6sB,GAA0CjC,GAC/C,MAAMrV,EAASqV,EAAOuB,qBAChB1rB,EAAQ8U,EAAOG,OACrB,MAAc,YAAVjV,GAAiC,aAAVA,EAChB,KAEG,WAAVA,EACO,EAEJitB,GAA8CnY,EAAOoU,0BACpE,CACI,SAASsD,GAAmCrC,GACxC,MAAMrV,EAASqV,EAAOuB,qBAChBwB,EAAgB,IAAIta,UAAU,oFACpC8X,GAAsDP,EAAQ+C,GAG9DP,GAAuDxC,EAAQ+C,GAC/DpY,EAAOmU,aAAUnnB,EACjBqoB,EAAOuB,0BAAuB5pB,CACtC,CACI,SAAS2qB,GAAiCtC,EAAQjS,GAC9C,MAAMpD,EAASqV,EAAOuB,qBAChBhK,EAAa5M,EAAOoU,0BACpBiE,EAAYC,GAA4C1L,EAAYxJ,GAC1E,GAAIpD,IAAWqV,EAAOuB,qBAClB,OAAOpa,EAAoB6a,GAA2B,aAE1D,MAAMnsB,EAAQ8U,EAAOG,OACrB,GAAc,YAAVjV,EACA,OAAOsR,EAAoBwD,EAAOO,cAEtC,GAAIiT,GAAoCxT,IAAqB,WAAV9U,EAC/C,OAAOsR,EAAoB,IAAIsB,UAAU,6DAE7C,GAAc,aAAV5S,EACA,OAAOsR,EAAoBwD,EAAOO,cAEtC,MAAM5D,EAAU6Y,GAA8BxV,GAE9C,OADAuY,GAAqC3L,EAAYxJ,EAAOiV,GACjD1b,CACf,CA1GId,OAAO6I,iBAAiBkP,GAA4BzX,UAAW,CAC3D6V,MAAO,CAAErN,YAAY,GACrB5U,MAAO,CAAE4U,YAAY,GACrBP,YAAa,CAAEO,YAAY,GAC3BsN,MAAO,CAAEtN,YAAY,GACrBvU,OAAQ,CAAEuU,YAAY,GACtBwG,YAAa,CAAExG,YAAY,GAC3B7Q,MAAO,CAAE6Q,YAAY,KAEzBhJ,EAAgBiY,GAA4BzX,UAAU6V,MAAO,SAC7DrW,EAAgBiY,GAA4BzX,UAAUpM,MAAO,SAC7D4L,EAAgBiY,GAA4BzX,UAAUiI,YAAa,eACnEzI,EAAgBiY,GAA4BzX,UAAU8V,MAAO,SAC3B,iBAAvBxS,OAAOmF,aACd/I,OAAOC,eAAe8X,GAA4BzX,UAAWsD,OAAOmF,YAAa,CAC7E/N,MAAO,8BACPkF,cAAc,IA2FtB,MAAMyc,GAAgB,CAAA,EAMtB,MAAMtE,GACF,WAAA5qB,GACI,MAAM,IAAIwU,UAAU,sBAChC,CAQQ,eAAI2a,GACA,IAAKC,GAAkCnvB,MACnC,MAAMovB,GAAuC,eAEjD,OAAOpvB,KAAKorB,YACxB,CAIQ,UAAIiE,GACA,IAAKF,GAAkCnvB,MACnC,MAAMovB,GAAuC,UAEjD,QAA8B3rB,IAA1BzD,KAAKqrB,iBAIL,MAAM,IAAI9W,UAAU,qEAExB,OAAOvU,KAAKqrB,iBAAiBgE,MACzC,CAQQ,KAAAnuB,CAAMyZ,OAAIlX,GACN,IAAK0rB,GAAkCnvB,MACnC,MAAMovB,GAAuC,SAGnC,aADApvB,KAAKsvB,0BAA0B1Y,QAM7C2Y,GAAqCvvB,KAAM2a,EACvD,CAEQ,CAAC1E,GAAY/C,GACT,MAAM9N,EAASpF,KAAKwvB,gBAAgBtc,GAEpC,OADAuc,GAA+CzvB,MACxCoF,CACnB,CAEQ,CAAC+Q,KACGiK,GAAWpgB,KACvB,EAcI,SAASmvB,GAAkCjd,GACvC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,8BAGtCA,aAAayY,EAC5B,CACI,SAASD,GAAqCjU,EAAQ4M,EAAYoD,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,GAC7ItG,EAAWiM,0BAA4B7Y,EACvCA,EAAOoU,0BAA4BxH,EAEnCA,EAAWvD,YAASrc,EACpB4f,EAAWtD,qBAAkBtc,EAC7B2c,GAAWiD,GACXA,EAAW+H,kBAAe3nB,EAC1B4f,EAAWgI,iBAAmBhC,KAC9BhG,EAAW2C,UAAW,EACtB3C,EAAWqM,uBAAyB/F,EACpCtG,EAAWiD,aAAeM,EAC1BvD,EAAWsM,gBAAkBpF,EAC7BlH,EAAWuM,gBAAkBpF,EAC7BnH,EAAWmM,gBAAkB/E,EAC7B,MAAM0C,EAAe0C,GAA+CxM,GACpE6J,GAAiCzW,EAAQ0W,GAGzC3Z,EADqBR,EADDyT,KAEM,KACtBpD,EAAW2C,UAAW,EACtB8J,GAAoDzM,GAC7C,MACRwD,IACCxD,EAAW2C,UAAW,EACtBmG,GAAgC1V,EAAQoQ,GACjC,MAEnB,CACI,SAAS+C,GAAuDnT,EAAQgT,EAAgB7C,EAAe+C,GACnG,MAAMtG,EAAa/Q,OAAOoK,OAAOiO,GAAgC/X,WACjE,IAAI6T,EACA8D,EACAC,EACAC,EAEAhE,OADyBhjB,IAAzBgmB,EAAezC,MACE,IAAMyC,EAAezC,MAAM3D,GAG3B,OAGjBkH,OADyB9mB,IAAzBgmB,EAAef,MACE7O,GAAS4P,EAAef,MAAM7O,EAAOwJ,GAGrC,IAAMrQ,OAAoBvP,GAG3C+mB,OADyB/mB,IAAzBgmB,EAAejjB,MACE,IAAMijB,EAAejjB,QAGrB,IAAMwM,OAAoBvP,GAG3CgnB,OADyBhnB,IAAzBgmB,EAAehB,MACEvV,GAAUuW,EAAehB,MAAMvV,GAG/B,IAAMF,OAAoBvP,GAE/CinB,GAAqCjU,EAAQ4M,EAAYoD,EAAgB8D,EAAgBC,EAAgBC,EAAgB7D,EAAe+C,EAChJ,CAEI,SAAS8F,GAA+CpM,GACpDA,EAAWsM,qBAAkBlsB,EAC7B4f,EAAWuM,qBAAkBnsB,EAC7B4f,EAAWmM,qBAAkB/rB,EAC7B4f,EAAWqM,4BAAyBjsB,CAC5C,CACI,SAASuoB,GAAqC3I,GAC1CrD,GAAqBqD,EAAY4L,GAAe,GAChDa,GAAoDzM,EAC5D,CACI,SAAS0L,GAA4C1L,EAAYxJ,GAC7D,IACI,OAAOwJ,EAAWqM,uBAAuB7V,EACrD,CACQ,MAAOkW,GAEH,OADAC,GAA6C3M,EAAY0M,GAClD,CACnB,CACA,CACI,SAASnB,GAA8CvL,GACnD,OAAOA,EAAWiD,aAAejD,EAAWtD,eACpD,CACI,SAASiP,GAAqC3L,EAAYxJ,EAAOiV,GAC7D,IACI9O,GAAqBqD,EAAYxJ,EAAOiV,EACpD,CACQ,MAAOmB,GAEH,YADAD,GAA6C3M,EAAY4M,EAErE,CACQ,MAAMxZ,EAAS4M,EAAWiM,0BACrBrF,GAAoCxT,IAA6B,aAAlBA,EAAOG,QAEvDsW,GAAiCzW,EADZoZ,GAA+CxM,IAGxEyM,GAAoDzM,EAC5D,CAEI,SAASyM,GAAoDzM,GACzD,MAAM5M,EAAS4M,EAAWiM,0BAC1B,IAAKjM,EAAW2C,SACZ,OAEJ,QAAqCviB,IAAjCgT,EAAOsU,sBACP,OAGJ,GAAc,aADAtU,EAAOG,OAGjB,YADAwV,GAA6B3V,GAGjC,GAAiC,IAA7B4M,EAAWvD,OAAOvT,OAClB,OAEJ,MAAMe,EAAQ6S,GAAekD,GACzB/V,IAAU2hB,GACViB,GAA4C7M,GAG5C8M,GAA4C9M,EAAY/V,EAEpE,CACI,SAAS0iB,GAA6C3M,EAAYniB,GACV,aAAhDmiB,EAAWiM,0BAA0B1Y,QACrC2Y,GAAqClM,EAAYniB,EAE7D,CACI,SAASgvB,GAA4C7M,GACjD,MAAM5M,EAAS4M,EAAWiM,0BAC1BvC,GAAuCtW,GACvCkJ,GAAa0D,GACb,MAAM+M,EAAmB/M,EAAWuM,kBACpCH,GAA+CpM,GAC/C7P,EAAY4c,EAAkB,KAC1BxD,GAAkCnW,GAC3B,MACRvD,IACC4Z,GAA2CrW,EAAQvD,GAC5C,MAEnB,CACI,SAASid,GAA4C9M,EAAYxJ,GAC7D,MAAMpD,EAAS4M,EAAWiM,0BAC1BtC,GAA4CvW,GAE5CjD,EADyB6P,EAAWsM,gBAAgB9V,GACtB,KAC1B6S,GAAkCjW,GAClC,MAAM9U,EAAQ8U,EAAOG,OAErB,GADA+I,GAAa0D,IACR4G,GAAoCxT,IAAqB,aAAV9U,EAAsB,CACtE,MAAMwrB,EAAe0C,GAA+CxM,GACpE6J,GAAiCzW,EAAQ0W,EACzD,CAEY,OADA2C,GAAoDzM,GAC7C,MACRnQ,IACuB,aAAlBuD,EAAOG,QACP6Y,GAA+CpM,GAEnDsJ,GAA2ClW,EAAQvD,GAC5C,MAEnB,CACI,SAAS2c,GAA+CxM,GAEpD,OADoBuL,GAA8CvL,IAC5C,CAC9B,CAEI,SAASkM,GAAqClM,EAAYniB,GACtD,MAAMuV,EAAS4M,EAAWiM,0BAC1BG,GAA+CpM,GAC/CuI,GAA4BnV,EAAQvV,EAC5C,CAEI,SAAS4oB,GAA4BvlB,GACjC,OAAO,IAAIgQ,UAAU,4BAA4BhQ,yCACzD,CAEI,SAAS6qB,GAAuC7qB,GAC5C,OAAO,IAAIgQ,UAAU,6CAA6ChQ,0DAC1E,CAEI,SAASspB,GAAiCtpB,GACtC,OAAO,IAAIgQ,UAAU,yCAAyChQ,sDACtE,CACI,SAASupB,GAA2BvpB,GAChC,OAAO,IAAIgQ,UAAU,UAAYhQ,EAAO,oCAChD,CACI,SAASipB,GAAqC1B,GAC1CA,EAAOtU,eAAiB1E,EAAW,CAAChN,EAASC,KACzC+lB,EAAOrU,uBAAyB3R,EAChCgmB,EAAOpU,sBAAwB3R,EAC/B+lB,EAAOyC,oBAAsB,WAEzC,CACI,SAASZ,GAA+C7B,EAAQ5Y,GAC5Dsa,GAAqC1B,GACrCmB,GAAiCnB,EAAQ5Y,EACjD,CACI,SAASwa,GAA+C5B,GACpD0B,GAAqC1B,GACrCe,GAAkCf,EAC1C,CACI,SAASmB,GAAiCnB,EAAQ5Y,QACTzP,IAAjCqoB,EAAOpU,wBAGX5D,EAA0BgY,EAAOtU,gBACjCsU,EAAOpU,sBAAsBxE,GAC7B4Y,EAAOrU,4BAAyBhU,EAChCqoB,EAAOpU,2BAAwBjU,EAC/BqoB,EAAOyC,oBAAsB,WACrC,CACI,SAASC,GAA0C1C,EAAQ5Y,GACvDya,GAA+C7B,EAAQ5Y,EAC/D,CACI,SAAS2Z,GAAkCf,QACDroB,IAAlCqoB,EAAOrU,yBAGXqU,EAAOrU,4BAAuBhU,GAC9BqoB,EAAOrU,4BAAyBhU,EAChCqoB,EAAOpU,2BAAwBjU,EAC/BqoB,EAAOyC,oBAAsB,WACrC,CACI,SAASjB,GAAoCxB,GACzCA,EAAOkC,cAAgBlb,EAAW,CAAChN,EAASC,KACxC+lB,EAAOuE,sBAAwBvqB,EAC/BgmB,EAAOwE,qBAAuBvqB,IAElC+lB,EAAO2C,mBAAqB,SACpC,CACI,SAAShB,GAA8C3B,EAAQ5Y,GAC3Doa,GAAoCxB,GACpC4C,GAAgC5C,EAAQ5Y,EAChD,CACI,SAASqa,GAA8CzB,GACnDwB,GAAoCxB,GACpCC,GAAiCD,EACzC,CACI,SAAS4C,GAAgC5C,EAAQ5Y,QACTzP,IAAhCqoB,EAAOwE,uBAGXxc,EAA0BgY,EAAOkC,eACjClC,EAAOwE,qBAAqBpd,GAC5B4Y,EAAOuE,2BAAwB5sB,EAC/BqoB,EAAOwE,0BAAuB7sB,EAC9BqoB,EAAO2C,mBAAqB,WACpC,CACI,SAASrB,GAA+BtB,GACpCwB,GAAoCxB,EAC5C,CACI,SAAS6C,GAAyC7C,EAAQ5Y,GACtDua,GAA8C3B,EAAQ5Y,EAC9D,CACI,SAAS6Y,GAAiCD,QACDroB,IAAjCqoB,EAAOuE,wBAGXvE,EAAOuE,2BAAsB5sB,GAC7BqoB,EAAOuE,2BAAwB5sB,EAC/BqoB,EAAOwE,0BAAuB7sB,EAC9BqoB,EAAO2C,mBAAqB,YACpC,CAGI,SAAS8B,KACL,MAA0B,oBAAfC,WACAA,WAEc,oBAATC,KACLA,UAEgB,IAAXC,EACLA,OADN,CAIb,CA7SIpe,OAAO6I,iBAAiBwP,GAAgC/X,UAAW,CAC/Dsc,YAAa,CAAE9T,YAAY,GAC3BiU,OAAQ,CAAEjU,YAAY,GACtBla,MAAO,CAAEka,YAAY,KAES,iBAAvBlF,OAAOmF,aACd/I,OAAOC,eAAeoY,GAAgC/X,UAAWsD,OAAOmF,YAAa,CACjF/N,MAAO,kCACPkF,cAAc,IAsStB,MAAMme,GAAUJ,KAGhB,SAASK,GAA0BtQ,GAC/B,GAAsB,mBAATA,GAAuC,iBAATA,EACvC,OAAO,EAEX,GAAkB,iBAAdA,EAAK/b,KACL,OAAO,EAEX,IAEI,OADA,IAAI+b,GACG,CACnB,CACQ,MAAO7N,GACH,OAAO,CACnB,CACA,CAMI,SAASoe,KACL,MAAMvQ,EAAOqQ,cAAyC,EAASA,GAAQG,aACvE,OAAOF,GAA0BtQ,GAAQA,OAAO7c,CACxD,CAKI,SAASstB,KAEL,MAAMzQ,EAAO,SAAsB9b,EAASD,GACxCvE,KAAKwE,QAAUA,GAAW,GAC1BxE,KAAKuE,KAAOA,GAAQ,QAChBnB,MAAM4tB,mBACN5tB,MAAM4tB,kBAAkBhxB,KAAMA,KAAKD,cAM3C,OAHAqS,EAAgBkO,EAAM,gBACtBA,EAAK1N,UAAYN,OAAOoK,OAAOtZ,MAAMwP,WACrCN,OAAOC,eAAe+N,EAAK1N,UAAW,cAAe,CAAEtF,MAAOgT,EAAM2Q,UAAU,EAAMze,cAAc,IAC3F8N,CACf,CAEI,MAAMwQ,GAAeD,MAAmBE,KAExC,SAASG,GAAqBC,EAAQhU,EAAMiU,EAAcC,EAAc5V,EAAe4T,GACnF,MAAM7Y,EAAS+C,EAAmC4X,GAC5CrF,EAAS1B,GAAmCjN,GAClDgU,EAAOnW,YAAa,EACpB,IAAIsW,GAAe,EAEfC,EAAeve,OAAoBvP,GACvC,OAAOqP,EAAW,CAAChN,EAASC,KACxB,IAAI0kB,EACJ,QAAehnB,IAAX4rB,EAAsB,CAsBtB,GArBA5E,EAAiB,KACb,MAAMvpB,OAA0BuC,IAAlB4rB,EAAOnc,OAAuBmc,EAAOnc,OAAS,IAAI4d,GAAa,UAAW,cAClFU,EAAU,GACXH,GACDG,EAAQrc,KAAK,IACW,aAAhBgI,EAAKvG,OACEoT,GAAoB7M,EAAMjc,GAE9B8R,OAAoBvP,IAG9BgY,GACD+V,EAAQrc,KAAK,IACa,aAAlBgc,EAAOva,OACAM,GAAqBia,EAAQjwB,GAEjC8R,OAAoBvP,IAGnCguB,EAAmB,IAAM5rB,QAAQ6rB,IAAIF,EAAQ3oB,IAAI8oB,GAAUA,OAAY,EAAMzwB,IAE7EmuB,EAAOnG,QAEP,YADAuB,IAGJ4E,EAAO3oB,iBAAiB,QAAS+jB,EACjD,CAIY,SAASmH,IACL,OAAO9e,EAAW,CAAC+e,EAAaC,KAC5B,SAASjW,EAAK/B,GACNA,EACA+X,IAKA1e,EAAmB4e,IAAYlW,EAAMiW,EAEjE,CACoBjW,GAAK,IAEzB,CACY,SAASkW,IACL,OAAIT,EACOte,GAAoB,GAExBG,EAAmB2Y,EAAOkC,cAAe,IACrClb,EAAW,CAACkf,EAAaC,KAC5BrX,GAAgCpE,EAAQ,CACpCwD,YAAaH,IACT0X,EAAepe,EAAmBib,GAAiCtC,EAAQjS,QAAQpW,EAAWuO,GAC9FggB,GAAY,IAEhBjY,YAAa,IAAMiY,GAAY,GAC/BtX,YAAauX,MAIzC,CAgCY,GA9BAC,EAAmBf,EAAQ3a,EAAOgB,eAAgB+U,IACzC8E,EAIDc,GAAS,EAAM5F,GAHfkF,EAAmB,IAAMzH,GAAoB7M,EAAMoP,IAAc,EAAMA,GAKpE,OAGX2F,EAAmB/U,EAAM2O,EAAOtU,eAAgB+U,IACvC9Q,EAID0W,GAAS,EAAM5F,GAHfkF,EAAmB,IAAMva,GAAqBia,EAAQ5E,IAAc,EAAMA,GAKvE,OAGX6F,EAAkBjB,EAAQ3a,EAAOgB,eAAgB,KACxC4Z,EAIDe,IAHAV,EAAmB,IAAMpD,GAAqDvC,IAK3E,OAGP7B,GAAoC9M,IAAyB,WAAhBA,EAAKvG,OAAqB,CACvE,MAAMyb,EAAa,IAAI9d,UAAU,+EAC5BkH,EAID0W,GAAS,EAAME,GAHfZ,EAAmB,IAAMva,GAAqBia,EAAQkB,IAAa,EAAMA,EAK7F,CAEY,SAASC,IAGL,MAAMC,EAAkBhB,EACxB,OAAOpe,EAAmBoe,EAAc,IAAMgB,IAAoBhB,EAAee,SAA0B7uB,EAC3H,CACY,SAASyuB,EAAmBzb,EAAQrD,EAASue,GACnB,YAAlBlb,EAAOG,OACP+a,EAAOlb,EAAOO,cAGdtD,EAAcN,EAASue,EAE3C,CACY,SAASS,EAAkB3b,EAAQrD,EAASue,GAClB,WAAlBlb,EAAOG,OACP+a,IAGAle,EAAgBL,EAASue,EAE7C,CACY,SAASF,EAAmBE,EAAQa,EAAiBC,GAWjD,SAASC,IAEL,OADAlf,EAAYme,IAAU,IAAMgB,EAASH,EAAiBC,GAAgBG,GAAYD,GAAS,EAAMC,IAC1F,IAC3B,CAboBtB,IAGJA,GAAe,EACK,aAAhBnU,EAAKvG,QAA0BqT,GAAoC9M,GAInEuV,IAHAjf,EAAgB6e,IAAyBI,GAS7D,CACY,SAASP,EAASU,EAAS3xB,GACnBowB,IAGJA,GAAe,EACK,aAAhBnU,EAAKvG,QAA0BqT,GAAoC9M,GAInEwV,EAASE,EAAS3xB,GAHlBuS,EAAgB6e,IAAyB,IAAMK,EAASE,EAAS3xB,IAKrF,CACY,SAASyxB,EAASE,EAAS3xB,GAYvB,OAXAitB,GAAmCrC,GACnC3U,EAAmCX,QACpB/S,IAAX4rB,GACAA,EAAO9oB,oBAAoB,QAASkkB,GAEpCoI,EACA9sB,EAAO7E,GAGP4E,OAAQrC,GAEL,IACvB,CAhEYqQ,EAA0B8d,MAkEtC,CAOI,MAAMkB,GACF,WAAA/yB,GACI,MAAM,IAAIwU,UAAU,sBAChC,CAKQ,eAAIqN,GACA,IAAKmR,GAAkC/yB,MACnC,MAAMgzB,GAAuC,eAEjD,OAAOC,GAA8CjzB,KACjE,CAKQ,KAAAwG,GACI,IAAKusB,GAAkC/yB,MACnC,MAAMgzB,GAAuC,SAEjD,IAAKE,GAAiDlzB,MAClD,MAAM,IAAIuU,UAAU,mDAExB4e,GAAqCnzB,KACjD,CACQ,OAAAiiB,CAAQpI,OAAQpW,GACZ,IAAKsvB,GAAkC/yB,MACnC,MAAMgzB,GAAuC,WAEjD,IAAKE,GAAiDlzB,MAClD,MAAM,IAAIuU,UAAU,qDAExB,OAAO6e,GAAuCpzB,KAAM6Z,EAChE,CAIQ,KAAA3Y,CAAMyZ,OAAIlX,GACN,IAAKsvB,GAAkC/yB,MACnC,MAAMgzB,GAAuC,SAEjDK,GAAqCrzB,KAAM2a,EACvD,CAEQ,CAACvE,GAAalD,GACVkN,GAAWpgB,MACX,MAAMoF,EAASpF,KAAKqiB,iBAAiBnP,GAErC,OADAogB,GAA+CtzB,MACxCoF,CACnB,CAEQ,CAACiR,GAAWqD,GACR,MAAMjD,EAASzW,KAAKuzB,0BACpB,GAAIvzB,KAAK8f,OAAOvT,OAAS,EAAG,CACxB,MAAMsN,EAAQ8F,GAAa3f,MACvBA,KAAK8hB,iBAA0C,IAAvB9hB,KAAK8f,OAAOvT,QACpC+mB,GAA+CtzB,MAC/CklB,GAAoBzO,IAGpB+c,GAAgDxzB,MAEpD0Z,EAAYM,YAAYH,EACxC,MAEgBJ,EAA6BhD,EAAQiD,GACrC8Z,GAAgDxzB,KAEhE,CAEQ,CAACsW,KAET,EAkBI,SAASyc,GAAkC7gB,GACvC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,8BAGtCA,aAAa4gB,EAC5B,CACI,SAASU,GAAgDnQ,GAClCoQ,GAA8CpQ,KAI7DA,EAAWE,SACXF,EAAWG,YAAa,GAG5BH,EAAWE,UAAW,EAEtB/P,EADoB6P,EAAWI,iBACN,KACrBJ,EAAWE,UAAW,EAClBF,EAAWG,aACXH,EAAWG,YAAa,EACxBgQ,GAAgDnQ,IAE7C,MACR1I,IACC0Y,GAAqChQ,EAAY1I,GAC1C,QAEnB,CACI,SAAS8Y,GAA8CpQ,GACnD,MAAM5M,EAAS4M,EAAWkQ,0BAC1B,QAAKL,GAAiD7P,MAGjDA,EAAW2C,cAGZ5L,GAAuB3D,IAAWwD,GAAiCxD,GAAU,IAG7Dwc,GAA8C5P,GAChD,EAI1B,CACI,SAASiQ,GAA+CjQ,GACpDA,EAAWI,oBAAiBhgB,EAC5B4f,EAAWhB,sBAAmB5e,EAC9B4f,EAAWqM,4BAAyBjsB,CAC5C,CAEI,SAAS0vB,GAAqC9P,GAC1C,IAAK6P,GAAiD7P,GAClD,OAEJ,MAAM5M,EAAS4M,EAAWkQ,0BAC1BlQ,EAAWvB,iBAAkB,EACI,IAA7BuB,EAAWvD,OAAOvT,SAClB+mB,GAA+CjQ,GAC/C6B,GAAoBzO,GAEhC,CACI,SAAS2c,GAAuC/P,EAAYxJ,GACxD,IAAKqZ,GAAiD7P,GAClD,OAEJ,MAAM5M,EAAS4M,EAAWkQ,0BAC1B,GAAInZ,GAAuB3D,IAAWwD,GAAiCxD,GAAU,EAC7EmD,GAAiCnD,EAAQoD,GAAO,OAE/C,CACD,IAAIiV,EACJ,IACIA,EAAYzL,EAAWqM,uBAAuB7V,EAC9D,CACY,MAAOkW,GAEH,MADAsD,GAAqChQ,EAAY0M,GAC3CA,CACtB,CACY,IACI/P,GAAqBqD,EAAYxJ,EAAOiV,EACxD,CACY,MAAOmB,GAEH,MADAoD,GAAqChQ,EAAY4M,GAC3CA,CACtB,CACA,CACQuD,GAAgDnQ,EACxD,CACI,SAASgQ,GAAqChQ,EAAY1I,GACtD,MAAMlE,EAAS4M,EAAWkQ,0BACJ,aAAlB9c,EAAOG,SAGXwJ,GAAWiD,GACXiQ,GAA+CjQ,GAC/C8C,GAAoB1P,EAAQkE,GACpC,CACI,SAASsY,GAA8C5P,GACnD,MAAM1hB,EAAQ0hB,EAAWkQ,0BAA0B3c,OACnD,MAAc,YAAVjV,EACO,KAEG,WAAVA,EACO,EAEJ0hB,EAAWiD,aAAejD,EAAWtD,eACpD,CAEI,SAAS2T,GAA+CrQ,GACpD,OAAIoQ,GAA8CpQ,EAI1D,CACI,SAAS6P,GAAiD7P,GACtD,MAAM1hB,EAAQ0hB,EAAWkQ,0BAA0B3c,OACnD,OAAKyM,EAAWvB,iBAA6B,aAAVngB,CAI3C,CACI,SAASgyB,GAAqCld,EAAQ4M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAe+C,GAC7HtG,EAAWkQ,0BAA4B9c,EACvC4M,EAAWvD,YAASrc,EACpB4f,EAAWtD,qBAAkBtc,EAC7B2c,GAAWiD,GACXA,EAAW2C,UAAW,EACtB3C,EAAWvB,iBAAkB,EAC7BuB,EAAWG,YAAa,EACxBH,EAAWE,UAAW,EACtBF,EAAWqM,uBAAyB/F,EACpCtG,EAAWiD,aAAeM,EAC1BvD,EAAWI,eAAiBiD,EAC5BrD,EAAWhB,iBAAmBsE,EAC9BlQ,EAAOa,0BAA4B+L,EAEnC7P,EAAYR,EADQyT,KAC0B,KAC1CpD,EAAW2C,UAAW,EACtBwN,GAAgDnQ,GACzC,MACRwD,IACCwM,GAAqChQ,EAAYwD,GAC1C,MAEnB,CACI,SAAS+M,GAAyDnd,EAAQod,EAAkBjN,EAAe+C,GACvG,MAAMtG,EAAa/Q,OAAOoK,OAAOoW,GAAgClgB,WACjE,IAAI6T,EACAC,EACAC,EAEAF,OAD2BhjB,IAA3BowB,EAAiB7M,MACA,IAAM6M,EAAiB7M,MAAM3D,GAG7B,OAGjBqD,OAD0BjjB,IAA1BowB,EAAiB5M,KACD,IAAM4M,EAAiB5M,KAAK5D,GAG5B,IAAMrQ,OAAoBvP,GAG1CkjB,OAD4BljB,IAA5BowB,EAAiBvZ,OACCpH,GAAU2gB,EAAiBvZ,OAAOpH,GAGlC,IAAMF,OAAoBvP,GAEhDkwB,GAAqCld,EAAQ4M,EAAYoD,EAAgBC,EAAeC,EAAiBC,EAAe+C,EAChI,CAEI,SAASqJ,GAAuCzuB,GAC5C,OAAO,IAAIgQ,UAAU,6CAA6ChQ,0DAC1E,CAEI,SAASuvB,GAAkBrd,EAAQsd,GAC/B,OAAItS,GAA+BhL,EAAOa,2BAC/B0c,GAAsBvd,GAE1Bwd,GAAyBxd,EACxC,CACI,SAASwd,GAAyBxd,EAAQsd,GACtC,MAAMvd,EAAS+C,EAAmC9C,GAClD,IAIIyd,EACAC,EACAC,EACAC,EACAC,EARAC,GAAU,EACVC,GAAY,EACZC,GAAY,EACZC,GAAY,EAMhB,MAAMC,EAAgB7hB,EAAWhN,IAC7BwuB,EAAuBxuB,IAE3B,SAAS4gB,IACL,OAAI6N,GACAC,GAAY,EACLxhB,OAAoBvP,KAE/B8wB,GAAU,EA2CV3Z,GAAgCpE,EA1CZ,CAChBwD,YAAaH,IAIT9F,EAAgB,KACZygB,GAAY,EACZ,MAAMI,EAAS/a,EACTgb,EAAShb,EAMV4a,GACDrB,GAAuCgB,EAAQ9c,0BAA2Bsd,GAEzEF,GACDtB,GAAuCiB,EAAQ/c,0BAA2Bud,GAE9EN,GAAU,EACNC,GACA9N,OAIZ3M,YAAa,KACTwa,GAAU,EACLE,GACDtB,GAAqCiB,EAAQ9c,2BAE5Cod,GACDvB,GAAqCkB,EAAQ/c,2BAE5Cmd,GAAcC,GACfJ,OAAqB7wB,IAG7BiX,YAAa,KACT6Z,GAAU,KAIXvhB,OAAoBvP,GACvC,CACQ,SAASqxB,EAAiB5hB,GAGtB,GAFAuhB,GAAY,EACZP,EAAUhhB,EACNwhB,EAAW,CACX,MAAMK,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe9d,GAAqBT,EAAQse,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASM,EAAiB/hB,GAGtB,GAFAwhB,GAAY,EACZP,EAAUjhB,EACNuhB,EAAW,CACX,MAAMM,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe9d,GAAqBT,EAAQse,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASlO,IAEjB,CAWQ,OAVA2N,EAAUc,GAAqBzO,EAAgBC,EAAeoO,GAC9DT,EAAUa,GAAqBzO,EAAgBC,EAAeuO,GAC9DvhB,EAAc8C,EAAOgB,eAAiBqP,IAClCwM,GAAqCe,EAAQ9c,0BAA2BuP,GACxEwM,GAAqCgB,EAAQ/c,0BAA2BuP,GACnE4N,GAAcC,GACfJ,OAAqB7wB,GAElB,OAEJ,CAAC2wB,EAASC,EACzB,CACI,SAASL,GAAsBvd,GAC3B,IAMIyd,EACAC,EACAC,EACAC,EACAC,EAVA9d,EAAS+C,EAAmC9C,GAC5C8d,GAAU,EACVY,GAAsB,EACtBC,GAAsB,EACtBX,GAAY,EACZC,GAAY,EAMhB,MAAMC,EAAgB7hB,EAAWhN,IAC7BwuB,EAAuBxuB,IAE3B,SAASuvB,EAAmBC,GACxB5hB,EAAc4hB,EAAW9d,eAAgBqP,IACjCyO,IAAe9e,IAGnB2L,GAAkCiS,EAAQ9c,0BAA2BuP,GACrE1E,GAAkCkS,EAAQ/c,0BAA2BuP,GAChE4N,GAAcC,GACfJ,OAAqB7wB,IALd,MAS3B,CACQ,SAAS8xB,IACD9N,GAA2BjR,KAC3BW,EAAmCX,GACnCA,EAAS+C,EAAmC9C,GAC5C4e,EAAmB7e,IA4DvBoE,GAAgCpE,EA1DZ,CAChBwD,YAAaH,IAIT9F,EAAgB,KACZohB,GAAsB,EACtBC,GAAsB,EACtB,MAAMR,EAAS/a,EACf,IAAIgb,EAAShb,EACb,IAAK4a,IAAcC,EACf,IACIG,EAASpV,GAAkB5F,EAC3D,CAC4B,MAAOqK,GAIH,OAHA/B,GAAkCiS,EAAQ9c,0BAA2B4M,GACrE/B,GAAkCkS,EAAQ/c,0BAA2B4M,QACrEoQ,EAAqBpd,GAAqBT,EAAQyN,GAElF,CAE6BuQ,GACDvS,GAAoCkS,EAAQ9c,0BAA2Bsd,GAEtEF,GACDxS,GAAoCmS,EAAQ/c,0BAA2Bud,GAE3EN,GAAU,EACNY,EACAK,IAEKJ,GACLK,OAIZ1b,YAAa,KACTwa,GAAU,EACLE,GACDzS,GAAkCoS,EAAQ9c,2BAEzCod,GACD1S,GAAkCqS,EAAQ/c,2BAE1C8c,EAAQ9c,0BAA0B4L,kBAAkB3W,OAAS,GAC7D4U,GAAoCiT,EAAQ9c,0BAA2B,GAEvE+c,EAAQ/c,0BAA0B4L,kBAAkB3W,OAAS,GAC7D4U,GAAoCkT,EAAQ/c,0BAA2B,GAEtEmd,GAAcC,GACfJ,OAAqB7wB,IAG7BiX,YAAa,KACT6Z,GAAU,IAI9B,CACQ,SAASmB,EAAmBjV,EAAMkV,GAC1Bxb,GAA8B3D,KAC9BW,EAAmCX,GACnCA,EAAS8Q,GAAgC7Q,GACzC4e,EAAmB7e,IAEvB,MAAMof,EAAaD,EAAatB,EAAUD,EACpCyB,EAAcF,EAAavB,EAAUC,EAiE3CzM,GAA6BpR,EAAQiK,EAAM,EAhEnB,CACpBzG,YAAaH,IAIT9F,EAAgB,KACZohB,GAAsB,EACtBC,GAAsB,EACtB,MAAMU,EAAeH,EAAajB,EAAYD,EAE9C,GADsBkB,EAAalB,EAAYC,EAiBrCoB,GACNxU,GAA+CsU,EAAWte,0BAA2BuC,OAjBrE,CAChB,IAAIoK,EACJ,IACIA,EAAcxE,GAAkB5F,EAChE,CAC4B,MAAOqK,GAIH,OAHA/B,GAAkCyT,EAAWte,0BAA2B4M,GACxE/B,GAAkC0T,EAAYve,0BAA2B4M,QACzEoQ,EAAqBpd,GAAqBT,EAAQyN,GAElF,CACiC4R,GACDxU,GAA+CsU,EAAWte,0BAA2BuC,GAEzFqI,GAAoC2T,EAAYve,0BAA2B2M,EACvG,CAIwBsQ,GAAU,EACNY,EACAK,IAEKJ,GACLK,OAIZ1b,YAAaF,IACT0a,GAAU,EACV,MAAMuB,EAAeH,EAAajB,EAAYD,EACxCsB,EAAgBJ,EAAalB,EAAYC,EAC1CoB,GACD9T,GAAkC4T,EAAWte,2BAE5Cye,GACD/T,GAAkC6T,EAAYve,gCAEpC7T,IAAVoW,IACKic,GACDxU,GAA+CsU,EAAWte,0BAA2BuC,IAEpFkc,GAAiBF,EAAYve,0BAA0B4L,kBAAkB3W,OAAS,GACnF4U,GAAoC0U,EAAYve,0BAA2B,IAG9Ewe,GAAiBC,GAClBzB,OAAqB7wB,IAG7BiX,YAAa,KACT6Z,GAAU,IAI9B,CACQ,SAASiB,IACL,GAAIjB,EAEA,OADAY,GAAsB,EACfniB,OAAoBvP,GAE/B8wB,GAAU,EACV,MAAM/S,EAAcG,GAA2CyS,EAAQ9c,2BAOvE,OANoB,OAAhBkK,EACA+T,IAGAG,EAAmBlU,EAAYT,OAAO,GAEnC/N,OAAoBvP,EACvC,CACQ,SAASgyB,IACL,GAAIlB,EAEA,OADAa,GAAsB,EACfpiB,OAAoBvP,GAE/B8wB,GAAU,EACV,MAAM/S,EAAcG,GAA2C0S,EAAQ/c,2BAOvE,OANoB,OAAhBkK,EACA+T,IAGAG,EAAmBlU,EAAYT,OAAO,GAEnC/N,OAAoBvP,EACvC,CACQ,SAASqxB,EAAiB5hB,GAGtB,GAFAuhB,GAAY,EACZP,EAAUhhB,EACNwhB,EAAW,CACX,MAAMK,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe9d,GAAqBT,EAAQse,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASM,EAAiB/hB,GAGtB,GAFAwhB,GAAY,EACZP,EAAUjhB,EACNuhB,EAAW,CACX,MAAMM,EAAkB/X,GAAoB,CAACkX,EAASC,IAChDa,EAAe9d,GAAqBT,EAAQse,GAClDT,EAAqBU,EACrC,CACY,OAAOL,CACnB,CACQ,SAASlO,IAEjB,CAIQ,OAHA2N,EAAU4B,GAAyBvP,EAAgB+O,EAAgBV,GACnET,EAAU2B,GAAyBvP,EAAgBgP,EAAgBR,GACnEI,EAAmB7e,GACZ,CAAC4d,EAASC,EACzB,CAEI,SAAS4B,GAAqBxf,GAC1B,OAAOxE,EAAawE,SAAuC,IAArBA,EAAOyf,SACrD,CAEI,SAASC,GAAmBhF,GACxB,OAAI8E,GAAqB9E,GACdiF,GAAgCjF,EAAO+E,aAE3CG,GAA2BlF,EAC1C,CACI,SAASkF,GAA2BC,GAChC,IAAI7f,EACJ,MAAM0I,EAAiBH,GAAYsX,EAAe,SAElD,SAAS5P,IACL,IAAI6P,EACJ,IACIA,EAAarX,GAAaC,EAC1C,CACY,MAAOxE,GACH,OAAO1H,EAAoB0H,EAC3C,CAEY,OAAOhH,EADaX,EAAoBujB,GACClX,IACrC,IAAKpN,EAAaoN,GACd,MAAM,IAAI9K,UAAU,kFAGxB,GADa6K,GAAiBC,GAE1B8T,GAAqC1c,EAAOa,+BAE3C,CACD,MAAMhK,EAAQiS,GAAcF,GAC5B+T,GAAuC3c,EAAOa,0BAA2BhK,EAC7F,GAEA,CACQ,SAASqZ,EAAgBzT,GACrB,MAAMuJ,EAAW0C,EAAe1C,SAChC,IAAI+Z,EAUAC,EATJ,IACID,EAAepY,GAAU3B,EAAU,SACnD,CACY,MAAO9B,GACH,OAAO1H,EAAoB0H,EAC3C,CACY,QAAqBlX,IAAjB+yB,EACA,OAAOxjB,OAAoBvP,GAG/B,IACIgzB,EAAeriB,EAAYoiB,EAAc/Z,EAAU,CAACvJ,GACpE,CACY,MAAOyH,GACH,OAAO1H,EAAoB0H,EAC3C,CAEY,OAAOhH,EADeX,EAAoByjB,GACCpX,IACvC,IAAKpN,EAAaoN,GACd,MAAM,IAAI9K,UAAU,qFAIxC,CAEQ,OADAkC,EAASye,GAnDcljB,EAmDuB0U,EAAeC,EAAiB,GACvElQ,CACf,CACI,SAAS2f,GAAgC5f,GACrC,IAAIC,EAEJ,SAASiQ,IACL,IAAIgQ,EACJ,IACIA,EAAclgB,EAAO+D,MACrC,CACY,MAAOI,GACH,OAAO1H,EAAoB0H,EAC3C,CACY,OAAOhH,EAAqB+iB,EAAaC,IACrC,IAAK1kB,EAAa0kB,GACd,MAAM,IAAIpiB,UAAU,gFAExB,GAAIoiB,EAAW7c,KACXqZ,GAAqC1c,EAAOa,+BAE3C,CACD,MAAMhK,EAAQqpB,EAAWrpB,MACzB8lB,GAAuC3c,EAAOa,0BAA2BhK,EAC7F,GAEA,CACQ,SAASqZ,EAAgBzT,GACrB,IACI,OAAOF,EAAoBwD,EAAO8D,OAAOpH,GACzD,CACY,MAAOyH,GACH,OAAO1H,EAAoB0H,EAC3C,CACA,CAEQ,OADAlE,EAASye,GA9BcljB,EA8BuB0U,EAAeC,EAAiB,GACvElQ,CACf,CAEI,SAASmgB,GAAqCzF,EAAQ7Y,GAClDF,EAAiB+Y,EAAQ7Y,GACzB,MAAMkQ,EAAW2I,EACX3O,EAAwBgG,aAA2C,EAASA,EAAShG,sBACrFlI,EAASkO,aAA2C,EAASA,EAASlO,OACtE2M,EAAOuB,aAA2C,EAASA,EAASvB,KACpED,EAAQwB,aAA2C,EAASA,EAASxB,MACrE1gB,EAAOkiB,aAA2C,EAASA,EAASliB,KAC1E,MAAO,CACHkc,2BAAiD/e,IAA1B+e,OACnB/e,EACAwV,EAAwCuJ,EAAuB,GAAGlK,6CACtEgC,YAAmB7W,IAAX6W,OACJ7W,EACAozB,GAAsCvc,EAAQkO,EAAU,GAAGlQ,8BAC/D2O,UAAexjB,IAATwjB,OACFxjB,EACAqzB,GAAoC7P,EAAMuB,EAAU,GAAGlQ,4BAC3D0O,WAAiBvjB,IAAVujB,OACHvjB,EACAszB,GAAqC/P,EAAOwB,EAAU,GAAGlQ,6BAC7DhS,UAAe7C,IAAT6C,OAAqB7C,EAAYuzB,GAA0B1wB,EAAM,GAAGgS,4BAEtF,CACI,SAASue,GAAsCxkB,EAAImW,EAAUlQ,GAEzD,OADAC,EAAelG,EAAIiG,GACXpF,GAAWwB,EAAYrC,EAAImW,EAAU,CAACtV,GACtD,CACI,SAAS4jB,GAAoCzkB,EAAImW,EAAUlQ,GAEvD,OADAC,EAAelG,EAAIiG,GACX+K,GAAe3O,EAAYrC,EAAImW,EAAU,CAACnF,GAC1D,CACI,SAAS0T,GAAqC1kB,EAAImW,EAAUlQ,GAExD,OADAC,EAAelG,EAAIiG,GACX+K,GAAejP,EAAY/B,EAAImW,EAAU,CAACnF,GAC1D,CACI,SAAS2T,GAA0B1wB,EAAMgS,GAErC,GAAa,UADbhS,EAAO,GAAGA,KAEN,MAAM,IAAIiO,UAAU,GAAG+D,MAAYhS,8DAEvC,OAAOA,CACf,CAEI,SAAS2wB,GAAuBhpB,EAASqK,GACrCF,EAAiBnK,EAASqK,GAC1B,MAAMmD,EAAgBxN,aAAyC,EAASA,EAAQwN,cAChF,MAAO,CAAEA,cAAe6D,QAAQ7D,GACxC,CAEI,SAASyb,GAAmBjpB,EAASqK,GACjCF,EAAiBnK,EAASqK,GAC1B,MAAM+Y,EAAepjB,aAAyC,EAASA,EAAQojB,aACzE5V,EAAgBxN,aAAyC,EAASA,EAAQwN,cAC1E2V,EAAenjB,aAAyC,EAASA,EAAQmjB,aACzE/B,EAASphB,aAAyC,EAASA,EAAQohB,OAIzE,YAHe5rB,IAAX4rB,GACA8H,GAAkB9H,EAAQ,GAAG/W,8BAE1B,CACH+Y,aAAc/R,QAAQ+R,GACtB5V,cAAe6D,QAAQ7D,GACvB2V,aAAc9R,QAAQ8R,GACtB/B,SAEZ,CACI,SAAS8H,GAAkB9H,EAAQ/W,GAC/B,IAAK2Q,GAAcoG,GACf,MAAM,IAAI9a,UAAU,GAAG+D,2BAEnC,CAEI,SAAS8e,GAA4BvX,EAAMvH,GACvCF,EAAiByH,EAAMvH,GACvB,MAAM+e,EAAWxX,aAAmC,EAASA,EAAKwX,SAClEze,EAAoBye,EAAU,WAAY,wBAC1Che,EAAqBge,EAAU,GAAG/e,gCAClC,MAAM2Y,EAAWpR,aAAmC,EAASA,EAAKoR,SAGlE,OAFArY,EAAoBqY,EAAU,WAAY,wBAC1ClI,GAAqBkI,EAAU,GAAG3Y,gCAC3B,CAAE+e,WAAUpG,WAC3B,CAzsBI3e,OAAO6I,iBAAiB2X,GAAgClgB,UAAW,CAC/DpM,MAAO,CAAE4U,YAAY,GACrB6G,QAAS,CAAE7G,YAAY,GACvBla,MAAO,CAAEka,YAAY,GACrBwG,YAAa,CAAExG,YAAY,KAE/BhJ,EAAgB0gB,GAAgClgB,UAAUpM,MAAO,SACjE4L,EAAgB0gB,GAAgClgB,UAAUqP,QAAS,WACnE7P,EAAgB0gB,GAAgClgB,UAAU1R,MAAO,SAC/B,iBAAvBgV,OAAOmF,aACd/I,OAAOC,eAAeugB,GAAgClgB,UAAWsD,OAAOmF,YAAa,CACjF/N,MAAO,kCACPkF,cAAc,IAosBtB,MAAM8kB,GACF,WAAAv3B,CAAYw3B,EAAsB,GAAI/N,EAAc,CAAA,QACpB/lB,IAAxB8zB,EACAA,EAAsB,KAGtB9e,EAAa8e,EAAqB,mBAEtC,MAAMtP,EAAWG,GAAuBoB,EAAa,oBAC/CqK,EAAmB+C,GAAqCW,EAAqB,mBAEnF,GADAC,GAAyBx3B,MACK,UAA1B6zB,EAAiBvtB,KAAkB,CACnC,QAAsB7C,IAAlBwkB,EAASnnB,KACT,MAAM,IAAIof,WAAW,8DAGzB4G,GAAsD9mB,KAAM6zB,EADtC7L,GAAqBC,EAAU,GAErE,KACiB,CACD,MAAM0B,EAAgBxB,GAAqBF,GAE3C2L,GAAyD5zB,KAAM6zB,EADzC7L,GAAqBC,EAAU,GAC2C0B,EAChH,CACA,CAIQ,UAAIE,GACA,IAAKvQ,GAAiBtZ,MAClB,MAAMy3B,GAA4B,UAEtC,OAAOrd,GAAuBpa,KAC1C,CAOQ,MAAAsa,CAAOpH,OAASzP,GACZ,OAAK6V,GAAiBtZ,MAGlBoa,GAAuBpa,MAChBiT,EAAoB,IAAIsB,UAAU,qDAEtC2C,GAAqBlX,KAAMkT,GALvBD,EAAoBwkB,GAA4B,UAMvE,CACQ,SAAAvB,CAAUvO,OAAalkB,GACnB,IAAK6V,GAAiBtZ,MAClB,MAAMy3B,GAA4B,aAGtC,YAAqBh0B,IADLyjB,GAAqBS,EAAY,mBACrCR,KACD5N,EAAmCvZ,MAEvCsnB,GAAgCtnB,KACnD,CACQ,WAAA03B,CAAYC,EAAchQ,EAAa,IACnC,IAAKrO,GAAiBtZ,MAClB,MAAMy3B,GAA4B,eAEtC/e,EAAuBif,EAAc,EAAG,eACxC,MAAMC,EAAYR,GAA4BO,EAAc,mBACtD1pB,EAAUipB,GAAmBvP,EAAY,oBAC/C,GAAIvN,GAAuBpa,MACvB,MAAM,IAAIuU,UAAU,kFAExB,GAAIwV,GAAuB6N,EAAU3G,UACjC,MAAM,IAAI1c,UAAU,kFAIxB,OADAT,EADgBod,GAAqBlxB,KAAM43B,EAAU3G,SAAUhjB,EAAQmjB,aAAcnjB,EAAQojB,aAAcpjB,EAAQwN,cAAexN,EAAQohB,SAEnIuI,EAAUP,QAC7B,CACQ,MAAAQ,CAAOC,EAAanQ,EAAa,IAC7B,IAAKrO,GAAiBtZ,MAClB,OAAOiT,EAAoBwkB,GAA4B,WAE3D,QAAoBh0B,IAAhBq0B,EACA,OAAO7kB,EAAoB,wCAE/B,IAAK+V,GAAiB8O,GAClB,OAAO7kB,EAAoB,IAAIsB,UAAU,8EAE7C,IAAItG,EACJ,IACIA,EAAUipB,GAAmBvP,EAAY,mBACzD,CACY,MAAOhN,GACH,OAAO1H,EAAoB0H,EAC3C,CACY,OAAIP,GAAuBpa,MAChBiT,EAAoB,IAAIsB,UAAU,8EAEzCwV,GAAuB+N,GAChB7kB,EAAoB,IAAIsB,UAAU,8EAEtC2c,GAAqBlxB,KAAM83B,EAAa7pB,EAAQmjB,aAAcnjB,EAAQojB,aAAcpjB,EAAQwN,cAAexN,EAAQohB,OACtI,CAYQ,GAAA0I,GACI,IAAKze,GAAiBtZ,MAClB,MAAMy3B,GAA4B,OAGtC,OAAOza,GADU8W,GAAkB9zB,MAE/C,CACQ,MAAAgD,CAAO2kB,OAAalkB,GAChB,IAAK6V,GAAiBtZ,MAClB,MAAMy3B,GAA4B,UAGtC,OAAOlb,GAAmCvc,KAD1Bi3B,GAAuBtP,EAAY,mBACKlM,cACpE,CACQ,CAACqD,IAAqB7Q,GAElB,OAAOjO,KAAKgD,OAAOiL,EAC/B,CAOQ,WAAOlL,CAAKuzB,GACR,OAAOH,GAAmBG,EACtC,EAkCI,SAASpB,GAAqBzO,EAAgBC,EAAeC,EAAiBC,EAAgB,EAAG+C,EAAgB,IAAM,GACnH,MAAMlT,EAASnE,OAAOoK,OAAO4a,GAAe1kB,WAI5C,OAHA4kB,GAAyB/gB,GAEzBkd,GAAqCld,EADlBnE,OAAOoK,OAAOoW,GAAgClgB,WACR6T,EAAgBC,EAAeC,EAAiBC,EAAe+C,GACjHlT,CACf,CAEI,SAASuf,GAAyBvP,EAAgBC,EAAeC,GAC7D,MAAMlQ,EAASnE,OAAOoK,OAAO4a,GAAe1kB,WAI5C,OAHA4kB,GAAyB/gB,GAEzB+P,GAAkC/P,EADfnE,OAAOoK,OAAO6E,GAA6B3O,WACR6T,EAAgBC,EAAeC,EAAiB,OAAGljB,GAClGgT,CACf,CACI,SAAS+gB,GAAyB/gB,GAC9BA,EAAOG,OAAS,WAChBH,EAAOE,aAAUlT,EACjBgT,EAAOO,kBAAevT,EACtBgT,EAAOuE,YAAa,CAC5B,CACI,SAAS1B,GAAiBpH,GACtB,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,8BAGtCA,aAAaolB,EAC5B,CACI,SAASld,GAAuB3D,GAC5B,YAAuBhT,IAAnBgT,EAAOE,OAInB,CAEI,SAASO,GAAqBT,EAAQvD,GAElC,GADAuD,EAAOuE,YAAa,EACE,WAAlBvE,EAAOG,OACP,OAAO5D,OAAoBvP,GAE/B,GAAsB,YAAlBgT,EAAOG,OACP,OAAO3D,EAAoBwD,EAAOO,cAEtCkO,GAAoBzO,GACpB,MAAMD,EAASC,EAAOE,QACtB,QAAelT,IAAX+S,GAAwBiR,GAA2BjR,GAAS,CAC5D,MAAMuR,EAAmBvR,EAAOgR,kBAChChR,EAAOgR,kBAAoB,IAAI5S,EAC/BmT,EAAiB9mB,QAAQskB,IACrBA,EAAgBxL,iBAAYtW,IAE5C,CAEQ,OAAOkQ,EADqB8C,EAAOa,0BAA0BlB,GAAalD,GACzBlB,EACzD,CACI,SAASkT,GAAoBzO,GACzBA,EAAOG,OAAS,SAChB,MAAMJ,EAASC,EAAOE,QACtB,QAAelT,IAAX+S,IAGJmB,EAAkCnB,GAC9B2D,GAA8B3D,IAAS,CACvC,MAAM0E,EAAe1E,EAAOmD,cAC5BnD,EAAOmD,cAAgB,IAAI/E,EAC3BsG,EAAaja,QAAQyY,IACjBA,EAAYK,eAE5B,CACA,CACI,SAASoM,GAAoB1P,EAAQkE,GACjClE,EAAOG,OAAS,UAChBH,EAAOO,aAAe2D,EACtB,MAAMnE,EAASC,EAAOE,aACPlT,IAAX+S,IAGJY,EAAiCZ,EAAQmE,GACrCR,GAA8B3D,GAC9ByE,GAA6CzE,EAAQmE,GAGrDmN,GAA8CtR,EAAQmE,GAElE,CAEI,SAAS8c,GAA4BlzB,GACjC,OAAO,IAAIgQ,UAAU,4BAA4BhQ,yCACzD,CAEI,SAASyzB,GAA2B3P,EAAM/P,GACtCF,EAAiBiQ,EAAM/P,GACvB,MAAMsO,EAAgByB,aAAmC,EAASA,EAAKzB,cAEvE,OADAhO,EAAoBgO,EAAe,gBAAiB,uBAC7C,CACHA,cAAe9N,EAA0B8N,GAErD,CAnIItU,OAAO6I,iBAAiBmc,GAAgB,CACpCv0B,KAAM,CAAEqY,YAAY,KAExB9I,OAAO6I,iBAAiBmc,GAAe1kB,UAAW,CAC9C0H,OAAQ,CAAEc,YAAY,GACtB8a,UAAW,CAAE9a,YAAY,GACzBsc,YAAa,CAAEtc,YAAY,GAC3Byc,OAAQ,CAAEzc,YAAY,GACtB2c,IAAK,CAAE3c,YAAY,GACnBpY,OAAQ,CAAEoY,YAAY,GACtByO,OAAQ,CAAEzO,YAAY,KAE1BhJ,EAAgBklB,GAAev0B,KAAM,QACrCqP,EAAgBklB,GAAe1kB,UAAU0H,OAAQ,UACjDlI,EAAgBklB,GAAe1kB,UAAUsjB,UAAW,aACpD9jB,EAAgBklB,GAAe1kB,UAAU8kB,YAAa,eACtDtlB,EAAgBklB,GAAe1kB,UAAUilB,OAAQ,UACjDzlB,EAAgBklB,GAAe1kB,UAAUmlB,IAAK,OAC9C3lB,EAAgBklB,GAAe1kB,UAAU5P,OAAQ,UACf,iBAAvBkT,OAAOmF,aACd/I,OAAOC,eAAe+kB,GAAe1kB,UAAWsD,OAAOmF,YAAa,CAChE/N,MAAO,iBACPkF,cAAc,IAGtBF,OAAOC,eAAe+kB,GAAe1kB,UAAWkM,GAAqB,CACjExR,MAAOgqB,GAAe1kB,UAAU5P,OAChCiuB,UAAU,EACVze,cAAc,IA0GlB,MAAMylB,GAA0Bpe,GACrBA,EAAMkE,WAEjB3L,EAAgB6lB,GAAwB,QAMxC,MAAMC,GACF,WAAAn4B,CAAYkO,GACRyK,EAAuBzK,EAAS,EAAG,6BACnCA,EAAU+pB,GAA2B/pB,EAAS,mBAC9CjO,KAAKm4B,wCAA0ClqB,EAAQ2Y,aACnE,CAIQ,iBAAIA,GACA,IAAKwR,GAA4Bp4B,MAC7B,MAAMq4B,GAA8B,iBAExC,OAAOr4B,KAAKm4B,uCACxB,CAIQ,QAAIr3B,GACA,IAAKs3B,GAA4Bp4B,MAC7B,MAAMq4B,GAA8B,QAExC,OAAOJ,EACnB,EAaI,SAASI,GAA8B9zB,GACnC,OAAO,IAAIgQ,UAAU,uCAAuChQ,oDACpE,CACI,SAAS6zB,GAA4BlmB,GACjC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,4CAGtCA,aAAagmB,EAC5B,CAtBI5lB,OAAO6I,iBAAiB+c,GAA0BtlB,UAAW,CACzDgU,cAAe,CAAExL,YAAY,GAC7Bta,KAAM,CAAEsa,YAAY,KAEU,iBAAvBlF,OAAOmF,aACd/I,OAAOC,eAAe2lB,GAA0BtlB,UAAWsD,OAAOmF,YAAa,CAC3E/N,MAAO,4BACPkF,cAAc,IAkBtB,MAAM8lB,GAAoB,IACf,EAEXlmB,EAAgBkmB,GAAmB,QAMnC,MAAMC,GACF,WAAAx4B,CAAYkO,GACRyK,EAAuBzK,EAAS,EAAG,wBACnCA,EAAU+pB,GAA2B/pB,EAAS,mBAC9CjO,KAAKw4B,mCAAqCvqB,EAAQ2Y,aAC9D,CAIQ,iBAAIA,GACA,IAAK6R,GAAuBz4B,MACxB,MAAM04B,GAAyB,iBAEnC,OAAO14B,KAAKw4B,kCACxB,CAKQ,QAAI13B,GACA,IAAK23B,GAAuBz4B,MACxB,MAAM04B,GAAyB,QAEnC,OAAOJ,EACnB,EAaI,SAASI,GAAyBn0B,GAC9B,OAAO,IAAIgQ,UAAU,kCAAkChQ,+CAC/D,CACI,SAASk0B,GAAuBvmB,GAC5B,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,uCAGtCA,aAAaqmB,EAC5B,CAEI,SAASI,GAAmBnQ,EAAUlQ,GAClCF,EAAiBoQ,EAAUlQ,GAC3B,MAAMgC,EAASkO,aAA2C,EAASA,EAASlO,OACtEse,EAAQpQ,aAA2C,EAASA,EAASoQ,MACrEC,EAAerQ,aAA2C,EAASA,EAASqQ,aAC5E7R,EAAQwB,aAA2C,EAASA,EAASxB,MACrE4Q,EAAYpP,aAA2C,EAASA,EAASoP,UACzEkB,EAAetQ,aAA2C,EAASA,EAASsQ,aAClF,MAAO,CACHxe,YAAmB7W,IAAX6W,OACJ7W,EACAs1B,GAAiCze,EAAQkO,EAAU,GAAGlQ,8BAC1DsgB,WAAiBn1B,IAAVm1B,OACHn1B,EACAu1B,GAAgCJ,EAAOpQ,EAAU,GAAGlQ,6BACxDugB,eACA7R,WAAiBvjB,IAAVujB,OACHvjB,EACAw1B,GAAgCjS,EAAOwB,EAAU,GAAGlQ,6BACxDsf,eAAyBn0B,IAAdm0B,OACPn0B,EACAy1B,GAAoCtB,EAAWpP,EAAU,GAAGlQ,iCAChEwgB,eAEZ,CACI,SAASE,GAAgC3mB,EAAImW,EAAUlQ,GAEnD,OADAC,EAAelG,EAAIiG,GACX+K,GAAe3O,EAAYrC,EAAImW,EAAU,CAACnF,GAC1D,CACI,SAAS4V,GAAgC5mB,EAAImW,EAAUlQ,GAEnD,OADAC,EAAelG,EAAIiG,GACX+K,GAAejP,EAAY/B,EAAImW,EAAU,CAACnF,GAC1D,CACI,SAAS6V,GAAoC7mB,EAAImW,EAAUlQ,GAEvD,OADAC,EAAelG,EAAIiG,GACZ,CAACuB,EAAOwJ,IAAe3O,EAAYrC,EAAImW,EAAU,CAAC3O,EAAOwJ,GACxE,CACI,SAAS0V,GAAiC1mB,EAAImW,EAAUlQ,GAEpD,OADAC,EAAelG,EAAIiG,GACXpF,GAAWwB,EAAYrC,EAAImW,EAAU,CAACtV,GACtD,CAhEIZ,OAAO6I,iBAAiBod,GAAqB3lB,UAAW,CACpDgU,cAAe,CAAExL,YAAY,GAC7Bta,KAAM,CAAEsa,YAAY,KAEU,iBAAvBlF,OAAOmF,aACd/I,OAAOC,eAAegmB,GAAqB3lB,UAAWsD,OAAOmF,YAAa,CACtE/N,MAAO,uBACPkF,cAAc,IAoEtB,MAAM2mB,GACF,WAAAp5B,CAAYq5B,EAAiB,CAAA,EAAIC,EAAsB,CAAA,EAAIC,EAAsB,SACtD71B,IAAnB21B,IACAA,EAAiB,MAErB,MAAMG,EAAmBnR,GAAuBiR,EAAqB,oBAC/DG,EAAmBpR,GAAuBkR,EAAqB,mBAC/DG,EAAcd,GAAmBS,EAAgB,mBACvD,QAAiC31B,IAA7Bg2B,EAAYZ,aACZ,MAAM,IAAI3Y,WAAW,kCAEzB,QAAiCzc,IAA7Bg2B,EAAYX,aACZ,MAAM,IAAI5Y,WAAW,kCAEzB,MAAMwZ,EAAwB1R,GAAqBwR,EAAkB,GAC/DG,EAAwBxR,GAAqBqR,GAC7CI,EAAwB5R,GAAqBuR,EAAkB,GAC/DM,EAAwB1R,GAAqBoR,GACnD,IAAIO,EAIJC,GAA0B/5B,KAHL8S,EAAWhN,IAC5Bg0B,EAAuBh0B,IAEmB8zB,EAAuBC,EAAuBH,EAAuBC,GACnHK,GAAqDh6B,KAAMy5B,QACjCh2B,IAAtBg2B,EAAYzS,MACZ8S,EAAqBL,EAAYzS,MAAMhnB,KAAKi6B,6BAG5CH,OAAqBr2B,EAErC,CAIQ,YAAI4zB,GACA,IAAK6C,GAAkBl6B,MACnB,MAAMm6B,GAA0B,YAEpC,OAAOn6B,KAAKo6B,SACxB,CAIQ,YAAInJ,GACA,IAAKiJ,GAAkBl6B,MACnB,MAAMm6B,GAA0B,YAEpC,OAAOn6B,KAAKq6B,SACxB,EAYI,SAASN,GAA0BtjB,EAAQ6jB,EAAcV,EAAuBC,EAAuBH,EAAuBC,GAC1H,SAASlT,IACL,OAAO6T,CACnB,CACQ,SAAS/P,EAAe1Q,GACpB,OAAO0gB,GAAyC9jB,EAAQoD,EACpE,CACQ,SAAS4Q,EAAevX,GACpB,OAAOsnB,GAAyC/jB,EAAQvD,EACpE,CACQ,SAASsX,IACL,OAAOiQ,GAAyChkB,EAC5D,CAEQ,SAASiQ,IACL,OAAOgU,GAA0CjkB,EAC7D,CACQ,SAASkQ,EAAgBzT,GACrB,OAAOynB,GAA4ClkB,EAAQvD,EACvE,CANQuD,EAAO4jB,UAAY/P,GAAqB7D,EAAgB8D,EAAgBC,EAAgBC,EAAgBmP,EAAuBC,GAO/HpjB,EAAO2jB,UAAYlF,GAAqBzO,EAAgBC,EAAeC,EAAiB+S,EAAuBC,GAE/GljB,EAAO0U,mBAAgB1nB,EACvBgT,EAAOmkB,gCAA6Bn3B,EACpCgT,EAAOokB,wCAAqCp3B,EAC5Cq3B,GAA+BrkB,GAAQ,GACvCA,EAAOwjB,gCAA6Bx2B,CAC5C,CACI,SAASy2B,GAAkBhoB,GACvB,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,+BAGtCA,aAAainB,EAC5B,CAEI,SAAS4B,GAAqBtkB,EAAQkE,GAClC0Y,GAAqC5c,EAAO2jB,UAAU9iB,0BAA2BqD,GACjFqgB,GAA4CvkB,EAAQkE,EAC5D,CACI,SAASqgB,GAA4CvkB,EAAQkE,GACzDsgB,GAAgDxkB,EAAOwjB,4BACvDjK,GAA6CvZ,EAAO4jB,UAAUxP,0BAA2BlQ,GACzFugB,GAA4BzkB,EACpC,CACI,SAASykB,GAA4BzkB,GAC7BA,EAAO0U,eAIP2P,GAA+BrkB,GAAQ,EAEnD,CACI,SAASqkB,GAA+BrkB,EAAQ0W,QAEF1pB,IAAtCgT,EAAOmkB,4BACPnkB,EAAOokB,qCAEXpkB,EAAOmkB,2BAA6B9nB,EAAWhN,IAC3C2Q,EAAOokB,mCAAqC/0B,IAEhD2Q,EAAO0U,cAAgBgC,CAC/B,CA1EI7a,OAAO6I,iBAAiBge,GAAgBvmB,UAAW,CAC/CykB,SAAU,CAAEjc,YAAY,GACxB6V,SAAU,CAAE7V,YAAY,KAEM,iBAAvBlF,OAAOmF,aACd/I,OAAOC,eAAe4mB,GAAgBvmB,UAAWsD,OAAOmF,YAAa,CACjE/N,MAAO,kBACPkF,cAAc,IA0EtB,MAAM2oB,GACF,WAAAp7B,GACI,MAAM,IAAIwU,UAAU,sBAChC,CAIQ,eAAIqN,GACA,IAAKwZ,GAAmCp7B,MACpC,MAAMq7B,GAAqC,eAG/C,OAAOpI,GADoBjzB,KAAKs7B,2BAA2BlB,UAAU9iB,0BAEjF,CACQ,OAAA2K,CAAQpI,OAAQpW,GACZ,IAAK23B,GAAmCp7B,MACpC,MAAMq7B,GAAqC,WAE/CE,GAAwCv7B,KAAM6Z,EAC1D,CAKQ,KAAA3Y,CAAMgS,OAASzP,GACX,IAAK23B,GAAmCp7B,MACpC,MAAMq7B,GAAqC,SAE/CG,GAAsCx7B,KAAMkT,EACxD,CAKQ,SAAAuoB,GACI,IAAKL,GAAmCp7B,MACpC,MAAMq7B,GAAqC,aAE/CK,GAA0C17B,KACtD,EAkBI,SAASo7B,GAAmClpB,GACxC,QAAKD,EAAaC,MAGbI,OAAOM,UAAUmI,eAAexH,KAAKrB,EAAG,+BAGtCA,aAAaipB,EAC5B,CACI,SAASQ,GAAsCllB,EAAQ4M,EAAYuY,EAAoBC,EAAgBlV,GACnGtD,EAAWiY,2BAA6B7kB,EACxCA,EAAOwjB,2BAA6B5W,EACpCA,EAAWyY,oBAAsBF,EACjCvY,EAAW0Y,gBAAkBF,EAC7BxY,EAAWhB,iBAAmBsE,EAC9BtD,EAAW2Y,oBAAiBv4B,EAC5B4f,EAAW4Y,4BAAyBx4B,EACpC4f,EAAW6Y,2BAAwBz4B,CAC3C,CACI,SAASu2B,GAAqDvjB,EAAQgjB,GAClE,MAAMpW,EAAa/Q,OAAOoK,OAAOye,GAAiCvoB,WAClE,IAAIgpB,EACAC,EACAlV,EAEAiV,OAD0Bn4B,IAA1Bg2B,EAAY7B,UACS/d,GAAS4f,EAAY7B,UAAU/d,EAAOwJ,GAGtCxJ,IACjB,IAEI,OADA0hB,GAAwClY,EAAYxJ,GAC7C7G,OAAoBvP,EAC/C,CACgB,MAAO04B,GACH,OAAOlpB,EAAoBkpB,EAC/C,GAIYN,OADsBp4B,IAAtBg2B,EAAYb,MACK,IAAMa,EAAYb,MAAMvV,GAGxB,IAAMrQ,OAAoBvP,GAG3CkjB,OADuBljB,IAAvBg2B,EAAYnf,OACMpH,GAAUumB,EAAYnf,OAAOpH,GAG7B,IAAMF,OAAoBvP,GAEhDk4B,GAAsCllB,EAAQ4M,EAAYuY,EAAoBC,EAAgBlV,EACtG,CACI,SAASsU,GAAgD5X,GACrDA,EAAWyY,yBAAsBr4B,EACjC4f,EAAW0Y,qBAAkBt4B,EAC7B4f,EAAWhB,sBAAmB5e,CACtC,CACI,SAAS83B,GAAwClY,EAAYxJ,GACzD,MAAMpD,EAAS4M,EAAWiY,2BACpBc,EAAqB3lB,EAAO2jB,UAAU9iB,0BAC5C,IAAK4b,GAAiDkJ,GAClD,MAAM,IAAI7nB,UAAU,wDAIxB,IACI6e,GAAuCgJ,EAAoBviB,EACvE,CACQ,MAAOc,GAGH,MADAqgB,GAA4CvkB,EAAQkE,GAC9ClE,EAAO2jB,UAAUpjB,YACnC,CAC6B0c,GAA+C0I,KAC/C3lB,EAAO0U,eACxB2P,GAA+BrkB,GAAQ,EAEnD,CACI,SAAS+kB,GAAsCnY,EAAY1I,GACvDogB,GAAqB1X,EAAWiY,2BAA4B3gB,EACpE,CACI,SAAS0hB,GAAiDhZ,EAAYxJ,GAElE,OAAOlG,EADkB0P,EAAWyY,oBAAoBjiB,QACVpW,EAAWojB,IAErD,MADAkU,GAAqB1X,EAAWiY,2BAA4BzU,GACtDA,GAElB,CACI,SAAS6U,GAA0CrY,GAC/C,MAAM5M,EAAS4M,EAAWiY,2BAE1BnI,GAD2B1c,EAAO2jB,UAAU9iB,2BAG5C0jB,GAA4CvkB,EAD9B,IAAIlC,UAAU,8BAEpC,CAEI,SAASgmB,GAAyC9jB,EAAQoD,GACtD,MAAMwJ,EAAa5M,EAAOwjB,2BAC1B,OAAIxjB,EAAO0U,cAEAxX,EAD2B8C,EAAOmkB,2BACc,KACnD,MAAM3J,EAAWxa,EAAO4jB,UAExB,GAAc,aADApJ,EAASra,OAEnB,MAAMqa,EAASja,aAEnB,OAAOqlB,GAAiDhZ,EAAYxJ,KAGrEwiB,GAAiDhZ,EAAYxJ,EAC5E,CACI,SAAS2gB,GAAyC/jB,EAAQvD,GACtD,MAAMmQ,EAAa5M,EAAOwjB,2BAC1B,QAAkCx2B,IAA9B4f,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM3E,EAAW5gB,EAAO2jB,UAGxB/W,EAAW2Y,eAAiBlpB,EAAW,CAAChN,EAASC,KAC7Csd,EAAW4Y,uBAAyBn2B,EACpCud,EAAW6Y,sBAAwBn2B,IAEvC,MAAM4uB,EAAgBtR,EAAWhB,iBAAiBnP,GAgBlD,OAfA+nB,GAAgD5X,GAChD7P,EAAYmhB,EAAe,KACC,YAApB0C,EAASzgB,OACT0lB,GAAqCjZ,EAAYgU,EAASrgB,eAG1Dqc,GAAqCgE,EAAS/f,0BAA2BpE,GACzEqpB,GAAsClZ,IAEnC,MACRwD,IACCwM,GAAqCgE,EAAS/f,0BAA2BuP,GACzEyV,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CACI,SAASvB,GAAyChkB,GAC9C,MAAM4M,EAAa5M,EAAOwjB,2BAC1B,QAAkCx2B,IAA9B4f,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM3E,EAAW5gB,EAAO2jB,UAGxB/W,EAAW2Y,eAAiBlpB,EAAW,CAAChN,EAASC,KAC7Csd,EAAW4Y,uBAAyBn2B,EACpCud,EAAW6Y,sBAAwBn2B,IAEvC,MAAMy2B,EAAenZ,EAAW0Y,kBAgBhC,OAfAd,GAAgD5X,GAChD7P,EAAYgpB,EAAc,KACE,YAApBnF,EAASzgB,OACT0lB,GAAqCjZ,EAAYgU,EAASrgB,eAG1Dmc,GAAqCkE,EAAS/f,2BAC9CilB,GAAsClZ,IAEnC,MACRwD,IACCwM,GAAqCgE,EAAS/f,0BAA2BuP,GACzEyV,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CAEI,SAAStB,GAA0CjkB,GAI/C,OAFAqkB,GAA+BrkB,GAAQ,GAEhCA,EAAOmkB,0BACtB,CACI,SAASD,GAA4ClkB,EAAQvD,GACzD,MAAMmQ,EAAa5M,EAAOwjB,2BAC1B,QAAkCx2B,IAA9B4f,EAAW2Y,eACX,OAAO3Y,EAAW2Y,eAGtB,MAAM/K,EAAWxa,EAAO4jB,UAIxBhX,EAAW2Y,eAAiBlpB,EAAW,CAAChN,EAASC,KAC7Csd,EAAW4Y,uBAAyBn2B,EACpCud,EAAW6Y,sBAAwBn2B,IAEvC,MAAM4uB,EAAgBtR,EAAWhB,iBAAiBnP,GAkBlD,OAjBA+nB,GAAgD5X,GAChD7P,EAAYmhB,EAAe,KACC,YAApB1D,EAASra,OACT0lB,GAAqCjZ,EAAY4N,EAASja,eAG1DgZ,GAA6CiB,EAASpG,0BAA2B3X,GACjFgoB,GAA4BzkB,GAC5B8lB,GAAsClZ,IAEnC,MACRwD,IACCmJ,GAA6CiB,EAASpG,0BAA2BhE,GACjFqU,GAA4BzkB,GAC5B6lB,GAAqCjZ,EAAYwD,GAC1C,OAEJxD,EAAW2Y,cAC1B,CAEI,SAASX,GAAqC92B,GAC1C,OAAO,IAAIgQ,UAAU,8CAA8ChQ,2DAC3E,CACI,SAASg4B,GAAsClZ,QACD5f,IAAtC4f,EAAW4Y,yBAGf5Y,EAAW4Y,yBACX5Y,EAAW4Y,4BAAyBx4B,EACpC4f,EAAW6Y,2BAAwBz4B,EAC3C,CACI,SAAS64B,GAAqCjZ,EAAYnQ,QACbzP,IAArC4f,EAAW6Y,wBAGfpoB,EAA0BuP,EAAW2Y,gBACrC3Y,EAAW6Y,sBAAsBhpB,GACjCmQ,EAAW4Y,4BAAyBx4B,EACpC4f,EAAW6Y,2BAAwBz4B,EAC3C,CAEI,SAAS02B,GAA0B51B,GAC/B,OAAO,IAAIgQ,UAAU,6BAA6BhQ,0CAC1D,CA9PI+N,OAAO6I,iBAAiBggB,GAAiCvoB,UAAW,CAChEqP,QAAS,CAAE7G,YAAY,GACvBla,MAAO,CAAEka,YAAY,GACrBqgB,UAAW,CAAErgB,YAAY,GACzBwG,YAAa,CAAExG,YAAY,KAE/BhJ,EAAgB+oB,GAAiCvoB,UAAUqP,QAAS,WACpE7P,EAAgB+oB,GAAiCvoB,UAAU1R,MAAO,SAClEkR,EAAgB+oB,GAAiCvoB,UAAU6oB,UAAW,aACpC,iBAAvBvlB,OAAOmF,aACd/I,OAAOC,eAAe4oB,GAAiCvoB,UAAWsD,OAAOmF,YAAa,CAClF/N,MAAO,mCACPkF,cAAc,IAoPtBT,EAAQmmB,0BAA4BA,GACpCnmB,EAAQwmB,qBAAuBA,GAC/BxmB,EAAQwP,6BAA+BA,GACvCxP,EAAQulB,eAAiBA,GACzBvlB,EAAQwV,yBAA2BA,GACnCxV,EAAQ6O,0BAA4BA,GACpC7O,EAAQ+gB,gCAAkCA,GAC1C/gB,EAAQyH,4BAA8BA,GACtCzH,EAAQonB,gBAAkBA,GAC1BpnB,EAAQopB,iCAAmCA,GAC3CppB,EAAQuX,eAAiBA,GACzBvX,EAAQ4Y,gCAAkCA,GAC1C5Y,EAAQsY,4BAA8BA,EAEzC,CAvnJkEoS,iDCJnE,QAAKjM,WAAW8G,eAId,IACE,MAAMoF,EAAU9uB,QAAQ,iBAClB+uB,YAAEA,GAAgBD,EACxB,IACEA,EAAQC,YAAc,OACtBrqB,OAAOsqB,OAAOpM,WAAY5iB,QAAQ,oBAClC8uB,EAAQC,YAAcA,EACtB,MAAOz7B,GAEP,MADAw7B,EAAQC,YAAcA,EAChBz7B,CACZ,EACI,MAAOA,GAEPoR,OAAOsqB,OAAOpM,WAAYqM,IAC9B,CAGA,IAGE,MAAMC,KAAEA,GAASlvB,QAAQ,UACrBkvB,IAASA,EAAKlqB,UAAU6D,SAC1BqmB,EAAKlqB,UAAU6D,OAAS,SAAexP,GACrC,IAAI0R,EAAW,EACf,MAAMokB,EAAO/8B,KAEb,OAAO,IAAIs3B,eAAe,CACxBhxB,KAAM,QACN,UAAM2gB,CAAM+V,GACV,MAAMnjB,EAAQkjB,EAAK9f,MAAMtE,EAAUzQ,KAAKsc,IAAIuY,EAAKj8B,KAAM6X,EAnC/C,QAoCFgF,QAAe9D,EAAMojB,cAC3BtkB,GAAYgF,EAAOI,WACnBif,EAAK/a,QAAQ,IAAIrZ,WAAW+U,IAExBhF,IAAaokB,EAAKj8B,MACpBk8B,EAAKx2B,OAEjB,GAEA,GAEE,MAAOtF,GAAO,KCtChBoK,eAAiB4xB,EAAYC,EAAOC,GAAQ,GAC1C,IAAK,MAAMC,KAAQF,EACjB,GAAI,WAAYE,QAC6CA,EAAK5mB,cAC3D,GAAI0H,YAAYkD,OAAOgc,GAC5B,GAAID,EAAO,CACT,IAAIzkB,EAAW0kB,EAAK3d,WACpB,MAAMxB,EAAMmf,EAAK3d,WAAa2d,EAAKtf,WACnC,KAAOpF,IAAauF,GAAK,CACvB,MAAMpd,EAAOoH,KAAKsc,IAAItG,EAAMvF,EAZpB,OAaFkB,EAAQwjB,EAAK1f,OAAOV,MAAMtE,EAAUA,EAAW7X,GACrD6X,GAAYkB,EAAMkE,iBACZ,IAAInV,WAAWiR,EAC/B,CACA,YACcwjB,MAGH,CAEL,IAAI1kB,EAAW,EAAG7P,IAClB,KAAO6P,IAAa7P,EAAEhI,MAAM,CAC1B,MAAM+Y,EAAQ/Q,EAAEmU,MAAMtE,EAAUzQ,KAAKsc,IAAI1b,EAAEhI,KAAM6X,EAzBvC,QA0BJgF,QAAe9D,EAAMojB,cAC3BtkB,GAAYgF,EAAOI,iBACb,IAAInV,WAAW+U,EAC7B,CACA,CAEA,CAEA,MAAM2f,EAAQ,MAAMR,EAElBK,GAAS,GACT72B,GAAQ,GACRxF,GAAQ,EACRy8B,GAAW,cAUX,WAAAx9B,CAAay9B,EAAY,GAAIvvB,EAAU,CAAA,GACrC,GAAyB,iBAAduvB,GAAwC,OAAdA,EACnC,MAAM,IAAIjpB,UAAU,qFAGtB,GAA0C,mBAA/BipB,EAAUtnB,OAAOuG,UAC1B,MAAM,IAAIlI,UAAU,oFAGtB,GAAuB,iBAAZtG,GAA2C,mBAAZA,EACxC,MAAM,IAAIsG,UAAU,yEAGN,OAAZtG,IAAkBA,EAAU,CAAA,GAEhC,MAAMwvB,EAAU,IAAIl1B,YACpB,IAAK,MAAM6M,KAAWooB,EAAW,CAC/B,IAAIH,EAEFA,EADElf,YAAYkD,OAAOjM,GACd,IAAIxM,WAAWwM,EAAQuI,OAAOV,MAAM7H,EAAQsK,WAAYtK,EAAQsK,WAAatK,EAAQ2I,aACnF3I,aAAmB+I,YACrB,IAAIvV,WAAWwM,EAAQ6H,MAAM,IAC3B7H,aAAmB0nB,EACrB1nB,EAEAqoB,EAAQj1B,OAAO,GAAG4M,KAG3BpV,MAAKc,GAASqd,YAAYkD,OAAOgc,GAAQA,EAAKtf,WAAasf,EAAKv8B,KAChEd,MAAKm9B,EAAOhoB,KAAKkoB,EACvB,CAEIr9B,MAAKu9B,EAAW,QAAuB95B,IAApBwK,EAAQsvB,QAAwB,cAAgBtvB,EAAQsvB,UAC3E,MAAMj3B,OAAwB7C,IAAjBwK,EAAQ3H,KAAqB,GAAKkY,OAAOvQ,EAAQ3H,MAC9DtG,MAAKsG,EAAQ,iBAAiBo3B,KAAKp3B,GAAQA,EAAO,EACtD,CAME,QAAIxF,GACF,OAAOd,MAAKc,CAChB,CAKE,QAAIwF,GACF,OAAOtG,MAAKsG,CAChB,CASE,UAAMq3B,GAGJ,MAAMC,EAAU,IAAIC,YACpB,IAAIC,EAAM,GACV,UAAW,MAAMT,KAAQH,EAAWl9B,MAAKm9B,GAAQ,GAC/CW,GAAOF,EAAQG,OAAOV,EAAM,CAAE5mB,QAAQ,IAIxC,OADAqnB,GAAOF,EAAQG,SACRD,CACX,CASE,iBAAMb,GAMJ,MAAMj8B,EAAO,IAAI4H,WAAW5I,KAAKc,MACjC,IAAIk9B,EAAS,EACb,UAAW,MAAMnkB,KAASqjB,EAAWl9B,MAAKm9B,GAAQ,GAChDn8B,EAAKT,IAAIsZ,EAAOmkB,GAChBA,GAAUnkB,EAAMtN,OAGlB,OAAOvL,EAAK2c,MAChB,CAEE,MAAAlH,GACE,MAAMwnB,EAAKf,EAAWl9B,MAAKm9B,GAAQ,GAEnC,OAAO,IAAI3M,WAAW8G,eAAe,CAEnChxB,KAAM,QACN,UAAM2gB,CAAM+V,GACV,MAAMnjB,QAAcokB,EAAGpiB,OACvBhC,EAAMC,KAAOkjB,EAAKx2B,QAAUw2B,EAAK/a,QAAQpI,EAAMvM,MACvD,EAEM,YAAMgN,SACE2jB,EAAG3hB,QACjB,GAEA,CAWE,KAAAW,CAAO+J,EAAQ,EAAG9I,EAAMle,KAAKc,KAAMwF,EAAO,IACxC,MAAMxF,KAAEA,GAASd,KAEjB,IAAIk+B,EAAgBlX,EAAQ,EAAI9e,KAAKi2B,IAAIr9B,EAAOkmB,EAAO,GAAK9e,KAAKsc,IAAIwC,EAAOlmB,GACxEs9B,EAAclgB,EAAM,EAAIhW,KAAKi2B,IAAIr9B,EAAOod,EAAK,GAAKhW,KAAKsc,IAAItG,EAAKpd,GAEpE,MAAMu9B,EAAOn2B,KAAKi2B,IAAIC,EAAcF,EAAe,GAC7Cf,EAAQn9B,MAAKm9B,EACbK,EAAY,GAClB,IAAIc,EAAQ,EAEZ,IAAK,MAAMjB,KAAQF,EAAO,CAExB,GAAImB,GAASD,EACX,MAGF,MAAMv9B,EAAOqd,YAAYkD,OAAOgc,GAAQA,EAAKtf,WAAasf,EAAKv8B,KAC/D,GAAIo9B,GAAiBp9B,GAAQo9B,EAG3BA,GAAiBp9B,EACjBs9B,GAAet9B,MACV,CACL,IAAI+Y,EACAsE,YAAYkD,OAAOgc,IACrBxjB,EAAQwjB,EAAKkB,SAASL,EAAeh2B,KAAKsc,IAAI1jB,EAAMs9B,IACpDE,GAASzkB,EAAMkE,aAEflE,EAAQwjB,EAAKpgB,MAAMihB,EAAeh2B,KAAKsc,IAAI1jB,EAAMs9B,IACjDE,GAASzkB,EAAM/Y,MAEjBs9B,GAAet9B,EACf08B,EAAUroB,KAAK0E,GACfqkB,EAAgB,CACxB,CACA,CAEI,MAAMnB,EAAO,IAAID,EAAK,GAAI,CAAEx2B,KAAMkY,OAAOlY,GAAMk4B,gBAI/C,OAHAzB,GAAKj8B,EAAQu9B,EACbtB,GAAKI,EAASK,EAEPT,CACX,CAEE,IAAK7mB,OAAOmF,eACV,MAAO,MACX,CAEE,OAAQnF,OAAOuoB,aAAcC,GAC3B,OACEA,GACkB,iBAAXA,GACuB,mBAAvBA,EAAO3+B,cAEa,mBAAlB2+B,EAAOjoB,QACgB,mBAAvBioB,EAAOzB,cAEhB,gBAAgBS,KAAKgB,EAAOxoB,OAAOmF,aAEzC,GAGA/I,OAAO6I,iBAAiBmiB,EAAM1qB,UAAW,CACvC9R,KAAM,CAAEsa,YAAY,GACpB9U,KAAM,CAAE8U,YAAY,GACpB6B,MAAO,CAAE7B,YAAY,KAIhB,MAAM0hB,EAAOQ,ECzMPqB,EA7CC,cAAmB7B,EAC/B8B,GAAgB,EAChBr6B,GAAQ,GAOR,WAAAxE,CAAa8+B,EAAUC,EAAU7wB,EAAU,CAAA,GACzC,GAAI8wB,UAAUxyB,OAAS,EACrB,MAAM,IAAIgI,UAAU,8DAA8DwqB,UAAUxyB,mBAE9F9K,MAAMo9B,EAAU5wB,GAEA,OAAZA,IAAkBA,EAAU,CAAA,GAGhC,MAAM2wB,OAAwCn7B,IAAzBwK,EAAQ2wB,aAA6Bz0B,KAAKC,MAAQyN,OAAO5J,EAAQ2wB,cACjF/mB,OAAOgF,MAAM+hB,KAChB5+B,MAAK4+B,EAAgBA,GAGvB5+B,MAAKuE,EAAQia,OAAOsgB,EACxB,CAEE,QAAIv6B,GACF,OAAOvE,MAAKuE,CAChB,CAEE,gBAAIq6B,GACF,OAAO5+B,MAAK4+B,CAChB,CAEE,IAAK1oB,OAAOmF,eACV,MAAO,MACX,CAEE,OAAQnF,OAAOuoB,aAAcC,GAC3B,QAASA,GAAUA,aAAkB5B,GACnC,WAAWY,KAAKgB,EAAOxoB,OAAOmF,aACpC;;ACtCA,IAAKA,YAAY2jB,EAAEviB,SAASnQ,EAAEmyB,YAAYQ,GAAG/oB,OAC7C2Q,EAAE3e,KAAKC,OACP+2B,EAAE,uEAAuEn1B,MAAM,KAC/Eo1B,EAAE,CAACC,EAAEt2B,EAAEoD,KAAKkzB,GAAG,GAAG,gBAAgB1B,KAAK50B,GAAKA,EAAEk2B,IAAI,EAAE9yB,OAAM,IAAJA,EAAWA,EAAE,GAAS,QAANpD,EAAEk2B,GAAWl2B,EAAEvE,KAAK,OAAO66B,GAAGt2B,EAAEvE,OAAO2H,GAAS,QAANpD,EAAEk2B,GAAW,IAAI3qB,EAAE,CAACvL,GAAGoD,EAAEpD,GAAGA,GAAG,CAACs2B,EAAEt2B,EAAE,KACpJ6R,EAAE,CAACzO,EAAEizB,KAAKA,EAAEjzB,EAAEA,EAAEmzB,QAAQ,YAAY,SAASA,QAAQ,MAAM,OAAOA,QAAQ,MAAM,OAAOA,QAAQ,KAAK,OACpGntB,EAAE,CAACqL,EAAG6hB,EAAGzkB,KAAK,GAAGykB,EAAE7yB,OAAOoO,EAAG,MAAM,IAAIpG,UAAU,sBAAsBgJ,qBAAqB5C,kCAAkCykB,EAAE7yB,oBAKzH,MAAM+yB,EAAW,MACxBC,GAAG,GACH,WAAAx/B,IAAeq/B,GAAG,GAAGA,EAAE7yB,OAAO,MAAM,IAAIgI,UAAU,gFAAgF,CAClI,IAAKyqB,KAAM,MAAO,UAAU,CAC5B,CAAC1yB,KAAK,OAAOtM,KAAKw/B,SAAS,CAC3B,OAAQP,GAAGQ,GAAI,OAAOA,GAAc,iBAAJA,GAAqB,aAAPA,EAAET,KAAkBE,EAAEQ,KAAKR,GAAgB,mBAANO,EAAEP,GAAe,CACpG,MAAAS,IAAUP,GAAGltB,EAAE,SAAS6sB,UAAU,GAAG/+B,MAAKu/B,EAAGpqB,KAAKgqB,KAAKC,GAAG,CAC1D,OAAOA,GAAGltB,EAAE,SAAS6sB,UAAU,GAAGK,GAAG,GAAGp/B,MAAKu/B,EAAGv/B,MAAKu/B,EAAGK,OAAO,EAAE92B,KAAKA,IAAIs2B,EAAE,CAC5E,GAAA3+B,CAAI2+B,GAAGltB,EAAE,MAAM6sB,UAAU,GAAGK,GAAG,GAAG,IAAI,IAAIt2B,EAAE9I,MAAKu/B,EAAGM,EAAE/2B,EAAEyD,OAAOL,EAAE,EAAEA,EAAE2zB,EAAE3zB,IAAI,GAAGpD,EAAEoD,GAAG,KAAKkzB,EAAE,OAAOt2B,EAAEoD,GAAG,GAAG,OAAO,IAAI,CACpH,MAAA4zB,CAAOV,EAAEt2B,GAAiF,OAA9EoJ,EAAE,SAAS6sB,UAAU,GAAGj2B,EAAE,GAAGs2B,GAAG,GAAGp/B,MAAKu/B,EAAGt+B,QAAQiL,GAAGA,EAAE,KAAKkzB,GAAGt2B,EAAEqM,KAAKjJ,EAAE,KAAYpD,CAAC,CAClG,GAAAxI,CAAI8+B,GAA8B,OAA3BltB,EAAE,MAAM6sB,UAAU,GAAGK,GAAG,GAAUp/B,MAAKu/B,EAAGG,KAAK52B,GAAGA,EAAE,KAAKs2B,EAAE,CAClE,OAAAn+B,CAAQm+B,EAAEt2B,GAA4B,IAAI,IAAKoD,EAAEqzB,KAApCrtB,EAAE,UAAU6sB,UAAU,GAAmB/+B,MAAKo/B,EAAE7rB,KAAKzK,EAAEy2B,EAAErzB,EAAElM,KAAK,CAC7E,GAAAO,IAAO6+B,GAAGltB,EAAE,MAAM6sB,UAAU,GAAG,IAAIj2B,EAAE,GAAGoD,GAAE,EAAGkzB,EAAED,KAAKC,GAAGp/B,MAAKu/B,EAAGt+B,QAAQs+B,IAAIA,EAAE,KAAKH,EAAE,GAAGlzB,IAAIA,GAAGpD,EAAEqM,KAAKiqB,IAAIt2B,EAAEqM,KAAKoqB,KAAKrzB,GAAGpD,EAAEqM,KAAKiqB,GAAGp/B,MAAKu/B,EAAGz2B,CAAC,CAC3I,QAAC02B,SAAgBx/B,MAAKu/B,CAAE,CACxB,KAACQ,GAAO,IAAI,IAAIX,KAAKp/B,WAAWo/B,CAAC,CACjC,OAACp8B,GAAS,IAAI,IAAG,CAAEo8B,KAAKp/B,WAAWo/B,CAAC,GC9B7B,MAAMY,UAAuB58B,MACnC,WAAArD,CAAYyE,EAAS8B,GACpB7E,MAAM+C,GAENpB,MAAM4tB,kBAAkBhxB,KAAMA,KAAKD,aAEnCC,KAAKsG,KAAOA,CACd,CAEC,QAAI/B,GACH,OAAOvE,KAAKD,YAAYwE,IAC1B,CAEC,IAAK2R,OAAOmF,eACX,OAAOrb,KAAKD,YAAYwE,IAC1B,ECLO,MAAM07B,WAAmBD,EAM/B,WAAAjgC,CAAYyE,EAAS8B,EAAM45B,GAC1Bz+B,MAAM+C,EAAS8B,GAEX45B,IAEHlgC,KAAKyE,KAAOzE,KAAKmgC,MAAQD,EAAYz7B,KACrCzE,KAAKogC,eAAiBF,EAAYG,QAErC,EClBA,MAAMC,GAAOpqB,OAAOmF,YAQPklB,GAAwB7B,GAEjB,iBAAXA,GACkB,mBAAlBA,EAAOiB,QACW,mBAAlBjB,EAAO79B,QACQ,mBAAf69B,EAAOj+B,KACW,mBAAlBi+B,EAAOoB,QACQ,mBAAfpB,EAAOp+B,KACQ,mBAAfo+B,EAAOn+B,KACS,mBAAhBm+B,EAAO8B,MACG,oBAAjB9B,EAAO4B,IASIG,GAAS/B,GAEpBA,GACkB,iBAAXA,GACuB,mBAAvBA,EAAOzB,aACS,iBAAhByB,EAAOp4B,MACW,mBAAlBo4B,EAAOjoB,QACgB,mBAAvBioB,EAAO3+B,aACd,gBAAgB29B,KAAKgB,EAAO4B,KCvBxBI,GAAWC,EAAUC,EAAOF,UAC5BG,GAAY3qB,OAAO,kBAWV,MAAM4qB,GACpB,WAAA/gC,CAAYghC,GAAMjgC,KACjBA,EAAO,GACJ,IACH,IAAIkgC,EAAW,KAEF,OAATD,EAEHA,EAAO,KACGR,GAAsBQ,GAEhCA,EAAOE,EAAOl+B,KAAKg+B,EAAK94B,YACdw4B,GAAOM,IAEPE,EAAOC,SAASH,KAEhBI,EAAMC,iBAAiBL,GAEjCA,EAAOE,EAAOl+B,KAAKg+B,GACT5iB,YAAYkD,OAAO0f,GAE7BA,EAAOE,EAAOl+B,KAAKg+B,EAAKpjB,OAAQojB,EAAKrhB,WAAYqhB,EAAKhjB,YAC5CgjB,aAAgBH,IAEhBG,aAAgBzB,GAE1ByB,EJvBI,SAAyB1sB,EAAEgtB,EAAEC,GACpC,IAAIx4B,EAAE,GAAG+d,MAAMA,MAAMwY,QAAQ,MAAO,IAAIpiB,OAAM,IAAKlU,SAAS,GAAI,KAAKmD,EAAE,GAAGq1B,EAAE,KAAKz4B,8CAKjF,OAJAuL,EAAEpT,QAAQ,CAACgX,EAAEsF,IAAc,iBAAHtF,EACvB/L,EAAEiJ,KAAKosB,EAAE5mB,EAAE4C,GAAG,YAAYtF,EAAEonB,QAAQ,sBAAuB,eAC3DnzB,EAAEiJ,KAAKosB,EAAE5mB,EAAE4C,GAAG,gBAAgB5C,EAAE1C,EAAE1T,KAAM,wBAAwB0T,EAAE3R,MAAM,qCAAsC2R,EAAG,SAClH/L,EAAEiJ,KAAK,KAAKrM,OACL,IAAIu4B,EAAEn1B,EAAE,CAAC5F,KAAK,iCAAiCwC,GAAG,CIiB/C04B,CAAeT,GACtBC,EAAWD,EAAKz6B,KAAKyD,MAAM,KAAK,IAIhCg3B,EAAOE,EAAOl+B,KAAKyb,OAAOuiB,MAG3B,IAAItqB,EAASsqB,EAETE,EAAOC,SAASH,GACnBtqB,EAASmqB,EAAOa,SAAS1+B,KAAKg+B,GACpBN,GAAOM,KACjBtqB,EAASmqB,EAAOa,SAAS1+B,KAAKg+B,EAAKtqB,WAGpCzW,KAAK6gC,IAAa,CACjBE,OACAtqB,SACAuqB,WACAU,WAAW,EACXxgC,MAAO,MAERlB,KAAKc,KAAOA,EAERigC,aAAgBH,GACnBG,EAAK5gC,GAAG,QAASwhC,IAChB,MAAMzgC,EAAQygC,aAAkB3B,EAC/B2B,EACA,IAAI1B,GAAW,+CAA+CjgC,KAAK6J,QAAQ83B,EAAOn9B,UAAW,SAAUm9B,GACxG3hC,KAAK6gC,IAAW3/B,MAAQA,GAG5B,CAEC,QAAI6/B,GACH,OAAO/gC,KAAK6gC,IAAWpqB,MACzB,CAEC,YAAImrB,GACH,OAAO5hC,KAAK6gC,IAAWa,SACzB,CAOC,iBAAMzE,GACL,MAAMtf,OAACA,EAAM+B,WAAEA,EAAU3B,WAAEA,SAAoB8jB,GAAY7hC,MAC3D,OAAO2d,EAAOV,MAAMyC,EAAYA,EAAa3B,EAC/C,CAEC,cAAM+jB,GACL,MAAMC,EAAK/hC,KAAKgiC,QAAQvhC,IAAI,gBAE5B,GAAIshC,EAAGE,WAAW,qCAAsC,CACvD,MAAMH,EAAW,IAAIxC,EACf4C,EAAa,IAAIh7B,sBAAsBlH,KAAK29B,QAElD,IAAK,MAAOp5B,EAAM+I,KAAU40B,EAC3BJ,EAASnC,OAAOp7B,EAAM+I,GAGvB,OAAOw0B,CACV,CAEE,MAAMK,WAACA,SAAoBt8B,QAAAC,UAAAqI,KAAA,WAAA,OAAAi0B,EAAA,GAC3B,OAAOD,EAAWniC,KAAK+gC,KAAMgB,EAC/B,CAOC,UAAMhF,GACL,MAAMgF,EAAM/hC,KAAKgiC,SAAWhiC,KAAKgiC,QAAQvhC,IAAI,iBAAqBT,KAAK6gC,IAAWE,MAAQ/gC,KAAK6gC,IAAWE,KAAKz6B,MAAS,GAClH+7B,QAAYriC,KAAKi9B,cAEvB,OAAO,IAAIH,EAAK,CAACuF,GAAM,CACtB/7B,KAAMy7B,GAET,CAOC,UAAMO,GACL,MAAM3E,QAAa39B,KAAK29B,OACxB,OAAOp0B,KAAKC,MAAMm0B,EACpB,CAOC,UAAMA,GACL,MAAMhgB,QAAekkB,GAAY7hC,MACjC,OAAO,IAAI69B,aAAcE,OAAOpgB,EAClC,CAOC,MAAAA,GACC,OAAOkkB,GAAY7hC,KACrB,EAyBAsL,eAAeu2B,GAAY7gC,GAC1B,GAAIA,EAAK6/B,IAAWa,UACnB,MAAM,IAAIntB,UAAU,0BAA0BvT,EAAK6I,OAKpD,GAFA7I,EAAK6/B,IAAWa,WAAY,EAExB1gC,EAAK6/B,IAAW3/B,MACnB,MAAMF,EAAK6/B,IAAW3/B,MAGvB,MAAM6/B,KAACA,GAAQ//B,EAGf,GAAa,OAAT+/B,EACH,OAAOE,EAAOsB,MAAM,GAIrB,KAAMxB,aAAgBH,GACrB,OAAOK,EAAOsB,MAAM,GAKrB,MAAMC,EAAQ,GACd,IAAIC,EAAa,EAEjB,IACC,UAAW,MAAM5oB,KAASknB,EAAM,CAC/B,GAAI//B,EAAKF,KAAO,GAAK2hC,EAAa5oB,EAAMtN,OAASvL,EAAKF,KAAM,CAC3D,MAAMI,EAAQ,IAAI++B,GAAW,mBAAmBj/B,EAAK6I,mBAAmB7I,EAAKF,OAAQ,YAErF,MADAigC,EAAK2B,QAAQxhC,GACPA,CACV,CAEGuhC,GAAc5oB,EAAMtN,OACpBi2B,EAAMrtB,KAAK0E,EACd,CACA,CAAG,MAAO3Y,GAER,MADeA,aAAiB8+B,EAAiB9+B,EAAQ,IAAI++B,GAAW,+CAA+Cj/B,EAAK6I,QAAQ3I,EAAMsD,UAAW,SAAUtD,EAEjK,CAEC,IAA2B,IAAvB6/B,EAAK4B,gBAAwD,IAA9B5B,EAAK6B,eAAeC,MAWtD,MAAM,IAAI5C,GAAW,4DAA4Dj/B,EAAK6I,OAVtF,IACC,OAAI24B,EAAMM,MAAM52B,GAAkB,iBAANA,GACpB+0B,EAAOl+B,KAAKy/B,EAAMx5B,KAAK,KAGxBi4B,EAAO8B,OAAOP,EAAOC,EAC/B,CAAI,MAAOvhC,GACR,MAAM,IAAI++B,GAAW,kDAAkDj/B,EAAK6I,QAAQ3I,EAAMsD,UAAW,SAAUtD,EAClH,CAIA,CA/EA4/B,GAAKluB,UAAU+K,OAASqlB,EAAUlC,GAAKluB,UAAU+K,OAAQ,qEAA0E,qBAGnIrL,OAAO6I,iBAAiB2lB,GAAKluB,UAAW,CACvCmuB,KAAM,CAAC3lB,YAAY,GACnBwmB,SAAU,CAACxmB,YAAY,GACvB6hB,YAAa,CAAC7hB,YAAY,GAC1B2hB,KAAM,CAAC3hB,YAAY,GACnBknB,KAAM,CAAClnB,YAAY,GACnBuiB,KAAM,CAACviB,YAAY,GACnBpa,KAAM,CAACP,IAAKuiC,EAAU,OACrB,yEACA,sEA4EK,MAAM5F,GAAQ,CAAC6F,EAAUrc,KAC/B,IAAIsc,EACAC,GACApC,KAACA,GAAQkC,EAASpC,IAGtB,GAAIoC,EAASrB,SACZ,MAAM,IAAIx+B,MAAM,sCAgBjB,OAXK29B,aAAgBH,GAAwC,mBAArBG,EAAKqC,cAE5CF,EAAK,IAAIG,EAAY,CAACzc,kBACtBuc,EAAK,IAAIE,EAAY,CAACzc,kBACtBma,EAAKuC,KAAKJ,GACVnC,EAAKuC,KAAKH,GAEVF,EAASpC,IAAWpqB,OAASysB,EAC7BnC,EAAOoC,GAGDpC,GAGFwC,GAA6BP,EAClCjC,GAAQA,EAAKqC,cACb,4FACA,wDAaYI,GAAqB,CAACzC,EAAM11B,IAE3B,OAAT01B,EACI,KAIY,iBAATA,EACH,2BAIJR,GAAsBQ,GAClB,kDAIJN,GAAOM,GACHA,EAAKz6B,MAAQ,KAIjB26B,EAAOC,SAASH,IAASI,EAAMC,iBAAiBL,IAAS5iB,YAAYkD,OAAO0f,GACxE,KAGJA,aAAgBzB,EACZ,iCAAiCj0B,EAAQw1B,IAAWG,WAIxDD,GAAoC,mBAArBA,EAAKqC,YAChB,gCAAgCG,GAA2BxC,KAI/DA,aAAgBH,EACZ,KAID,2BC5UF6C,GAAwD,mBAA5BvzB,EAAKuzB,mBACtCvzB,EAAKuzB,mBACLl/B,IACC,IAAK,0BAA0Bm5B,KAAKn5B,GAAO,CAC1C,MAAMrD,EAAQ,IAAIqT,UAAU,2CAA2ChQ,MAEvE,MADA+N,OAAOC,eAAerR,EAAO,OAAQ,CAACoM,MAAO,2BACvCpM,CACT,GAIMwiC,GAA0D,mBAA7BxzB,EAAKwzB,oBACvCxzB,EAAKwzB,oBACL,CAACn/B,EAAM+I,KACN,GAAI,kCAAkCowB,KAAKpwB,GAAQ,CAClD,MAAMpM,EAAQ,IAAIqT,UAAU,yCAAyChQ,OAErE,MADA+N,OAAOC,eAAerR,EAAO,OAAQ,CAACoM,MAAO,qBACvCpM,CACT,GAee,MAAMyiC,WAAgBz8B,gBAOpC,WAAAnH,CAAYsoB,GAGX,IAAIjjB,EAAS,GACb,GAAIijB,aAAgBsb,GAAS,CAC5B,MAAMC,EAAMvb,EAAKub,MACjB,IAAK,MAAOr/B,EAAMvB,KAAWsP,OAAOktB,QAAQoE,GAC3Cx+B,EAAO+P,QAAQnS,EAAO6F,IAAIyE,GAAS,CAAC/I,EAAM+I,IAE9C,MAAS,GAAY,MAAR+a,OAEJ,IAAoB,iBAATA,GAAsB8Y,EAAM0C,iBAAiBxb,GA+B9D,MAAM,IAAI9T,UAAU,wIA/BiD,CACrE,MAAM/I,EAAS6c,EAAKnS,OAAOuG,UAE3B,GAAc,MAAVjR,EAEHpG,EAAO+P,QAAQ7C,OAAOktB,QAAQnX,QACxB,CACN,GAAsB,mBAAX7c,EACV,MAAM,IAAI+I,UAAU,iCAKrBnP,EAAS,IAAIijB,GACXxf,IAAIgX,IACJ,GACiB,iBAATA,GAAqBshB,EAAM0C,iBAAiBhkB,GAEnD,MAAM,IAAItL,UAAU,+CAGrB,MAAO,IAAIsL,KACThX,IAAIgX,IACN,GAAoB,IAAhBA,EAAKtT,OACR,MAAM,IAAIgI,UAAU,+CAGrB,MAAO,IAAIsL,IAEjB,CACA,CAEA,CAgBE,OAbAza,EACCA,EAAOmH,OAAS,EACfnH,EAAOyD,IAAI,EAAEtE,EAAM+I,MAClBm2B,GAAmBl/B,GACnBm/B,GAAoBn/B,EAAMia,OAAOlR,IAC1B,CAACkR,OAAOja,GAAMi6B,cAAehgB,OAAOlR,WAE5C7J,EAEFhC,MAAM2D,GAIC,IAAI0+B,MAAM9jC,KAAM,CACtB,GAAAS,CAAIsjC,EAAQxC,EAAGljB,GACd,OAAQkjB,GACP,IAAK,SACL,IAAK,MACJ,MAAO,CAACh9B,EAAM+I,KACbm2B,GAAmBl/B,GACnBm/B,GAAoBn/B,EAAMia,OAAOlR,IAC1BpG,gBAAgB0L,UAAU2uB,GAAGhuB,KACnCwwB,EACAvlB,OAAOja,GAAMi6B,cACbhgB,OAAOlR,KAIV,IAAK,SACL,IAAK,MACL,IAAK,SACJ,OAAO/I,IACNk/B,GAAmBl/B,GACZ2C,gBAAgB0L,UAAU2uB,GAAGhuB,KACnCwwB,EACAvlB,OAAOja,GAAMi6B,gBAIhB,IAAK,OACJ,MAAO,KACNuF,EAAOvD,OACA,IAAIhgC,IAAI0G,gBAAgB0L,UAAUmtB,KAAKxsB,KAAKwwB,IAAShE,QAG9D,QACC,OAAOiE,QAAQvjC,IAAIsjC,EAAQxC,EAAGljB,GAEpC,GAGA,CAEC,IAAKnI,OAAOmF,eACX,OAAOrb,KAAKD,YAAYwE,IAC1B,CAEC,QAAA0D,GACC,OAAOqK,OAAOM,UAAU3K,SAASsL,KAAKvT,KACxC,CAEC,GAAAS,CAAI8D,GACH,MAAMvB,EAAShD,KAAK8/B,OAAOv7B,GAC3B,GAAsB,IAAlBvB,EAAOuJ,OACV,OAAO,KAGR,IAAIe,EAAQtK,EAAOgG,KAAK,MAKxB,MAJI,sBAAsB00B,KAAKn5B,KAC9B+I,EAAQA,EAAMkxB,eAGRlxB,CACT,CAEC,OAAArM,CAAQ+S,EAAUiwB,OAAUxgC,GAC3B,IAAK,MAAMc,KAAQvE,KAAK+/B,OACvBiE,QAAQvvB,MAAMT,EAAUiwB,EAAS,CAACjkC,KAAKS,IAAI8D,GAAOA,EAAMvE,MAE3D,CAEC,OAAEgD,GACD,IAAK,MAAMuB,KAAQvE,KAAK+/B,aACjB//B,KAAKS,IAAI8D,EAElB,CAKC,QAAEi7B,GACD,IAAK,MAAMj7B,KAAQvE,KAAK+/B,YACjB,CAACx7B,EAAMvE,KAAKS,IAAI8D,GAEzB,CAEC,CAAC2R,OAAOuG,YACP,OAAOzc,KAAKw/B,SACd,CAOC,GAAAoE,GACC,MAAO,IAAI5jC,KAAK+/B,QAAQmE,OAAO,CAAC9+B,EAAQiI,KACvCjI,EAAOiI,GAAOrN,KAAK8/B,OAAOzyB,GACnBjI,GACL,GACL,CAKC,CAAC8Q,OAAO6I,IAAI,iCACX,MAAO,IAAI/e,KAAK+/B,QAAQmE,OAAO,CAAC9+B,EAAQiI,KACvC,MAAMrK,EAAShD,KAAK8/B,OAAOzyB,GAS3B,OALCjI,EAAOiI,GADI,SAARA,EACWrK,EAAO,GAEPA,EAAOuJ,OAAS,EAAIvJ,EAASA,EAAO,GAG5CoC,GACL,GACL,EAOAkN,OAAO6I,iBACNwoB,GAAQ/wB,UACR,CAAC,MAAO,UAAW,UAAW,UAAUsxB,OAAO,CAAC9+B,EAAQ++B,KACvD/+B,EAAO++B,GAAY,CAAC/oB,YAAY,GACzBhW,GACL,CAAA,IC5OJ,MAAMg/B,GAAiB,IAAI5jC,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAQvC6jC,GAAa5/B,GAClB2/B,GAAe9jC,IAAImE,GCCrBo8B,GAAY3qB,OAAO,sBAWV,MAAMouB,WAAiBxD,GACrC,WAAA/gC,CAAYghC,EAAO,KAAM9yB,EAAU,CAAA,GAClCxM,MAAMs/B,EAAM9yB,GAGZ,MAAMd,EAA2B,MAAlBc,EAAQd,OAAiBc,EAAQd,OAAS,IAEnD60B,EAAU,IAAI2B,GAAQ11B,EAAQ+zB,SAEpC,GAAa,OAATjB,IAAkBiB,EAAQ1hC,IAAI,gBAAiB,CAClD,MAAMikC,EAAcf,GAAmBzC,EAAM/gC,MACzCukC,GACHvC,EAAQrC,OAAO,eAAgB4E,EAEnC,CAEEvkC,KAAK6gC,IAAa,CACjBv6B,KAAM,UACNuD,IAAKoE,EAAQpE,IACbsD,SACAq3B,WAAYv2B,EAAQu2B,YAAc,GAClCxC,UACAyC,QAASx2B,EAAQw2B,QACjB7d,cAAe3Y,EAAQ2Y,cAE1B,CAEC,QAAItgB,GACH,OAAOtG,KAAK6gC,IAAWv6B,IACzB,CAEC,OAAIuD,GACH,OAAO7J,KAAK6gC,IAAWh3B,KAAO,EAChC,CAEC,UAAIsD,GACH,OAAOnN,KAAK6gC,IAAW1zB,MACzB,CAKC,MAAIu3B,GACH,OAAO1kC,KAAK6gC,IAAW1zB,QAAU,KAAOnN,KAAK6gC,IAAW1zB,OAAS,GACnE,CAEC,cAAIw3B,GACH,OAAO3kC,KAAK6gC,IAAW4D,QAAU,CACnC,CAEC,cAAID,GACH,OAAOxkC,KAAK6gC,IAAW2D,UACzB,CAEC,WAAIxC,GACH,OAAOhiC,KAAK6gC,IAAWmB,OACzB,CAEC,iBAAIpb,GACH,OAAO5mB,KAAK6gC,IAAWja,aACzB,CAOC,KAAAwW,GACC,OAAO,IAAIkH,GAASlH,GAAMp9B,KAAMA,KAAK4mB,eAAgB,CACpDtgB,KAAMtG,KAAKsG,KACXuD,IAAK7J,KAAK6J,IACVsD,OAAQnN,KAAKmN,OACbq3B,WAAYxkC,KAAKwkC,WACjBxC,QAAShiC,KAAKgiC,QACd0C,GAAI1kC,KAAK0kC,GACTC,WAAY3kC,KAAK2kC,WACjB7jC,KAAMd,KAAKc,KACX8lB,cAAe5mB,KAAK4mB,eAEvB,CAOC,eAAOge,CAAS/6B,EAAKsD,EAAS,KAC7B,IAAKk3B,GAAWl3B,GACf,MAAM,IAAI+S,WAAW,mEAGtB,OAAO,IAAIokB,GAAS,KAAM,CACzBtC,QAAS,CACR37B,SAAU,IAAIw+B,IAAIh7B,GAAK5B,YAExBkF,UAEH,CAEC,YAAOjM,GACN,MAAM4jC,EAAW,IAAIR,GAAS,KAAM,CAACn3B,OAAQ,EAAGq3B,WAAY,KAE5D,OADAM,EAASjE,IAAWv6B,KAAO,QACpBw+B,CACT,CAEC,WAAOxC,CAAKthC,OAAOyC,EAAW4kB,EAAO,CAAA,GACpC,MAAM0Y,EAAOx3B,KAAKI,UAAU3I,GAE5B,QAAayC,IAATs9B,EACH,MAAM,IAAIxsB,UAAU,iCAGrB,MAAMytB,EAAU,IAAI2B,GAAQtb,GAAQA,EAAK2Z,SAMzC,OAJKA,EAAQ1hC,IAAI,iBAChB0hC,EAAQzhC,IAAI,eAAgB,oBAGtB,IAAI+jC,GAASvD,EAAM,IACtB1Y,EACH2Z,WAEH,CAEC,IAAK9rB,OAAOmF,eACX,MAAO,UACT,EAGA/I,OAAO6I,iBAAiBmpB,GAAS1xB,UAAW,CAC3CtM,KAAM,CAAC8U,YAAY,GACnBvR,IAAK,CAACuR,YAAY,GAClBjO,OAAQ,CAACiO,YAAY,GACrBspB,GAAI,CAACtpB,YAAY,GACjBupB,WAAY,CAACvpB,YAAY,GACzBopB,WAAY,CAACppB,YAAY,GACzB4mB,QAAS,CAAC5mB,YAAY,GACtBgiB,MAAO,CAAChiB,YAAY,KC7Id,SAAS2pB,GAA0Bl7B,EAAKm7B,GAAa,GAE3D,OAAW,MAAPn7B,EACI,eAGRA,EAAM,IAAIg7B,IAAIh7B,GAGV,uBAAuB6zB,KAAK7zB,EAAIo7B,UAC5B,eAIRp7B,EAAIq7B,SAAW,GAIfr7B,EAAIs7B,SAAW,GAIft7B,EAAIwC,KAAO,GAGP24B,IAGHn7B,EAAIu7B,SAAW,GAIfv7B,EAAIw7B,OAAS,IAIPx7B,GACR,CAKO,MAAMy7B,GAAiB,IAAI9kC,IAAI,CACrC,GACA,cACA,6BACA,cACA,SACA,gBACA,2BACA,kCACA,eA6EM,SAAS+kC,GAA4B17B,GAE3C,QAAI,yBAAyB6zB,KAAK7zB,KAKb,UAAjBA,EAAIo7B,aAOJ,uBAAuBvH,KAAK7zB,EAAIo7B,WAjE9B,SAAwCp7B,GAQ9C,GAAI,gBAAgB6zB,KAAK7zB,EAAIo7B,UAC5B,OAAO,EAIR,MAAMO,EAAS37B,EAAI47B,KAAKpG,QAAQ,cAAe,IACzCqG,EAAgBC,EAAKH,GAE3B,QAAsB,IAAlBE,IAAuB,SAAShI,KAAK8H,OAInB,IAAlBE,IAAuB,mCAAmChI,KAAK8H,KAOlD,cAAb37B,EAAI47B,OAAwB57B,EAAI47B,KAAKG,SAAS,eAK7B,UAAjB/7B,EAAIo7B,QAYT,CA0BQY,CAA+Bh8B,IACvC,CCnJA,MAAMg3B,GAAY3qB,OAAO,qBAQnB4vB,GAAYpH,GAEE,iBAAXA,GACsB,iBAAtBA,EAAOmC,IAIVkF,GAAgB/C,EAAU,OAC/B,+DACA,kEAWc,MAAMgD,WAAgBlF,GACpC,WAAA/gC,CAAYkmC,EAAO5d,EAAO,IACzB,IAAI6d,EAUJ,GAPIJ,GAAUG,GACbC,EAAY,IAAIrB,IAAIoB,EAAMp8B,MAE1Bq8B,EAAY,IAAIrB,IAAIoB,GACpBA,EAAQ,CAAA,GAGkB,KAAvBC,EAAUhB,UAA0C,KAAvBgB,EAAUf,SAC1C,MAAM,IAAI5wB,UAAU,GAAG2xB,0CAGxB,IAAI16B,EAAS6c,EAAK7c,QAAUy6B,EAAMz6B,QAAU,MAU5C,GATI,wCAAwCkyB,KAAKlyB,KAChDA,EAASA,EAAO26B,gBAGZL,GAAUzd,IAAS,SAAUA,GACjC0d,MAIiB,MAAb1d,EAAK0Y,MAAiB+E,GAAUG,IAAyB,OAAfA,EAAMlF,QACxC,QAAXv1B,GAA+B,SAAXA,GACrB,MAAM,IAAI+I,UAAU,iDAGrB,MAAM6xB,EAAY/d,EAAK0Y,KACtB1Y,EAAK0Y,KACJ+E,GAAUG,IAAyB,OAAfA,EAAMlF,KAC1B3D,GAAM6I,GACN,KAEFxkC,MAAM2kC,EAAW,CAChBtlC,KAAMunB,EAAKvnB,MAAQmlC,EAAMnlC,MAAQ,IAGlC,MAAMkhC,EAAU,IAAI2B,GAAQtb,EAAK2Z,SAAWiE,EAAMjE,SAAW,IAE7D,GAAkB,OAAdoE,IAAuBpE,EAAQ1hC,IAAI,gBAAiB,CACvD,MAAMikC,EAAcf,GAAmB4C,EAAWpmC,MAC9CukC,GACHvC,EAAQzhC,IAAI,eAAgBgkC,EAEhC,CAEE,IAAIlV,EAASyW,GAAUG,GACtBA,EAAM5W,OACN,KAMD,GALI,WAAYhH,IACfgH,EAAShH,EAAKgH,QAID,MAAVA,INpDc,iBAFSqP,EMsDUrP,INnDnB,gBAAjBqP,EAAO4B,KACU,gBAAjB5B,EAAO4B,KMmDP,MAAM,IAAI/rB,UAAU,kENvDMmqB,MM4D3B,IAAI2H,EAA4B,MAAjBhe,EAAKge,SAAmBJ,EAAMI,SAAWhe,EAAKge,SAC7D,GAAiB,KAAbA,EAEHA,EAAW,mBACL,GAAIA,EAAU,CAEpB,MAAMC,EAAiB,IAAIzB,IAAIwB,GAE/BA,EAAW,wBAAwB3I,KAAK4I,GAAkB,SAAWA,CACxE,MACGD,OAAW5iC,EAGZzD,KAAK6gC,IAAa,CACjBr1B,SACAo5B,SAAUvc,EAAKuc,UAAYqB,EAAMrB,UAAY,SAC7C5C,UACAkE,YACA7W,SACAgX,YAIDrmC,KAAKumC,YAAyB9iC,IAAhB4kB,EAAKke,YAAyC9iC,IAAjBwiC,EAAMM,OAAuB,GAAKN,EAAMM,OAAUle,EAAKke,OAClGvmC,KAAKwmC,cAA6B/iC,IAAlB4kB,EAAKme,cAA6C/iC,IAAnBwiC,EAAMO,UAAgCP,EAAMO,SAAYne,EAAKme,SAC5GxmC,KAAKykC,QAAUpc,EAAKoc,SAAWwB,EAAMxB,SAAW,EAChDzkC,KAAKymC,MAAQpe,EAAKoe,OAASR,EAAMQ,MACjCzmC,KAAK4mB,cAAgByB,EAAKzB,eAAiBqf,EAAMrf,eAAiB,MAClE5mB,KAAK0mC,mBAAqBre,EAAKqe,oBAAsBT,EAAMS,qBAAsB,EAIjF1mC,KAAK2mC,eAAiBte,EAAKse,gBAAkBV,EAAMU,gBAAkB,EACvE,CAGC,UAAIn7B,GACH,OAAOxL,KAAK6gC,IAAWr1B,MACzB,CAGC,OAAI3B,GACH,OAAO+8B,EAAU5mC,KAAK6gC,IAAWqF,UACnC,CAGC,WAAIlE,GACH,OAAOhiC,KAAK6gC,IAAWmB,OACzB,CAEC,YAAI4C,GACH,OAAO5kC,KAAK6gC,IAAW+D,QACzB,CAGC,UAAIvV,GACH,OAAOrvB,KAAK6gC,IAAWxR,MACzB,CAGC,YAAIgX,GACH,MAAiC,gBAA7BrmC,KAAK6gC,IAAWwF,SACZ,GAGyB,WAA7BrmC,KAAK6gC,IAAWwF,SACZ,eAGJrmC,KAAK6gC,IAAWwF,SACZrmC,KAAK6gC,IAAWwF,SAASp+B,gBADjC,CAKF,CAEC,kBAAI0+B,GACH,OAAO3mC,KAAK6gC,IAAW8F,cACzB,CAEC,kBAAIA,CAAeA,GAClB3mC,KAAK6gC,IAAW8F,eD9GX,SAAgCA,GACtC,IAAKrB,GAAehlC,IAAIqmC,GACvB,MAAM,IAAIpyB,UAAU,2BAA2BoyB,KAGhD,OAAOA,CACR,CCwGmCE,CAAuBF,EAC1D,CAOC,KAAAvJ,GACC,OAAO,IAAI4I,GAAQhmC,KACrB,CAEC,IAAKkW,OAAOmF,eACX,MAAO,SACT,EAGA/I,OAAO6I,iBAAiB6qB,GAAQpzB,UAAW,CAC1CpH,OAAQ,CAAC4P,YAAY,GACrBvR,IAAK,CAACuR,YAAY,GAClB4mB,QAAS,CAAC5mB,YAAY,GACtBwpB,SAAU,CAACxpB,YAAY,GACvBgiB,MAAO,CAAChiB,YAAY,GACpBiU,OAAQ,CAACjU,YAAY,GACrBirB,SAAU,CAACjrB,YAAY,GACvBurB,eAAgB,CAACvrB,YAAY,KASvB,MAAM0rB,GAAwBz7B,IACpC,MAAM66B,UAACA,GAAa76B,EAAQw1B,IACtBmB,EAAU,IAAI2B,GAAQt4B,EAAQw1B,IAAWmB,SAG1CA,EAAQ1hC,IAAI,WAChB0hC,EAAQzhC,IAAI,SAAU,OAIvB,IAAIwmC,EAAqB,KAKzB,GAJqB,OAAjB17B,EAAQ01B,MAAiB,gBAAgBrD,KAAKryB,EAAQG,UACzDu7B,EAAqB,KAGD,OAAjB17B,EAAQ01B,KAAe,CAC1B,MAAMiG,ELiHqB37B,KAC5B,MAAM01B,KAACA,GAAQ11B,EAAQw1B,IAGvB,OAAa,OAATE,EACI,EAIJN,GAAOM,GACHA,EAAKjgC,KAITmgC,EAAOC,SAASH,GACZA,EAAKx0B,OAITw0B,GAAsC,mBAAvBA,EAAKkG,eAChBlG,EAAKmG,gBAAkBnG,EAAKmG,iBAAmBnG,EAAKkG,gBAIrD,MKzIaE,CAAc97B,GAEP,iBAAf27B,GAA4BnvB,OAAOgF,MAAMmqB,KACnDD,EAAqBvoB,OAAOwoB,GAE/B,CAEKD,GACH/E,EAAQzhC,IAAI,iBAAkBwmC,GAMA,KAA3B17B,EAAQs7B,iBACXt7B,EAAQs7B,eDtL6B,mCC4LlCt7B,EAAQg7B,UAAiC,gBAArBh7B,EAAQg7B,SAC/Bh7B,EAAQw1B,IAAWwF,SDxEd,SAAmCh7B,GAAS+7B,oBAACA,EAAmBC,uBAAEA,GAA0B,CAAA,GAMlG,GAAyB,gBAArBh8B,EAAQg7B,UAAyD,KAA3Bh7B,EAAQs7B,eACjD,OAAO,KAIR,MAAMW,EAASj8B,EAAQs7B,eAMvB,GAAyB,iBAArBt7B,EAAQg7B,SACX,MAAO,cAIR,MAAMkB,EAAiBl8B,EAAQg7B,SAG/B,IAAImB,EAAczC,GAA0BwC,GAIxCE,EAAiB1C,GAA0BwC,GAAgB,GAI3DC,EAAYv/B,WAAWsE,OAAS,OACnCi7B,EAAcC,GAOXL,IACHI,EAAcJ,EAAoBI,IAG/BH,IACHI,EAAiBJ,EAAuBI,IAIzC,MAAMC,EAAa,IAAI7C,IAAIx5B,EAAQxB,KAEnC,OAAQy9B,GACP,IAAK,cACJ,MAAO,cAER,IAAK,SACJ,OAAOG,EAER,IAAK,aACJ,OAAOD,EAER,IAAK,gBAGJ,OAAIjC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDD,EAAex/B,WAEvB,IAAK,kCAGJ,OAAIu/B,EAAYphC,SAAWshC,EAAWthC,OAC9BohC,EAKJjC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDD,EAER,IAAK,cAGJ,OAAID,EAAYphC,SAAWshC,EAAWthC,OAC9BohC,EAID,cAER,IAAK,2BAGJ,OAAIA,EAAYphC,SAAWshC,EAAWthC,OAC9BohC,EAIDC,EAER,IAAK,6BAGJ,OAAIlC,GAA4BiC,KAAiBjC,GAA4BmC,GACrE,cAIDF,EAER,QACC,MAAM,IAAIjzB,UAAU,2BAA2B+yB,KAElD,CCjDgCK,CAA0Bt8B,GAExDA,EAAQw1B,IAAWwF,SAAW,cAM3Bh7B,EAAQw1B,IAAWwF,oBAAoBxB,KAC1C7C,EAAQzhC,IAAI,UAAW8K,EAAQg7B,UAI3BrE,EAAQ1hC,IAAI,eAChB0hC,EAAQzhC,IAAI,aAAc,cAIvB8K,EAAQm7B,WAAaxE,EAAQ1hC,IAAI,oBACpC0hC,EAAQzhC,IAAI,kBAAmB,qBAGhC,IAAIkmC,MAACA,GAASp7B,EACO,mBAAVo7B,IACVA,EAAQA,EAAMP,IAMf,MAAMb,ECrSkBa,KACxB,GAAIA,EAAUb,OACb,OAAOa,EAAUb,OAGlB,MAAMuC,EAAa1B,EAAU2B,KAAKt7B,OAAS,EACrCF,EAAO65B,EAAU75B,OAAwC,MAA/B65B,EAAU2B,KAAKD,GAAsB,IAAM,IAC3E,MAAoD,MAA7C1B,EAAU2B,KAAKD,EAAav7B,EAAKE,QAAkB,IAAM,ID8RjDu7B,CAAU5B,GAczB,MAAO,CAENA,YACAj4B,QAbe,CAEf85B,KAAM7B,EAAUd,SAAWC,EAE3B75B,OAAQH,EAAQG,OAChBw2B,QAASA,EAAQ9rB,OAAO6I,IAAI,iCAC5B2nB,mBAAoBr7B,EAAQq7B,mBAC5BD,WE3SK,MAAMuB,WAAmBhI,EAC/B,WAAAjgC,CAAYyE,EAAS8B,EAAO,WAC3B7E,MAAM+C,EAAS8B,EACjB;gICNA,SAAKkqB,WAAWM,aACd,IACE,MAAMmX,eAAEA,GAAmBr6B,QAAQ,kBACnCs6B,GAAO,IAAID,GAAiBE,MAC5BC,EAAK,IAAIjqB,YACT+pB,EAAKj+B,YAAYm+B,EAAI,CAACA,EAAIA,IAC1B,MAAOj3B,GACkB,iBAAzBA,EAAIpR,YAAYwE,OACdisB,WAAWM,aAAe3f,EAAIpR,YAEpC,CAGAsoC,GAAiB7X,WAAWM,gBCR5B,MAAMwX,KAAEA,IAASC,EC+BXC,GAAmB,IAAIhoC,IAAI,CAAC,QAAS,QAAS,+IASrC8K,eAAe0C,EAAMnE,EAAK4+B,GACxC,OAAO,IAAI5iC,QAAQ,CAACC,EAASC,KAE5B,MAAMsF,EAAU,IAAI26B,GAAQn8B,EAAK4+B,IAC3BvC,UAACA,EAASj4B,QAAEA,GAAW64B,GAAsBz7B,GACnD,IAAKm9B,GAAiBloC,IAAI4lC,EAAUjB,UACnC,MAAM,IAAI1wB,UAAU,0BAA0B1K,kBAAoBq8B,EAAUjB,SAAS5F,QAAQ,KAAM,0BAGpG,GAA2B,UAAvB6G,EAAUjB,SAAsB,CACnC,MAAMjkC,EClDF,SAAyB0nC,GAC5B,IAAK,UAAUhL,KAAKgL,GAChB,MAAM,IAAIn0B,UAAU,oEAKxB,MAAMo0B,GAFND,EAAMA,EAAIrJ,QAAQ,SAAU,KAELuJ,QAAQ,KAC/B,IAAmB,IAAfD,GAAqBA,GAAc,EACnC,MAAM,IAAIp0B,UAAU,uBAGxB,MAAMs0B,EAAOH,EAAItgC,UAAU,EAAGugC,GAAY5+B,MAAM,KAChD,IAAI++B,EAAU,GACVC,GAAS,EACb,MAAMziC,EAAOuiC,EAAK,IAAM,aACxB,IAAIG,EAAW1iC,EACf,IAAK,IAAIgG,EAAI,EAAGA,EAAIu8B,EAAKt8B,OAAQD,IACb,WAAZu8B,EAAKv8B,GACLy8B,GAAS,EAEJF,EAAKv8B,KACV08B,GAAY,IAAIH,EAAKv8B,KACe,IAAhCu8B,EAAKv8B,GAAGs8B,QAAQ,cAChBE,EAAUD,EAAKv8B,GAAGlE,UAAU,KAKnCygC,EAAK,IAAOC,EAAQv8B,SACrBy8B,GAAY,oBACZF,EAAU,YAGd,MAAMG,EAAWF,EAAS,SAAW,QAC/B/nC,EAAOkoC,SAASR,EAAItgC,UAAUugC,EAAa,IAC3ChrB,EAASsjB,OAAOl+B,KAAK/B,EAAMioC,GAMjC,OAJAtrB,EAAOrX,KAAOA,EACdqX,EAAOqrB,SAAWA,EAElBrrB,EAAOmrB,QAAUA,EACVnrB,CACX,CDOgBwrB,CAAgB99B,EAAQxB,KAC/Bi7B,EAAW,IAAIR,GAAStjC,EAAM,CAACghC,QAAS,CAAC,eAAgBhhC,EAAKgoC,YAEpE,YADAljC,EAAQg/B,EAEX,CAGE,MAAMsE,GAA+B,WAAvBlD,EAAUjB,SAAwBoE,EAAQn5B,GAAM7E,SACxDgkB,OAACA,GAAUhkB,EACjB,IAAIy5B,EAAW,KAEf,MAAMrc,EAAQ,KACb,MAAMvnB,EAAQ,IAAI8mC,GAAW,8BAC7BjiC,EAAO7E,GACHmK,EAAQ01B,MAAQ11B,EAAQ01B,gBAAgBH,EAAOa,UAClDp2B,EAAQ01B,KAAK2B,QAAQxhC,GAGjB4jC,GAAaA,EAAS/D,MAI3B+D,EAAS/D,KAAKhgC,KAAK,QAASG,IAG7B,GAAImuB,GAAUA,EAAOnG,QAEpB,YADAT,IAID,MAAM6gB,EAAmB,KACxB7gB,IACAkK,KAIK4W,EAAWH,EAAKlD,EAAUj+B,WAAYgG,GAExCohB,GACHA,EAAO3oB,iBAAiB,QAAS4iC,GAGlC,MAAM3W,EAAW,KAChB4W,EAAS9gB,QACL4G,GACHA,EAAO9oB,oBAAoB,QAAS+iC,IAItCC,EAASppC,GAAG,QAASe,IACpB6E,EAAO,IAAIk6B,GAAW,cAAc50B,EAAQxB,uBAAuB3I,EAAMsD,UAAW,SAAUtD,IAC9FyxB,MAyQH,SAA6CtnB,EAASm+B,GACrD,MAAMC,EAAaxI,EAAOl+B,KAAK,aAE/B,IAEI2mC,EAFAC,GAAoB,EACpBC,GAA0B,EAG9Bv+B,EAAQlL,GAAG,WAAY2kC,IACtB,MAAM9C,QAACA,GAAW8C,EAClB6E,EAAqD,YAAjC3H,EAAQ,uBAAuCA,EAAQ,oBAG5E32B,EAAQlL,GAAG,SAAU0pC,IACpB,MAAMC,EAAgB,KACrB,GAAIH,IAAsBC,EAAyB,CAClD,MAAM1oC,EAAQ,IAAIkC,MAAM,mBACxBlC,EAAMuD,KAAO,6BACb+kC,EAActoC,EAClB,GAGQ6oC,EAAS1H,IACduH,EAAwE,IAA9C3I,EAAO+I,QAAQ3H,EAAIplB,UAAWwsB,IAGnDG,GAA2BF,IAC/BE,EACqE,IAApE3I,EAAO+I,QAAQN,EAAczsB,OAAM,GAAKwsB,EAAWxsB,MAAM,EAAG,KACL,IAAvDgkB,EAAO+I,QAAQ3H,EAAIplB,OAAM,GAAKwsB,EAAWxsB,MAAM,KAIjDysB,EAAgBrH,GAGjBwH,EAAOI,gBAAgB,QAASH,GAChCD,EAAO1pC,GAAG,OAAQ4pC,GAElB1+B,EAAQlL,GAAG,QAAS,KACnB0pC,EAAOl+B,eAAe,QAASm+B,GAC/BD,EAAOl+B,eAAe,OAAQo+B,MAGjC,CAjTEG,CAAoCX,EAAUroC,IACzC4jC,GAAYA,EAAS/D,MACxB+D,EAAS/D,KAAK2B,QAAQxhC,KAKpBw7B,QAAQyN,QAAU,OAGrBZ,EAASppC,GAAG,SAAUiqC,IACrB,IAAIC,EACJD,EAAEH,gBAAgB,MAAO,KACxBI,EAAuBD,EAAEE,eAE1BF,EAAEH,gBAAgB,QAASM,IAE1B,GAAIzF,GAAYuF,EAAuBD,EAAEE,eAAiBC,EAAU,CACnE,MAAMrpC,EAAQ,IAAIkC,MAAM,mBACxBlC,EAAMuD,KAAO,6BACbqgC,EAAS/D,KAAKhgC,KAAK,QAASG,EAClC,MAKEqoC,EAASppC,GAAG,WAAYqqC,IACvBjB,EAASkB,WAAW,GACpB,MAAMzI,ETyGF,SAAwBA,EAAU,IACxC,OAAO,IAAI2B,GACV3B,EAEEkC,OAAO,CAAC9+B,EAAQkI,EAAOc,EAAOZ,KAC1BY,EAAQ,GAAM,GACjBhJ,EAAO+P,KAAK3H,EAAMyP,MAAM7O,EAAOA,EAAQ,IAGjChJ,GACL,IACFw6B,OAAO,EAAEr7B,EAAM+I,MACf,IAGC,OAFAm2B,GAAmBl/B,GACnBm/B,GAAoBn/B,EAAMia,OAAOlR,KAC1B,CACZ,CAAM,MACD,OAAO,CACZ,IAIA,CS/HmBo9B,CAAeF,EAAUG,YAGzC,GAAItG,GAAWmG,EAAUI,YAAa,CAErC,MAAMvkC,EAAW27B,EAAQvhC,IAAI,YAG7B,IAAIoqC,EAAc,KAClB,IACCA,EAA2B,OAAbxkC,EAAoB,KAAO,IAAIw+B,IAAIx+B,EAAUgF,EAAQxB,IACxE,CAAM,MAID,GAAyB,WAArBwB,EAAQu5B,SAGX,OAFA7+B,EAAO,IAAIk6B,GAAW,wDAAwD55B,IAAY,0BAC1FssB,GAGN,CAGI,OAAQtnB,EAAQu5B,UACf,IAAK,QAGJ,OAFA7+B,EAAO,IAAIk6B,GAAW,0EAA0E50B,EAAQxB,MAAO,qBAC/G8oB,IAED,IAAK,SAEJ,MACD,IAAK,SAAU,CAEd,GAAoB,OAAhBkY,EACH,MAID,GAAIx/B,EAAQo5B,SAAWp5B,EAAQk7B,OAG9B,OAFAxgC,EAAO,IAAIk6B,GAAW,gCAAgC50B,EAAQxB,MAAO,sBACrE8oB,IAMD,MAAMmY,EAAiB,CACtB9I,QAAS,IAAI2B,GAAQt4B,EAAQ22B,SAC7BuE,OAAQl7B,EAAQk7B,OAChB9B,QAASp5B,EAAQo5B,QAAU,EAC3BgC,MAAOp7B,EAAQo7B,MACfD,SAAUn7B,EAAQm7B,SAClBh7B,OAAQH,EAAQG,OAChBu1B,KAAM3D,GAAM/xB,GACZgkB,OAAQhkB,EAAQgkB,OAChBvuB,KAAMuK,EAAQvK,KACdulC,SAAUh7B,EAAQg7B,SAClBM,eAAgBt7B,EAAQs7B,gBAYzB,IX7I6B,EAAC7O,EAAatP,KAChD,MAAMuiB,EAAO,IAAIlG,IAAIrc,GAAUwiB,SACzB7tB,EAAO,IAAI0nB,IAAI/M,GAAakT,SAElC,OAAOD,IAAS5tB,GAAQ4tB,EAAKnF,SAAS,IAAIzoB,MWyIhC8tB,CAAoB5/B,EAAQxB,IAAKghC,KX/Hb/S,EW+H6CzsB,EAAQxB,IX9HtE,IAAIg7B,IW8HuEgG,GX9HzD5F,WAClB,IAAIJ,IAAI/M,GAAamN,UW8H5B,IAAK,MAAM1gC,IAAQ,CAAC,gBAAiB,mBAAoB,SAAU,WAClEumC,EAAe9I,QAAQnhC,OAAO0D,GAKhC,GAA6B,MAAzBimC,EAAUI,YAAsBv/B,EAAQ01B,MAAQ0H,EAAS1H,gBAAgBH,EAAOa,SAGnF,OAFA17B,EAAO,IAAIk6B,GAAW,2DAA4D,8BAClFtN,IAK4B,MAAzB6X,EAAUI,aAAiD,MAAzBJ,EAAUI,YAA+C,MAAzBJ,EAAUI,YAA0C,SAAnBv/B,EAAQG,UAC9Gs/B,EAAet/B,OAAS,MACxBs/B,EAAe/J,UAAOt9B,EACtBqnC,EAAe9I,QAAQnhC,OAAO,mBAI/B,MAAMqqC,EN0FL,SAAuClJ,GAG7C,MAAMmJ,GAAgBnJ,EAAQvhC,IAAI,oBAAsB,IAAIsJ,MAAM,UAGlE,IAAIu9B,EAAS,GAMb,IAAK,MAAMhiC,KAAS6lC,EACf7lC,GAASggC,GAAehlC,IAAIgF,KAC/BgiC,EAAShiC,GAKX,OAAOgiC,CACR,CM9GqC8D,CAA8BpJ,GAQ7D,OAPIkJ,IACHJ,EAAenE,eAAiBuE,GAIjCplC,EAAQkI,EAAM,IAAIg4B,GAAQ6E,EAAaC,UACvCnY,GAEN,CAEK,QACC,OAAO5sB,EAAO,IAAIwO,UAAU,oBAAoBlJ,EAAQu5B,sDAE9D,CXlK8B,IAAC9M,EWqKxBzI,GACHmb,EAAUa,KAAK,MAAO,KACrBhc,EAAO9oB,oBAAoB,QAAS+iC,KAItC,IAAIvI,EAAOuK,EAAKd,EAAW,IAAInH,EAAeniC,IACzCA,GACH6E,EAAO7E,KAKLw7B,QAAQyN,QAAU,UACrBK,EAAUrqC,GAAG,UAAWmpC,GAGzB,MAAMiC,EAAkB,CACvB1hC,IAAKwB,EAAQxB,IACbsD,OAAQq9B,EAAUI,WAClBpG,WAAYgG,EAAUgB,cACtBxJ,UACAlhC,KAAMuK,EAAQvK,KACd2jC,QAASp5B,EAAQo5B,QACjB7d,cAAevb,EAAQub,eAIlB6kB,EAAUzJ,EAAQvhC,IAAI,oBAU5B,IAAK4K,EAAQm7B,UAA+B,SAAnBn7B,EAAQG,QAAiC,OAAZigC,GAA6C,MAAzBjB,EAAUI,YAA+C,MAAzBJ,EAAUI,WAGnH,OAFA9F,EAAW,IAAIR,GAASvD,EAAMwK,QAC9BzlC,EAAQg/B,GAST,MAAM4G,EAAc,CACnB9S,MAAO+S,EAAKC,aACZC,YAAaF,EAAKC,cAInB,GAAgB,SAAZH,GAAkC,WAAZA,EAQzB,OAPA1K,EAAOuK,EAAKvK,EAAM4K,EAAKG,aAAaJ,GAAcxqC,IAC7CA,GACH6E,EAAO7E,KAGT4jC,EAAW,IAAIR,GAASvD,EAAMwK,QAC9BzlC,EAAQg/B,GAKT,GAAgB,YAAZ2G,GAAqC,cAAZA,EAAyB,CAGrD,MAAM7H,EAAM0H,EAAKd,EAAW,IAAInH,EAAeniC,IAC1CA,GACH6E,EAAO7E,KA8BT,OA3BA0iC,EAAIyH,KAAK,OAAQxxB,IAGfknB,EADyB,IAAV,GAAXlnB,EAAM,IACHyxB,EAAKvK,EAAM4K,EAAKI,gBAAiB7qC,IACnCA,GACH6E,EAAO7E,KAIFoqC,EAAKvK,EAAM4K,EAAKK,mBAAoB9qC,IACtCA,GACH6E,EAAO7E,KAKV4jC,EAAW,IAAIR,GAASvD,EAAMwK,GAC9BzlC,EAAQg/B,UAETlB,EAAIyH,KAAK,MAAO,KAGVvG,IACJA,EAAW,IAAIR,GAASvD,EAAMwK,GAC9BzlC,EAAQg/B,KAId,CAGG,GAAgB,OAAZ2G,EAQH,OAPA1K,EAAOuK,EAAKvK,EAAM4K,EAAKM,yBAA0B/qC,IAC5CA,GACH6E,EAAO7E,KAGT4jC,EAAW,IAAIR,GAASvD,EAAMwK,QAC9BzlC,EAAQg/B,GAKTA,EAAW,IAAIR,GAASvD,EAAMwK,GAC9BzlC,EAAQg/B,KVuBkBx5B,OAAO6R,GAAO4jB,WAC7B,OAATA,EAEH5jB,EAAKe,YAGCwiB,GAASK,EAAM5jB,IUzBrB+uB,CAAc3C,EAAUl+B,GAAS8gC,MAAMpmC,IAEzC,kBEhXA,IAAIqkC,GAAI,EACR,MAAMgC,GAAI,CACTC,eAAgBjC,KAChBkC,mBAAoBlC,KACpBmC,aAAcnC,KACdoC,mBAAoBpC,KACpBqC,aAAcrC,KACdsC,yBAA0BtC,KAC1BuC,oBAAqBvC,KACrBwC,gBAAiBxC,KACjByC,UAAWzC,KACX0C,IAAK1C,MAGN,IAAIjL,GAAI,EACR,MAAM9qB,GACU8qB,GADV9qB,GAEU8qB,IAAK,EAWf4N,GAAQ7gC,GAAS,GAAJA,EAEb8F,GAAO,OAEb,MAAMg7B,GAIL,WAAAjtC,CAAYihC,GACXhhC,KAAKoO,MAAQ,EACbpO,KAAKitC,MAAQ,EAEbjtC,KAAKktC,YAAcl7B,GACnBhS,KAAKmtC,cAAgBn7B,GACrBhS,KAAKotC,aAAep7B,GACpBhS,KAAKqtC,cAAgBr7B,GACrBhS,KAAKstC,YAAct7B,GACnBhS,KAAKutC,WAAav7B,GAClBhS,KAAKwtC,UAAYx7B,GAEjBhS,KAAKytC,cAAgB,CAAA,EAErBzM,EAAW,SAAWA,EACtB,MAAM0M,EAAO,IAAI9kC,WAAWo4B,EAASz0B,QACrC,IAAK,IAAID,EAAI,EAAGA,EAAI00B,EAASz0B,OAAQD,IACpCohC,EAAKphC,GAAK00B,EAASx0B,WAAWF,GAC9BtM,KAAKytC,cAAcC,EAAKphC,KAAM,EAG/BtM,KAAKghC,SAAW0M,EAChB1tC,KAAK2tC,WAAa,IAAI/kC,WAAW5I,KAAKghC,SAASz0B,OAAS,GACxDvM,KAAK2B,MAAQyqC,GAAEC,cACjB,CAKC,KAAA3jB,CAAM1nB,GACL,IAAIsL,EAAI,EACR,MAAMshC,EAAU5sC,EAAKuL,OACrB,IAAIshC,EAAgB7tC,KAAKoO,OACrBu/B,WAACA,EAAU3M,SAAEA,EAAQyM,cAAEA,EAAar/B,MAAEA,EAAKzM,MAAEA,EAAKsrC,MAAEA,GAASjtC,KACjE,MAAM8tC,EAAiB9tC,KAAKghC,SAASz0B,OAC/BwhC,EAAcD,EAAiB,EAC/BE,EAAehtC,EAAKuL,OAC1B,IAAIL,EACA+hC,EAEJ,MAAMC,EAAO3pC,IACZvE,KAAKuE,EAAO,QAAU+H,GAGjBjL,EAAQkD,WACNvE,KAAKuE,EAAO,SAGdyP,EAAW,CAACm6B,EAAgBnnB,EAAO9I,EAAKwvB,UAC/BjqC,IAAVujB,GAAuBA,IAAU9I,GACpCle,KAAKmuC,GAAgBT,GAAQA,EAAKnP,SAASvX,EAAO9I,KAI9CkwB,EAAe,CAAC7pC,EAAMlD,KAC3B,MAAMgtC,EAAa9pC,EAAO,OACpB8pC,KAAcruC,OAIhBqB,GACH2S,EAASzP,EAAMvE,KAAKquC,GAAa/hC,EAAGtL,UAC7BhB,KAAKquC,KAEZr6B,EAASzP,EAAMvE,KAAKquC,GAAartC,EAAKuL,OAAQvL,GAC9ChB,KAAKquC,GAAc,KAIrB,IAAK/hC,EAAI,EAAGA,EAAIshC,EAASthC,IAGxB,OAFAJ,EAAIlL,EAAKsL,GAED3K,GACP,KAAKyqC,GAAEC,eACN,GAAIj+B,IAAU4yB,EAASz0B,OAAS,EAAG,CAClC,GAxFS,KAwFLL,EACH+gC,GAAS54B,QACH,GA5FF,KA4FMnI,EACV,OAGDkC,IACA,KACN,CAAY,GAAIA,EAAQ,GAAM4yB,EAASz0B,OAAS,EAAG,CAC7C,GAAI0gC,EAAQ54B,IAjGH,KAiGsBnI,EAC9BvK,EAAQyqC,GAAEU,IACVG,EAAQ,MACF,IAAMA,EAAQ54B,IAvGhB,KAuGoCnI,EAKxC,OAJAkC,EAAQ,EACR4F,EAAS,eACTrS,EAAQyqC,GAAEE,kBAGjB,CAEM,KACN,CAESpgC,IAAM80B,EAAS5yB,EAAQ,KAC1BA,GAAQ,GAGLlC,IAAM80B,EAAS5yB,EAAQ,IAC1BA,IAGD,MACD,KAAKg+B,GAAEE,mBACN3qC,EAAQyqC,GAAEG,aACV2B,EAAK,iBACL9/B,EAAQ,EAET,KAAKg+B,GAAEG,aACN,GAhIM,KAgIFrgC,EAAU,CACb7K,EAAM,iBACNM,EAAQyqC,GAAEO,oBACV,KACN,CAGK,GADAv+B,IApIU,KAqINlC,EACH,MAGD,GAxIS,KAwILA,EAAa,CAChB,GAAc,IAAVkC,EAEH,OAGDggC,EAAa,iBAAiB,GAC9BzsC,EAAQyqC,GAAEI,mBACV,KACN,CAGK,GADAyB,EAAKlB,GAAM7gC,GACP+hC,EAnJC,IAmJSA,EAlJT,IAmJJ,OAGD,MACD,KAAK7B,GAAEI,mBACN,GA5JS,KA4JLtgC,EACH,MAGDgiC,EAAK,iBACLvsC,EAAQyqC,GAAEK,aAEX,KAAKL,GAAEK,aApKA,KAqKFvgC,IACHkiC,EAAa,iBAAiB,GAC9Bp6B,EAAS,eACTrS,EAAQyqC,GAAEM,0BAGX,MACD,KAAKN,GAAEM,yBACN,GA9KM,KA8KFxgC,EACH,OAGDvK,EAAQyqC,GAAEE,mBACV,MACD,KAAKF,GAAEO,oBACN,GArLM,KAqLFzgC,EACH,OAGD8H,EAAS,gBACTrS,EAAQyqC,GAAEQ,gBACV,MACD,KAAKR,GAAEQ,gBACNjrC,EAAQyqC,GAAES,UACVqB,EAAK,cAEN,KAAK9B,GAAES,UAGN,GAFAgB,EAAgBz/B,EAEF,IAAVA,EAAa,CAGhB,IADA9B,GAAKyhC,EACEzhC,EAAI0hC,KAAkBhtC,EAAKsL,KAAMmhC,IACvCnhC,GAAKwhC,EAGNxhC,GAAKyhC,EACL7hC,EAAIlL,EAAKsL,EACf,CAEK,GAAI8B,EAAQ4yB,EAASz0B,OAChBy0B,EAAS5yB,KAAWlC,GACT,IAAVkC,GACHggC,EAAa,cAAc,GAG5BhgC,KAEAA,EAAQ,OAEH,GAAIA,IAAU4yB,EAASz0B,OAC7B6B,IAxNK,KAyNDlC,EAEH+gC,GAAS54B,GAzND,KA0NEnI,EAEV+gC,GAAS54B,GAETjG,EAAQ,OAEH,GAAIA,EAAQ,IAAM4yB,EAASz0B,OACjC,GAAI0gC,EAAQ54B,IAEX,GADAjG,EAAQ,EArOJ,KAsOAlC,EAAU,CAEb+gC,IAAU54B,GACVL,EAAS,aACTA,EAAS,eACTrS,EAAQyqC,GAAEE,mBACV,KACR,OACiBW,EAAQ54B,IA3OV,KA4OJnI,GACH8H,EAAS,aACTrS,EAAQyqC,GAAEU,IACVG,EAAQ,GAKT7+B,EAAQ,EAIV,GAAIA,EAAQ,EAGXu/B,EAAWv/B,EAAQ,GAAKlC,OAClB,GAAI2hC,EAAgB,EAAG,CAG7B,MAAMS,EAAc,IAAI1lC,WAAW+kC,EAAWhwB,OAAQgwB,EAAWjuB,WAAYiuB,EAAW5vB,YACxF/J,EAAS,aAAc,EAAG65B,EAAeS,GACzCT,EAAgB,EAChBK,EAAK,cAIL5hC,GACN,CAEK,MACD,KAAK8/B,GAAEU,IACN,MACD,QACC,MAAM,IAAI1pC,MAAM,6BAA6BzB,KAIhDysC,EAAa,iBACbA,EAAa,iBACbA,EAAa,cAGbpuC,KAAKoO,MAAQA,EACbpO,KAAK2B,MAAQA,EACb3B,KAAKitC,MAAQA,CACf,CAEC,GAAA/uB,GACC,GAAKle,KAAK2B,QAAUyqC,GAAEE,oBAAqC,IAAftsC,KAAKoO,OAC/CpO,KAAK2B,QAAUyqC,GAAES,WAAa7sC,KAAKoO,QAAUpO,KAAKghC,SAASz0B,OAC5DvM,KAAKwtC,iBACC,GAAIxtC,KAAK2B,QAAUyqC,GAAEU,IAC3B,MAAM,IAAI1pC,MAAM,mDAEnB,kDAmBOkI,eAA0Bw1B,EAAMiB,GACtC,IAAK,aAAarE,KAAKqE,GACtB,MAAM,IAAIxtB,UAAU,mBAGrB,MAAM2qB,EAAI6C,EAAGwM,MAAM,mCAEnB,IAAKrP,EACJ,MAAM,IAAI3qB,UAAU,wDAGrB,MAAMi6B,EAAS,IAAIxB,GAAgB9N,EAAE,IAAMA,EAAE,IAE7C,IAAIuP,EACAC,EACAC,EACAC,EACArK,EACAsK,EACJ,MAAMC,EAAc,GACdhN,EAAW,IAAIxC,EAEfiO,EAAaG,IAClBiB,GAAc/Q,EAAQG,OAAO2P,EAAM,CAACj3B,QAAQ,KAGvCs4B,EAAerB,IACpBoB,EAAY35B,KAAKu4B,IAGZsB,EAAuB,KAC5B,MAAMC,EAAO,IAAItQ,EAAKmQ,EAAaD,EAAU,CAACvoC,KAAMi+B,IACpDzC,EAASnC,OAAOiP,EAAWK,IAGtBC,EAAwB,KAC7BpN,EAASnC,OAAOiP,EAAWD,IAGtB/Q,EAAU,IAAIC,YAAY,SAChCD,EAAQG,SAERyQ,EAAOlB,YAAc,WACpBkB,EAAOjB,WAAaA,EACpBiB,EAAOhB,UAAY0B,EAEnBT,EAAc,GACdC,EAAc,GACdC,EAAa,GACbC,EAAY,GACZrK,EAAc,GACdsK,EAAW,KACXC,EAAYviC,OAAS,CACvB,EAECiiC,EAAOrB,cAAgB,SAAUO,GAChCe,GAAe7Q,EAAQG,OAAO2P,EAAM,CAACj3B,QAAQ,GAC/C,EAEC+3B,EAAOnB,cAAgB,SAAUK,GAChCgB,GAAe9Q,EAAQG,OAAO2P,EAAM,CAACj3B,QAAQ,GAC/C,EAEC+3B,EAAOtB,YAAc,WAIpB,GAHAwB,GAAe9Q,EAAQG,SACvB0Q,EAAcA,EAAYjQ,cAEN,wBAAhBiQ,EAAuC,CAE1C,MAAMvP,EAAIwP,EAAYH,MAAM,qDAExBrP,IACH0P,EAAY1P,EAAE,IAAMA,EAAE,IAAM,IAG7B2P,EA3FH,SAAmBH,GAElB,MAAMxP,EAAIwP,EAAYH,MAAM,8DAC5B,IAAKrP,EACJ,OAGD,MAAMqP,EAAQrP,EAAE,IAAMA,EAAE,IAAM,GAC9B,IAAI2P,EAAWN,EAAMtxB,MAAMsxB,EAAMY,YAAY,MAAQ,GAKrD,OAJAN,EAAWA,EAASxP,QAAQ,OAAQ,KACpCwP,EAAWA,EAASxP,QAAQ,cAAe,CAACH,EAAGz6B,IACvC+Z,OAAO4wB,aAAa3qC,IAErBoqC,CACR,CA6EcQ,CAAUX,GAEjBG,IACHL,EAAOjB,WAAawB,EACpBP,EAAOhB,UAAYwB,EAEvB,KAA6B,iBAAhBP,IACVlK,EAAcmK,GAGfA,EAAc,GACdD,EAAc,EAChB,EAEC,UAAW,MAAM50B,KAASinB,EACzB0N,EAAO9lB,MAAM7O,GAKd,OAFA20B,EAAOtwB,MAEA4jB,CACR","x_google_ignoreList":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}