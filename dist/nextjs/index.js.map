{"version":3,"file":"index.js","sources":["../../src/utils/event-emitter.ts","../../src/core/wallet.ts","../../src/providers/custom-social-login.ts","../../src/connectors/rainbow-kit.ts","../../src/connectors/wagmi.ts","../../src/utils/platform-adapters.ts","../../src/nextjs/index.ts","../../node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/base64-js/index.js","../../node_modules/fetch-blob/streams.cjs","../../node_modules/fetch-blob/index.js","../../node_modules/fetch-blob/file.js","../../node_modules/formdata-polyfill/esm.min.js","../../node_modules/node-fetch/src/errors/base.js","../../node_modules/node-fetch/src/errors/fetch-error.js","../../node_modules/node-fetch/src/utils/is.js","../../node_modules/node-fetch/src/body.js","../../node_modules/node-fetch/src/headers.js","../../node_modules/node-fetch/src/utils/is-redirect.js","../../node_modules/node-fetch/src/response.js","../../node_modules/node-fetch/src/utils/referrer.js","../../node_modules/node-fetch/src/request.js","../../node_modules/node-fetch/src/utils/get-search.js","../../node_modules/node-fetch/src/errors/abort-error.js","../../node_modules/node-domexception/index.js","../../node_modules/fetch-blob/from.js","../../node_modules/node-fetch/src/index.js","../../node_modules/data-uri-to-buffer/dist/index.js","../../node_modules/node-fetch/src/utils/multipart-parser.js"],"sourcesContent":[null,null,null,null,null,null,null,"/**\n * @license\n * web-streams-polyfill v3.3.3\n * Copyright 2024 Mattias Buelens, Diwank Singh Tomer and other contributors.\n * This code is released under the MIT license.\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n})(this, (function (exports) { 'use strict';\n\n    function noop() {\n        return undefined;\n    }\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n    function setFunctionName(fn, name) {\n        try {\n            Object.defineProperty(fn, 'name', {\n                value: name,\n                configurable: true\n            });\n        }\n        catch (_a) {\n            // This property is non-configurable in older browsers, so ignore if this throws.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n        }\n    }\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    // https://webidl.spec.whatwg.org/#a-new-promise\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-resolved-with\n    function promiseResolvedWith(value) {\n        return newPromise(resolve => resolve(value));\n    }\n    // https://webidl.spec.whatwg.org/#a-promise-rejected-with\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    // Bluebird logs a warning when a promise is created within a fulfillment handler, but then isn't returned\n    // from that handler. To prevent this, return null instead of void from all handlers.\n    // http://bluebirdjs.com/docs/warning-explanations.html#warning-a-promise-was-created-in-a-handler-but-was-not-returned-from-it\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    let _queueMicrotask = callback => {\n        if (typeof queueMicrotask === 'function') {\n            _queueMicrotask = queueMicrotask;\n        }\n        else {\n            const resolvedPromise = promiseResolvedWith(undefined);\n            _queueMicrotask = cb => PerformPromiseThen(resolvedPromise, cb);\n        }\n        return _queueMicrotask(callback);\n    };\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    const AbortSteps = Symbol('[[AbortSteps]]');\n    const ErrorSteps = Symbol('[[ErrorSteps]]');\n    const CancelSteps = Symbol('[[CancelSteps]]');\n    const PullSteps = Symbol('[[PullSteps]]');\n    const ReleaseSteps = Symbol('[[ReleaseSteps]]');\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        const stream = reader._ownerReadableStream;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        stream._readableStreamController[ReleaseSteps]();\n        stream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamDefaultReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamDefaultReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamDefaultReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    function ReadableStreamDefaultReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n    }\n    function ReadableStreamDefaultReaderErrorReadRequests(reader, e) {\n        const readRequests = reader._readRequests;\n        reader._readRequests = new SimpleQueue();\n        readRequests.forEach(readRequest => {\n            readRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    _queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    var _a, _b, _c;\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    let TransferArrayBuffer = (O) => {\n        if (typeof O.transfer === 'function') {\n            TransferArrayBuffer = buffer => buffer.transfer();\n        }\n        else if (typeof structuredClone === 'function') {\n            TransferArrayBuffer = buffer => structuredClone(buffer, { transfer: [buffer] });\n        }\n        else {\n            // Not implemented correctly\n            TransferArrayBuffer = buffer => buffer;\n        }\n        return TransferArrayBuffer(O);\n    };\n    let IsDetachedBuffer = (O) => {\n        if (typeof O.detached === 'boolean') {\n            IsDetachedBuffer = buffer => buffer.detached;\n        }\n        else {\n            // Not implemented correctly\n            IsDetachedBuffer = buffer => buffer.byteLength === 0;\n        }\n        return IsDetachedBuffer(O);\n    };\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n    function GetMethod(receiver, prop) {\n        const func = receiver[prop];\n        if (func === undefined || func === null) {\n            return undefined;\n        }\n        if (typeof func !== 'function') {\n            throw new TypeError(`${String(prop)} is not a function`);\n        }\n        return func;\n    }\n    function CreateAsyncFromSyncIterator(syncIteratorRecord) {\n        // Instead of re-implementing CreateAsyncFromSyncIterator and %AsyncFromSyncIteratorPrototype%,\n        // we use yield* inside an async generator function to achieve the same result.\n        // Wrap the sync iterator inside a sync iterable, so we can use it with yield*.\n        const syncIterable = {\n            [Symbol.iterator]: () => syncIteratorRecord.iterator\n        };\n        // Create an async generator function and immediately invoke it.\n        const asyncIterator = (async function* () {\n            return yield* syncIterable;\n        }());\n        // Return as an async iterator record.\n        const nextMethod = asyncIterator.next;\n        return { iterator: asyncIterator, nextMethod, done: false };\n    }\n    // Aligns with core-js/modules/es.symbol.async-iterator.js\n    const SymbolAsyncIterator = (_c = (_a = Symbol.asyncIterator) !== null && _a !== void 0 ? _a : (_b = Symbol.for) === null || _b === void 0 ? void 0 : _b.call(Symbol, 'Symbol.asyncIterator')) !== null && _c !== void 0 ? _c : '@@asyncIterator';\n    function GetIterator(obj, hint = 'sync', method) {\n        if (method === undefined) {\n            if (hint === 'async') {\n                method = GetMethod(obj, SymbolAsyncIterator);\n                if (method === undefined) {\n                    const syncMethod = GetMethod(obj, Symbol.iterator);\n                    const syncIteratorRecord = GetIterator(obj, 'sync', syncMethod);\n                    return CreateAsyncFromSyncIterator(syncIteratorRecord);\n                }\n            }\n            else {\n                method = GetMethod(obj, Symbol.iterator);\n            }\n        }\n        if (method === undefined) {\n            throw new TypeError('The object is not iterable');\n        }\n        const iterator = reflectCall(method, obj, []);\n        if (!typeIsObject(iterator)) {\n            throw new TypeError('The iterator method must return an object');\n        }\n        const nextMethod = iterator.next;\n        return { iterator, nextMethod, done: false };\n    }\n    function IteratorNext(iteratorRecord) {\n        const result = reflectCall(iteratorRecord.nextMethod, iteratorRecord.iterator, []);\n        if (!typeIsObject(result)) {\n            throw new TypeError('The iterator.next() method must return an object');\n        }\n        return result;\n    }\n    function IteratorComplete(iterResult) {\n        return Boolean(iterResult.done);\n    }\n    function IteratorValue(iterResult) {\n        return iterResult.value;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    function isDataViewConstructor(ctor) {\n        return ctor === DataView;\n    }\n    function isDataView(view) {\n        return isDataViewConstructor(view.constructor);\n    }\n    function arrayBufferViewElementSize(ctor) {\n        if (isDataViewConstructor(ctor)) {\n            return 1;\n        }\n        return ctor.BYTES_PER_ELEMENT;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) {\n                throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n            }\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n            }\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respond, 'respond');\n    setFunctionName(ReadableStreamBYOBRequest.prototype.respondWithNewView, 'respondWithNewView');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                ReadableByteStreamControllerFillReadRequestFromQueue(this, readRequest);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    minimumFill: 1,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            if (this._pendingPullIntos.length > 0) {\n                const firstPullInto = this._pendingPullIntos.peek();\n                firstPullInto.readerType = 'none';\n                this._pendingPullIntos = new SimpleQueue();\n                this._pendingPullIntos.push(firstPullInto);\n            }\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableByteStreamController.prototype.close, 'close');\n    setFunctionName(ReadableByteStreamController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableByteStreamController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        let clonedChunk;\n        try {\n            clonedChunk = ArrayBufferSlice(buffer, byteOffset, byteOffset + byteLength);\n        }\n        catch (cloneE) {\n            ReadableByteStreamControllerError(controller, cloneE);\n            throw cloneE;\n        }\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, clonedChunk, 0, byteLength);\n    }\n    function ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstDescriptor) {\n        if (firstDescriptor.bytesFilled > 0) {\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, firstDescriptor.buffer, firstDescriptor.byteOffset, firstDescriptor.bytesFilled);\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        const remainderBytes = maxBytesFilled % pullIntoDescriptor.elementSize;\n        const maxAlignedBytes = maxBytesFilled - remainderBytes;\n        // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n        // of the queue, so the underlying source can keep filling it.\n        if (maxAlignedBytes >= pullIntoDescriptor.minimumFill) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller) {\n        const reader = controller._controlledReadableByteStream._reader;\n        while (reader._readRequests.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const readRequest = reader._readRequests.shift();\n            ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest);\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, min, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        const ctor = view.constructor;\n        const elementSize = arrayBufferViewElementSize(ctor);\n        const { byteOffset, byteLength } = view;\n        const minimumFill = min * elementSize;\n        let buffer;\n        try {\n            buffer = TransferArrayBuffer(view.buffer);\n        }\n        catch (e) {\n            readIntoRequest._errorSteps(e);\n            return;\n        }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset,\n            byteLength,\n            bytesFilled: 0,\n            minimumFill,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        if (firstDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n        }\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'none') {\n            ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, pullIntoDescriptor);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n            return;\n        }\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill) {\n            // A descriptor for a read() request that is not yet filled up to its minimum length will stay at the head\n            // of the queue, so the underlying source can keep filling it.\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            ReadableByteStreamControllerEnqueueClonedChunkToQueue(controller, pullIntoDescriptor.buffer, end - remainderSize, remainderSize);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const { buffer, byteOffset, byteLength } = chunk;\n        if (IsDetachedBuffer(buffer)) {\n            throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n        }\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n                throw new TypeError('The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk');\n            }\n            ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n            if (firstPendingPullInto.readerType === 'none') {\n                ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(controller, firstPendingPullInto);\n            }\n        }\n        if (ReadableStreamHasDefaultReader(stream)) {\n            ReadableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerFillReadRequestFromQueue(controller, readRequest) {\n        const entry = controller._queue.shift();\n        controller._queueTotalSize -= entry.byteLength;\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n        readRequest._chunkSteps(view);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n    function convertByobReadOptions(options, context) {\n        var _a;\n        assertDictionary(options, context);\n        const min = (_a = options === null || options === void 0 ? void 0 : options.min) !== null && _a !== void 0 ? _a : 1;\n        return {\n            min: convertUnsignedLongLongWithEnforceRange(min, `${context} has member 'min' that`)\n        };\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        read(view, rawOptions = {}) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) {\n                return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n            }\n            let options;\n            try {\n                options = convertByobReadOptions(rawOptions, 'options');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const min = options.min;\n            if (min === 0) {\n                return promiseRejectedWith(new TypeError('options.min must be greater than 0'));\n            }\n            if (!isDataView(view)) {\n                if (min > view.length) {\n                    return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s length'));\n                }\n            }\n            else if (min > view.byteLength) {\n                return promiseRejectedWith(new RangeError('options.min must be less than or equal to view\\'s byteLength'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, min, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            ReadableStreamBYOBReaderRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamBYOBReader.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStreamBYOBReader.prototype.read, 'read');\n    setFunctionName(ReadableStreamBYOBReader.prototype.releaseLock, 'releaseLock');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, min, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, min, readIntoRequest);\n        }\n    }\n    function ReadableStreamBYOBReaderRelease(reader) {\n        ReadableStreamReaderGenericRelease(reader);\n        const e = new TypeError('Reader was released');\n        ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n    }\n    function ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e) {\n        const readIntoRequests = reader._readIntoRequests;\n        reader._readIntoRequests = new SimpleQueue();\n        readIntoRequests.forEach(readIntoRequest => {\n            readIntoRequest._errorSteps(e);\n        });\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(WritableStream.prototype.abort, 'abort');\n    setFunctionName(WritableStream.prototype.close, 'close');\n    setFunctionName(WritableStream.prototype.getWriter, 'getWriter');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort(reason);\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return null;\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writer’s lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writer’s lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    setFunctionName(WritableStreamDefaultWriter.prototype.abort, 'abort');\n    setFunctionName(WritableStreamDefaultWriter.prototype.close, 'close');\n    setFunctionName(WritableStreamDefaultWriter.prototype.releaseLock, 'releaseLock');\n    setFunctionName(WritableStreamDefaultWriter.prototype.write, 'write');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n            return null;\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let writeAlgorithm;\n        let closeAlgorithm;\n        let abortAlgorithm;\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        else {\n            writeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        else {\n            closeAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        else {\n            abortAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n            return null;\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n            return null;\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n            return null;\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    function getGlobals() {\n        if (typeof globalThis !== 'undefined') {\n            return globalThis;\n        }\n        else if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        if (ctor.name !== 'DOMException') {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    /**\n     * Support:\n     * - Web browsers\n     * - Node 18 and higher (https://github.com/nodejs/node/commit/e4b1fb5e6422c1ff151234bb9de792d45dd88d87)\n     */\n    function getFromGlobal() {\n        const ctor = globals === null || globals === void 0 ? void 0 : globals.DOMException;\n        return isDOMExceptionConstructor(ctor) ? ctor : undefined;\n    }\n    /**\n     * Support:\n     * - All platforms\n     */\n    function createPolyfill() {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        setFunctionName(ctor, 'DOMException');\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-redeclare\n    const DOMException = getFromGlobal() || createPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = signal.reason !== undefined ? signal.reason : new DOMException('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n                return null;\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n                return null;\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                    return null;\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n                return null;\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n        /** @internal */\n        [ReleaseSteps]() {\n            // Do nothing.\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(ReadableStreamDefaultController.prototype.close, 'close');\n    setFunctionName(ReadableStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(ReadableStreamDefaultController.prototype.error, 'error');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n            return null;\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n            return null;\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n            return null;\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm;\n        let pullAlgorithm;\n        let cancelAlgorithm;\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        else {\n            startAlgorithm = () => undefined;\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        else {\n            pullAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n            return null;\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return null;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n                return null;\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    _queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, 1, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function isReadableStreamLike(stream) {\n        return typeIsObject(stream) && typeof stream.getReader !== 'undefined';\n    }\n\n    function ReadableStreamFrom(source) {\n        if (isReadableStreamLike(source)) {\n            return ReadableStreamFromDefaultReader(source.getReader());\n        }\n        return ReadableStreamFromIterable(source);\n    }\n    function ReadableStreamFromIterable(asyncIterable) {\n        let stream;\n        const iteratorRecord = GetIterator(asyncIterable, 'async');\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let nextResult;\n            try {\n                nextResult = IteratorNext(iteratorRecord);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const nextPromise = promiseResolvedWith(nextResult);\n            return transformPromiseWith(nextPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.next() method must fulfill with an object');\n                }\n                const done = IteratorComplete(iterResult);\n                if (done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = IteratorValue(iterResult);\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            const iterator = iteratorRecord.iterator;\n            let returnMethod;\n            try {\n                returnMethod = GetMethod(iterator, 'return');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (returnMethod === undefined) {\n                return promiseResolvedWith(undefined);\n            }\n            let returnResult;\n            try {\n                returnResult = reflectCall(returnMethod, iterator, [reason]);\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            const returnPromise = promiseResolvedWith(returnResult);\n            return transformPromiseWith(returnPromise, iterResult => {\n                if (!typeIsObject(iterResult)) {\n                    throw new TypeError('The promise returned by the iterator.return() method must fulfill with an object');\n                }\n                return undefined;\n            });\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n    function ReadableStreamFromDefaultReader(reader) {\n        let stream;\n        const startAlgorithm = noop;\n        function pullAlgorithm() {\n            let readPromise;\n            try {\n                readPromise = reader.read();\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            return transformPromiseWith(readPromise, readResult => {\n                if (!typeIsObject(readResult)) {\n                    throw new TypeError('The promise returned by the reader.read() method must fulfill with an object');\n                }\n                if (readResult.done) {\n                    ReadableStreamDefaultControllerClose(stream._readableStreamController);\n                }\n                else {\n                    const value = readResult.value;\n                    ReadableStreamDefaultControllerEnqueue(stream._readableStreamController, value);\n                }\n            });\n        }\n        function cancelAlgorithm(reason) {\n            try {\n                return promiseResolvedWith(reader.cancel(reason));\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n        }\n        stream = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, 0);\n        return stream;\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n        [SymbolAsyncIterator](options) {\n            // Stub implementation, overridden below\n            return this.values(options);\n        }\n        /**\n         * Creates a new ReadableStream wrapping the provided iterable or async iterable.\n         *\n         * This can be used to adapt various kinds of objects into a readable stream,\n         * such as an array, an async generator, or a Node.js readable stream.\n         */\n        static from(asyncIterable) {\n            return ReadableStreamFrom(asyncIterable);\n        }\n    }\n    Object.defineProperties(ReadableStream, {\n        from: { enumerable: true }\n    });\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    setFunctionName(ReadableStream.from, 'from');\n    setFunctionName(ReadableStream.prototype.cancel, 'cancel');\n    setFunctionName(ReadableStream.prototype.getReader, 'getReader');\n    setFunctionName(ReadableStream.prototype.pipeThrough, 'pipeThrough');\n    setFunctionName(ReadableStream.prototype.pipeTo, 'pipeTo');\n    setFunctionName(ReadableStream.prototype.tee, 'tee');\n    setFunctionName(ReadableStream.prototype.values, 'values');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    Object.defineProperty(ReadableStream.prototype, SymbolAsyncIterator, {\n        value: ReadableStream.prototype.values,\n        writable: true,\n        configurable: true\n    });\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            const readIntoRequests = reader._readIntoRequests;\n            reader._readIntoRequests = new SimpleQueue();\n            readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            const readRequests = reader._readRequests;\n            reader._readRequests = new SimpleQueue();\n            readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            ReadableStreamDefaultReaderErrorReadRequests(reader, e);\n        }\n        else {\n            ReadableStreamBYOBReaderErrorReadIntoRequests(reader, e);\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    setFunctionName(byteLengthSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    setFunctionName(countSizeFunction, 'size');\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            cancel: cancel === undefined ?\n                undefined :\n                convertTransformerCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n    function convertTransformerCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            return TransformStreamDefaultSourceCancelAlgorithm(stream, reason);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        TransformStreamUnblockWrite(stream);\n    }\n    function TransformStreamUnblockWrite(stream) {\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    setFunctionName(TransformStreamDefaultController.prototype.enqueue, 'enqueue');\n    setFunctionName(TransformStreamDefaultController.prototype.error, 'error');\n    setFunctionName(TransformStreamDefaultController.prototype.terminate, 'terminate');\n    if (typeof Symbol.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._finishPromise = undefined;\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm;\n        let flushAlgorithm;\n        let cancelAlgorithm;\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        else {\n            transformAlgorithm = chunk => {\n                try {\n                    TransformStreamDefaultControllerEnqueue(controller, chunk);\n                    return promiseResolvedWith(undefined);\n                }\n                catch (transformResultE) {\n                    return promiseRejectedWith(transformResultE);\n                }\n            };\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        else {\n            flushAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        if (transformer.cancel !== undefined) {\n            cancelAlgorithm = reason => transformer.cancel(reason);\n        }\n        else {\n            cancelAlgorithm = () => promiseResolvedWith(undefined);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm, cancelAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _cancelAlgorithm calls readable.cancel() internally,\n        // we don't run the _cancelAlgorithm again.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerError(readable._readableStreamController, reason);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls readable.cancel() internally,\n        // we don't also run the _cancelAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(flushPromise, () => {\n            if (readable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, readable._storedError);\n            }\n            else {\n                ReadableStreamDefaultControllerClose(readable._readableStreamController);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            ReadableStreamDefaultControllerError(readable._readableStreamController, r);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    function TransformStreamDefaultSourceCancelAlgorithm(stream, reason) {\n        const controller = stream._transformStreamController;\n        if (controller._finishPromise !== undefined) {\n            return controller._finishPromise;\n        }\n        // stream._writable cannot change after construction, so caching it across a call to user code is safe.\n        const writable = stream._writable;\n        // Assign the _finishPromise now so that if _flushAlgorithm calls writable.abort() or\n        // writable.cancel() internally, we don't run the _cancelAlgorithm again, or also run the\n        // _flushAlgorithm.\n        controller._finishPromise = newPromise((resolve, reject) => {\n            controller._finishPromise_resolve = resolve;\n            controller._finishPromise_reject = reject;\n        });\n        const cancelPromise = controller._cancelAlgorithm(reason);\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(cancelPromise, () => {\n            if (writable._state === 'errored') {\n                defaultControllerFinishPromiseReject(controller, writable._storedError);\n            }\n            else {\n                WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, reason);\n                TransformStreamUnblockWrite(stream);\n                defaultControllerFinishPromiseResolve(controller);\n            }\n            return null;\n        }, r => {\n            WritableStreamDefaultControllerErrorIfNeeded(writable._writableStreamController, r);\n            TransformStreamUnblockWrite(stream);\n            defaultControllerFinishPromiseReject(controller, r);\n            return null;\n        });\n        return controller._finishPromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    function defaultControllerFinishPromiseResolve(controller) {\n        if (controller._finishPromise_resolve === undefined) {\n            return;\n        }\n        controller._finishPromise_resolve();\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    function defaultControllerFinishPromiseReject(controller, reason) {\n        if (controller._finishPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(controller._finishPromise);\n        controller._finishPromise_reject(reason);\n        controller._finishPromise_resolve = undefined;\n        controller._finishPromise_reject = undefined;\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n}));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n","/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @returns {Buffer} Buffer instance from Data URI\n * @api public\n */\nexport function dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else if (meta[i]) {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nexport default dataUriToBuffer;\n//# sourceMappingURL=index.js.map","import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n"],"names":["EventEmitter","constructor","this","events","Map","on","event","listener","has","set","Set","get","add","off","listeners","delete","size","emit","data","forEach","error","console","removeAllListeners","clear","DSportsWallet","config","adapter","super","connectors","state","isConnecting","isReconnecting","isDisconnected","initialize","lastConnector","storage","getItem","reconnect","warn","addConnector","connector","id","handleConnect","handleDisconnect","handleChange","handleError","removeConnector","getConnectors","Array","from","values","getConnector","connect","connectorId","Error","pendingConnector","currentConnector","setItem","createAccount","undefined","disconnect","removeItem","switchChain","chainId","getState","getAccount","account","isConnected","isAuthorized","getChainId","address","chain","walletError","name","message","code","details","CustomSocialLoginProvider","login","provider","authResult","platform","loginReactNative","loginWeb","walletData","generateWalletFromSocial","result","user","token","expiresAt","walletAddress","privateKey","storeLoginResult","authUrl","buildAuthUrl","Promise","resolve","reject","popup","window","open","messageHandler","origin","location","type","removeEventListener","close","payload","addEventListener","checkClosed","setInterval","closed","clearInterval","providers","redirectUri","params","URLSearchParams","client_id","clientId","redirect_uri","response_type","scope","google","facebook","twitter","discord","github","apple","email","sms","generateState","toString","Math","random","substring","socialData","appSecret","TextEncoder","encode","hashBuffer","crypto","sha256","Uint8Array","map","b","padStart","join","ethers","Wallet","logout","clearStoredData","getStoredUser","userStr","JSON","parse","getWalletFromSocial","socialResult","stringify","handleOAuthCallback","url","urlParams","split","parent","postMessage","avatar","Date","now","DSportsRainbowKitConnector","ready","icon","eventEmitter","customSocialLoginProvider","socialLogin","connectWithSocialLogin","storedAccount","localStorage","storedChainId","parseInt","connectorData","generateMockAddress","chains","getProvider","request","async","args","method","repeat","handler","removeListener","getSigner","getAddress","signMessage","signTransaction","transaction","find","c","promptSocialProvider","generateAddressFromSocialLogin","hash","i","length","charCodeAt","abs","randomBytes","getRandomValues","DSportsWagmiConnector","getNetwork","sendTransaction","wait","blockHash","blockNumber","transactionHash","status","nextjsPlatformAdapter","key","value","generateRandomBytes","array","floor","subtle","digest","require","createHash","update","network","fetch","options","default","then","index","createDSportsWallet","appName","metadata","appUrl","appIcon","icons","appDescription","description","projectId","theme","wallet","socialProvider","rainbowKitConnector","wagmiConnector","exports","noop","typeIsObject","x","rethrowAssertionErrorRejection","setFunctionName","fn","Object","defineProperty","configurable","_a","originalPromise","originalPromiseThen","prototype","originalPromiseReject","bind","newPromise","executor","promiseResolvedWith","promiseRejectedWith","reason","PerformPromiseThen","promise","onFulfilled","onRejected","call","uponPromise","uponFulfillment","uponRejection","transformPromiseWith","fulfillmentHandler","rejectionHandler","setPromiseIsHandledToTrue","_queueMicrotask","callback","queueMicrotask","resolvedPromise","cb","reflectCall","F","V","TypeError","Function","apply","promiseCall","QUEUE_MAX_ARRAY_SIZE","SimpleQueue","_cursor","_size","_front","_elements","_next","_back","push","element","oldBack","newBack","shift","oldFront","newFront","oldCursor","newCursor","elements","node","peek","front","cursor","AbortSteps","Symbol","ErrorSteps","CancelSteps","PullSteps","ReleaseSteps","ReadableStreamReaderGenericInitialize","reader","stream","_ownerReadableStream","_reader","_state","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","_storedError","ReadableStreamReaderGenericCancel","ReadableStreamCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseReject","defaultReaderClosedPromiseResetToRejected","_readableStreamController","readerLockException","_closedPromise","_closedPromise_resolve","_closedPromise_reject","defaultReaderClosedPromiseResolve","NumberIsFinite","Number","isFinite","MathTrunc","trunc","v","ceil","isDictionary","assertDictionary","obj","context","assertFunction","isObject","assertObject","assertRequiredArgument","position","assertRequiredField","field","convertUnrestrictedDouble","censorNegativeZero","integerPart","convertUnsignedLongLongWithEnforceRange","lowerBound","upperBound","MAX_SAFE_INTEGER","assertReadableStream","IsReadableStream","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","ReadableStreamAddReadRequest","readRequest","_readRequests","ReadableStreamFulfillReadRequest","chunk","done","_closeSteps","_chunkSteps","ReadableStreamGetNumReadRequests","ReadableStreamHasDefaultReader","IsReadableStreamDefaultReader","IsReadableStreamLocked","defaultReaderBrandCheckException","cancel","read","resolvePromise","rejectPromise","_errorSteps","e","ReadableStreamDefaultReaderRead","releaseLock","ReadableStreamDefaultReaderRelease","hasOwnProperty","_disturbed","ReadableStreamDefaultReaderErrorReadRequests","readRequests","defineProperties","enumerable","toStringTag","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorImpl","preventCancel","_ongoingPromise","_isFinished","_preventCancel","next","nextSteps","_nextSteps","returnSteps","_returnSteps","ReadableStreamAsyncIteratorPrototype","IsReadableStreamAsyncIterator","_asyncIteratorImpl","streamAsyncIteratorBrandCheckException","return","AcquireReadableStreamAsyncIterator","impl","iterator","create","setPrototypeOf","NumberIsNaN","isNaN","_b","_c","CreateArrayFromList","slice","CopyDataBlockBytes","dest","destOffset","src","srcOffset","n","TransferArrayBuffer","O","transfer","buffer","structuredClone","IsDetachedBuffer","detached","byteLength","ArrayBufferSlice","begin","end","ArrayBuffer","GetMethod","receiver","prop","func","String","CreateAsyncFromSyncIterator","syncIteratorRecord","syncIterable","asyncIterator","nextMethod","SymbolAsyncIterator","for","GetIterator","hint","IteratorNext","iteratorRecord","IteratorComplete","iterResult","Boolean","IteratorValue","IsNonNegativeNumber","CloneAsUint8Array","byteOffset","DequeueValue","container","pair","_queue","_queueTotalSize","EnqueueValueWithSize","Infinity","RangeError","PeekQueueValue","ResetQueue","isDataViewConstructor","ctor","DataView","isDataView","view","arrayBufferViewElementSize","BYTES_PER_ELEMENT","ReadableStreamBYOBRequest","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","_view","respond","bytesWritten","_associatedReadableByteStreamController","ReadableByteStreamControllerRespond","respondWithNewView","isView","ReadableByteStreamControllerRespondWithNewView","ReadableByteStreamController","byobRequest","IsReadableByteStreamController","byteStreamControllerBrandCheckException","ReadableByteStreamControllerGetBYOBRequest","desiredSize","ReadableByteStreamControllerGetDesiredSize","_closeRequested","_controlledReadableByteStream","ReadableByteStreamControllerClose","enqueue","ReadableByteStreamControllerEnqueue","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","_cancelAlgorithm","ReadableByteStreamControllerClearAlgorithms","ReadableByteStreamControllerFillReadRequestFromQueue","autoAllocateChunkSize","_autoAllocateChunkSize","bufferE","pullIntoDescriptor","bufferByteLength","bytesFilled","minimumFill","elementSize","viewConstructor","readerType","_pendingPullIntos","ReadableByteStreamControllerCallPullIfNeeded","firstPullInto","controller","ReadableByteStreamControllerShouldCallPull","_pulling","_pullAgain","_pullAlgorithm","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerEnqueueClonedChunkToQueue","clonedChunk","cloneE","ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue","firstDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","maxBytesToCopy","min","maxBytesFilled","totalBytesToCopyRemaining","maxAlignedBytes","queue","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","ReadableStreamClose","_byobRequest","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerProcessReadRequestsUsingQueue","ReadableByteStreamControllerPullInto","readIntoRequest","ReadableStreamAddReadIntoRequest","emptyView","ReadableByteStreamControllerRespondInClosedState","ReadableStreamHasBYOBReader","ReadableStreamGetNumReadIntoRequests","ReadableByteStreamControllerRespondInReadableState","remainderSize","ReadableByteStreamControllerRespondInternal","_started","firstPendingPullInto","transferredBuffer","ReadableStreamError","entry","SetUpReadableStreamBYOBRequest","_strategyHWM","viewByteLength","SetUpReadableByteStreamController","startAlgorithm","pullAlgorithm","cancelAlgorithm","highWaterMark","r","SetUpReadableByteStreamControllerFromUnderlyingSource","underlyingByteSource","start","pull","convertReaderOptions","mode","convertReadableStreamReaderMode","convertByobReadOptions","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","_readIntoRequests","IsReadableStreamBYOBReader","byobReaderBrandCheckException","rawOptions","ReadableStreamBYOBReaderRead","ReadableStreamBYOBReaderRelease","ReadableStreamBYOBReaderErrorReadIntoRequests","readIntoRequests","ExtractHighWaterMark","strategy","defaultHWM","ExtractSizeAlgorithm","convertQueuingStrategy","init","convertQueuingStrategySize","convertUnderlyingSink","original","abort","write","convertUnderlyingSinkAbortCallback","convertUnderlyingSinkCloseCallback","convertUnderlyingSinkStartCallback","convertUnderlyingSinkWriteCallback","assertWritableStream","IsWritableStream","isAbortSignal","aborted","supportsAbortController","AbortController","createAbortController","WritableStream","rawUnderlyingSink","rawStrategy","underlyingSink","InitializeWritableStream","sizeAlgorithm","SetUpWritableStreamDefaultControllerFromUnderlyingSink","locked","streamBrandCheckException$2","IsWritableStreamLocked","WritableStreamAbort","WritableStreamCloseQueuedOrInFlight","WritableStreamClose","getWriter","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","CreateWritableStream","writeAlgorithm","closeAlgorithm","abortAlgorithm","SetUpWritableStreamDefaultController","WritableStreamDefaultController","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_abortReason","_abortController","_promise","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","closeRequest","writer","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerClose","WritableStreamAddWriteRequest","writeRequest","WritableStreamDealWithRejection","WritableStreamFinishErroring","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","WritableStreamUpdateBackpressure","backpressure","defaultWriterReadyPromiseReset","_ownerWritableStream","defaultWriterReadyPromiseInitialize","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterGetDesiredSize","_readyPromise","WritableStreamDefaultWriterAbort","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","WritableStreamDefaultControllerGetDesiredSize","releasedError","chunkSize","WritableStreamDefaultControllerGetChunkSize","WritableStreamDefaultControllerWrite","closeSentinel","abortReason","IsWritableStreamDefaultController","defaultControllerBrandCheckException$2","signal","_controlledWritableStream","WritableStreamDefaultControllerError","_abortAlgorithm","WritableStreamDefaultControllerClearAlgorithms","_strategySizeAlgorithm","_writeAlgorithm","_closeAlgorithm","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerAdvanceQueueIfNeeded","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","enqueueE","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","sinkClosePromise","_readyPromise_resolve","_readyPromise_reject","getGlobals","globalThis","self","global","globals","isDOMExceptionConstructor","getFromGlobal","DOMException","createPolyfill","captureStackTrace","writable","ReadableStreamPipeTo","source","preventClose","preventAbort","shuttingDown","currentWrite","actions","shutdownWithAction","all","action","pipeLoop","resolveLoop","rejectLoop","pipeStep","resolveRead","rejectRead","isOrBecomesErrored","shutdown","isOrBecomesClosed","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamDefaultController","IsReadableStreamDefaultController","defaultControllerBrandCheckException$1","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamDefaultControllerCanCloseOrEnqueue","ReadableStreamDefaultControllerClose","ReadableStreamDefaultControllerEnqueue","ReadableStreamDefaultControllerError","ReadableStreamDefaultControllerClearAlgorithms","_controlledReadableStream","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamDefaultControllerHasBackpressure","SetUpReadableStreamDefaultController","SetUpReadableStreamDefaultControllerFromUnderlyingSource","underlyingSource","ReadableStreamTee","cloneForBranch2","ReadableByteStreamTee","ReadableStreamDefaultTee","reason1","reason2","branch1","branch2","resolveCancelPromise","reading","readAgain","canceled1","canceled2","cancelPromise","chunk1","chunk2","cancel1Algorithm","compositeReason","cancelResult","cancel2Algorithm","CreateReadableStream","readAgainForBranch1","readAgainForBranch2","forwardReaderError","thisReader","pullWithDefaultReader","pull1Algorithm","pull2Algorithm","pullWithBYOBReader","forBranch2","byobBranch","otherBranch","byobCanceled","otherCanceled","CreateReadableByteStream","isReadableStreamLike","getReader","ReadableStreamFrom","ReadableStreamFromDefaultReader","ReadableStreamFromIterable","asyncIterable","nextResult","returnMethod","returnResult","readPromise","readResult","convertUnderlyingDefaultOrByteSource","convertUnderlyingSourceCancelCallback","convertUnderlyingSourcePullCallback","convertUnderlyingSourceStartCallback","convertReadableStreamType","convertIteratorOptions","convertPipeOptions","assertAbortSignal","convertReadableWritablePair","readable","ReadableStream","rawUnderlyingSource","InitializeReadableStream","streamBrandCheckException$1","pipeThrough","rawTransform","transform","pipeTo","destination","tee","convertQueuingStrategyInit","byteLengthSizeFunction","ByteLengthQueuingStrategy","_byteLengthQueuingStrategyHighWaterMark","IsByteLengthQueuingStrategy","byteLengthBrandCheckException","countSizeFunction","CountQueuingStrategy","_countQueuingStrategyHighWaterMark","IsCountQueuingStrategy","countBrandCheckException","convertTransformer","flush","readableType","writableType","convertTransformerCancelCallback","convertTransformerFlushCallback","convertTransformerStartCallback","convertTransformerTransformCallback","TransformStream","rawTransformer","rawWritableStrategy","rawReadableStrategy","writableStrategy","readableStrategy","transformer","readableHighWaterMark","readableSizeAlgorithm","writableHighWaterMark","writableSizeAlgorithm","startPromise_resolve","InitializeTransformStream","SetUpTransformStreamDefaultControllerFromTransformer","_transformStreamController","IsTransformStream","streamBrandCheckException","_readable","_writable","startPromise","TransformStreamDefaultSinkWriteAlgorithm","TransformStreamDefaultSinkAbortAlgorithm","TransformStreamDefaultSinkCloseAlgorithm","TransformStreamDefaultSourcePullAlgorithm","TransformStreamDefaultSourceCancelAlgorithm","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorWritableAndUnblockWrite","TransformStreamDefaultControllerClearAlgorithms","TransformStreamUnblockWrite","TransformStreamDefaultController","IsTransformStreamDefaultController","defaultControllerBrandCheckException","_controlledTransformStream","TransformStreamDefaultControllerEnqueue","TransformStreamDefaultControllerError","terminate","TransformStreamDefaultControllerTerminate","SetUpTransformStreamDefaultController","transformAlgorithm","flushAlgorithm","_transformAlgorithm","_flushAlgorithm","_finishPromise","_finishPromise_resolve","_finishPromise_reject","transformResultE","readableController","TransformStreamDefaultControllerPerformTransform","defaultControllerFinishPromiseReject","defaultControllerFinishPromiseResolve","flushPromise","factory","ieee754","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","pow","rt","log","LN2","base64","base64Js","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","indexOf","tripletToBase64","num","output","require$$0","require$$1","customInspectSymbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","actual","fromString","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","isArray","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","leadSurrogate","base64clean","dst","alphabet","table","i16","process","emitWarning","assign","require$$2","Blob","require$$3","blob","ctrl","arrayBuffer","toIterator","clone","part","_Blob","endings","blobParts","encoder","test","text","decoder","TextDecoder","decode","it","relativeStart","relativeEnd","span","added","hasInstance","object","File","lastModified","fileBits","fileName","t","h","f","FormData","entries","o","some","append","filter","l","getAll","keys","FetchBaseError","FetchError","systemError","errno","erroredSysCall","syscall","NAME","isURLSearchParameters","sort","isBlob","pipeline","promisify","Stream","INTERNALS","Body","body","boundary","types","isAnyArrayBuffer","B","C","p","formDataToBlob","Readable","disturbed","error_","bodyUsed","consumeBody","formData","ct","headers","startsWith","parameters","toFormData","multipartParser","json","accum","accumBytes","destroy","readableEnded","_readableState","ended","every","deprecate","instance","p1","p2","getBoundary","PassThrough","pipe","getNonSpecFormDataBoundary","extractContentType","validateHeaderName","http","validateHeaderValue","Headers","raw","isBoxedPrimitive","Proxy","Reflect","thisArg","reduce","property","redirectStatus","isRedirect","Response","contentType","statusText","counter","ok","redirected","redirect","URL","response","stripURLForUseAsAReferrer","originOnly","protocol","username","password","pathname","search","ReferrerPolicy","isUrlPotentiallyTrustworthy","hostIp","host","hostIPVersion","isIP","endsWith","isOriginPotentiallyTrustworthy","isRequest","doBadDataWarn","Request","input","parsedURL","toUpperCase","inputBody","referrer","parsedReferrer","follow","compress","agent","insecureHTTPParser","referrerPolicy","formatUrl","validateReferrerPolicy","getNodeRequestOptions","contentLengthValue","totalBytes","getLengthSync","hasKnownLength","getTotalBytes","referrerURLCallback","referrerOriginCallback","policy","referrerSource","referrerURL","referrerOrigin","currentURL","determineRequestsReferrer","lastOffset","href","getSearch","path","AbortError","MessageChannel","port","port1","ab","err","nodeDomexception","stat","fs","supportedSchemas","options_","uri","firstComma","meta","charset","typeFull","unescape","dataUriToBuffer","send","https","abortAndFinalize","request_","errorCallback","LAST_CHUNK","previousChunk","isChunkedTransfer","properLastChunkReceived","socket","onSocketClose","onData","prependListener","fixResponseChunkedTransferBadEnding","version","endedWithEventsCount","_eventsCount","hadError","response_","setTimeout","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","orig","hostname","isDomainOrSubdomain","responseReferrerPolicy","policyTokens","parseReferrerPolicyFromHeader","once","pump","responseOptions","statusMessage","codings","zlibOptions","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","writeToStream","catch","S","START_BOUNDARY","HEADER_FIELD_START","HEADER_FIELD","HEADER_VALUE_START","HEADER_VALUE","HEADER_VALUE_ALMOST_DONE","HEADERS_ALMOST_DONE","PART_DATA_START","PART_DATA","END","lower","MultipartParser","flags","onHeaderEnd","onHeaderField","onHeadersEnd","onHeaderValue","onPartBegin","onPartData","onPartEnd","boundaryChars","ui8a","lookbehind","length_","previousIndex","boundaryLength","boundaryEnd","bufferLength","cl","mark","callbackSymbol","dataCallback","markSymbol","_lookbehind","match","parser","headerField","headerValue","entryValue","entryName","filename","entryChunks","appendToFile","appendFileToFormData","file","appendEntryToFormData","_fileName","iconUrl","iconBackground","createConnector","mobile","getUri","connectConfig","accounts","getAccounts","nativeCurrency","symbol","decimals","rpcUrls","public","onAccountsChanged","onChainChanged","onConnect","onDisconnect","blockExplorers","testnet","setState","useState","useEffect","handleStateChange","isLoading","setIsLoading","setUser","setError","Component","walletOptions","props","React","createElement"],"mappings":"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","x_google_ignoreList":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}